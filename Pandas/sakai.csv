"Student ID","Student Name","Midterm Exam [100]","* Midterm Exam","Final Exam [100]","* Final Exam","zybooks [100]","* zybooks","ST1: Exploring C [100]","* ST1: Exploring C","ST2: albaCore Assembly Language [100]","* ST2: albaCore Assembly Language","ST3: Introduction to Verilog [100]","* ST3: Introduction to Verilog","Homework 01 [100]","* Homework 01","ST4: Introduction to Modelsim [100]","* ST4: Introduction to Modelsim","ST5: Adder Subtractor Display [100]","* ST5: Adder Subtractor Display","ST6: ALU with LCD Display [100]","* ST6: ALU with LCD Display","Homework 02 [100]","* Homework 02","ST7: LFSR [100]","* ST7: LFSR","zybooks 2 [100]","* zybooks 2","Gradescope Trial [2]","* Gradescope Trial","zyBooks 8.1-8.5 [79]","* zyBooks 8.1-8.5","Self-Test Intro FSM [5]","* Self-Test Intro FSM","Self-Test FSM Preferred Implementation [4]","* Self-Test FSM Preferred Implementation","zyBooks 8.6-8.10 [76]","* zyBooks 8.6-8.10","zyBooks 9.1-9.5 [68]","* zyBooks 9.1-9.5","zyBooks 9.6-9.9 [57]","* zyBooks 9.6-9.9","Self-Test Observations [1]","* Self-Test Observations","Homework 3:  Finite State Machines [70]","* Homework 3:  Finite State Machines","Self-Test RTL with Tables [5]","* Self-Test RTL with Tables","Self-Test RTL Tables to Verilog [3]","* Self-Test RTL Tables to Verilog","Homework 4A: HLSM Tables [40]","* Homework 4A: HLSM Tables","Self-Test: Memory, MaxFinder, and albaCore HLSM [6]","* Self-Test: Memory, MaxFinder, and albaCore HLSM","Self-Test albaCore Processor [4]","* Self-Test albaCore Processor"
"fabbott","Abbott, Flahavan","97",,,,"99",,"91","Part 3: Q3: missing hex representations for (-2). Q4: most positive is 2147483647 (-1). Q6: No mention of C giving no error (-1)Part 4: Q1: This is the decimal representation, not the hex (-2).Part 5: Incorrect negation for 0x3 -- should be 0xfffffffc because of leading 0s. (-2) Code did not print results of OR or NOT (-1) ","98","Part 2, Q6 (-0.5): A is the memory address, which is 0xA0.Part 3, Q3 (-1): Missing value of A[2].Part 6, Q5 (-0.5): The memory address of jal fun2 can be seen in the program output when running, or by counting the lines of instructions, starting at 0. In this case, jal fun2 is the 5th instruction, making our count 4. Then we add 1, because when we return we want to execute the next instruction, so 4+1 = 5.Part 6, Q8: While your method works for this case, better practice would be to restore the value of r14 back to r15, and then doing jr r15 from fun1. No points deducted.","100","","98","netid: fabbott
Score: 98.0

Comments: 
    Problem 3: -2.0; Part C, D: both improper conversion to negative (-2)","86","(-3) - Incorrect blue line description(-2) - Testbench uses 1'b when you are trying to input 3'b(-1) - modelsim doesn't use the correct display types(-8) - The vertical line at 0 is the timestamp, it doesn't have anything to do with the waveform outputs. (occurs 3 times)","86","No .qar file included. -10Did not complete subtractor table. (-4)-shayden2","100","Good work","98","netid: fabbott
Score: 98.0

Comments: 
    Problem 6: -2.0; Missing a'bc' minterm. (-2)","99.5","-0.5: hex for row 3 in first question is A, not 10 ","99",,,,"79",,"5",,"4",,"76",,"0",,"57",,"1",,"69",,"5",,"3",,"36",,"6",,,
"jagron","Agron, Joshua","96.5",,,,"100",,"100","Great work!","98.5","Part 2, Q6 (-1.5): A is the address, which is 0xA0. A[0] is the content of the first element, which is 7. *A is the same as A[0], 7.Last Question: Perfect!","97","-1 port logic can only be set once with an assign statement-1 not connecting a port will still compile in Quartus-1 out0 is wrong. IMPORTANT: be cognizant of DeMorgan's Law with logic. (ab)' is NOT the same as a'b'; it is instead equivalent to a' | b'. Get that right and it will save you some grief later on. ","99","netid: jagron
Score: 99.0

Comments: 
    Problem 5: -1.0; Part D: No overflow (-1 point)","100","Great work!","96.5","ripple carry adder tb waveform not shown in signed decimal. (-1)ripple carry subtractor  tb waveform not shown in signed decimal. (-1)Second Karnaugh map is incorrect. (-1)Fourth Karnaugh map could be simplified by drawing a circle encapsulating top left and right ones. (-0.5)","99","-1: opcode in first picture is set to 7 instead of 5 ","99","netid: jagron
Score: 99.0

Comments: 
    Problem 7: -1.0; (a) Need to use on and off for CMOS elements.","99","-1: Missing q initialization for flipflop. ","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"68",,"5",,"3",,"39",,"6",,,
"mahrens2","Ahrens, Matthew","81",,,,"26",,"0","Not submitted","0","No submission","100","","0","netid: mahrens2
Score: 0","96","Please be prompt with your submission in the future.(-4) - The testbench uses weird inputs. Idk what you are trying to test with these inputs. ","46.25","ripple carry adder table values should be represented using 3 bit signed decimal. (-3.5)ripple carry adder tb waveform should be displayed in signed decimal, not binary. (-1)system de2 tb waveform should show the hex values in binary. (-1)ripple carry subtractor tb waveform should be displayed in signed decimal, not binary. (-1)Remember when making Karnaugh maps, always use the least number of circles possible. With the second map, it is possible to just make two horizontal circles and cover all four ones, the vertical circle you made is redundant. (-0.5) In the last Karnaugh map, you can draw a circle from the top left one to the top right one (which would then be circled twice). (-0.5)Raw Score: 92.5Late Submission: -50%Final Score: 46.25","100","Good work","95","netid: mahrens2
Score: 95.0

Comments: 
    Problem 3: -1.0; Table wrong: a'b'c is not an option for F
    Problem 4: -1.0; Should be (a'+b'+d), not (a'+b'+d') (-1)
    Problem 5: -3.0; Part a. Incorrect distribution. (-3)","100","","99",,,,"75",,"5",,"4",,"72",,"59",,"52",,"1",,"65",,"5",,"3",,"40",,"6",,,
"wbailey2","Bailey, William","80",,,,"100",,"88","Part 3: Q3: Most positive should be 0x7fffffff and most negative should be 0x80000000 (-2). Q4: Incorrect most positive/most negative decimal values (-2) Incorrect most positive/negative program but matches your values above. Incorrect addition program (when you add 1 to your ""maxhex"" variable, you get a higher value, so intuitively that could not have been the max value) (-2).Part 4: Missing an f in the program so you get an incorrect value (should be 8 f's) (-1)Part 6: No right shift of negative number (-5)","98.5","Part 1, Q3 (-0.5): The question asks for the hex encoding of the whole instruction, which includes 0x5, but in total is 0x7105.Part 3, Q3 (-1): Missing value of A[2].Part 6, Q8: While your method works for this case, better practice would be to store the value of r15 to a different register. Before the call to fun2, fun1 can copy r15 to r14, for example, and then call fun2. Then, when fun2 does a jr back to fun1, you can restore the value by copying r14 back to r15. No points deducted.Well done.","100","","98","netid: wbailey2
Score: 98.0

Comments: 
    Problem 5: -2.0; Part C: Overflow Part D: No overflow (-2 points)","98","(-2) - having a little more detail on the descriptions instead of just the screenshot would show your understanding.","98","Input to seven segment display waveform should be in decimal. (-0.5)ripple carry adder tb waveform should be displayed in signed decimal. (-1)Remember with Karnaugh maps you want to make the least number of circles possible, so in the second problem you would only need the two horizontal circles, not the vertical one. (-0.5)","95","-0.5: Not all switches connected to LEDs in text_and_data_de2-0.5: Missing colon between b and its value in text_and_data-1: b set to 1 instead of 2 in first image-3: No waveforms shown for op = 0, 1, or 2 ","96","netid: wbailey2
Score: 96.0

Comments: 
    Problem 1: -2.0; No properties of Boolean alegbra stated
    Problem 5: -1.0; Part b. Leave the answer as a'b'd.
    Problem 6: -1.0; Should not include minterm ab'c', ab'c, or abc.","98","-2: Should not have a red line in waveform.","100",,,,"79",,,,,,"74",,"65",,"57",,,,"57",,,,,,"40",,,,,
"dbalsar2","Balsara, Daraius","93",,,,"100",,"100","Great work!","98","Part 1, Q2 (-0.5): The memory location of the add instruction can be seen in the output of running the code, or counting the lines of instructions, starting from 0. In this case, the add is the third instruction, so the memory location is 2.Part 2, Q6 (-0.5): *A refers to the value at memory location A, which would be 7 in this case.Part 4, Q2 (-0.5): While the bz was not taken, it still has a displacement value as part of the instruction code. In this case, the displacement is 2.Part 6, Q7 (-0.5): Yes, there is an infinite loop, but not alternating between fun1 and fun2. After returning to fun1 from fun2, r15 is always pointed at fun1, so it is a loop of only fun1.Part 6, Q8: While your method works for this case, better practice would be to store the value of r15 to a different register. Before the call to fun2, fun1 can copy r15 to r14, for example, and then call fun2. Then, when fun2 does a jr back to fun1, you can restore the value by copying r14 back to r15. No points deducted.","100","","99","netid: dbalsar2
Score: 99.0

Comments: 
    Problem 7: -1.0; Answer correct, but not properly formatted (-1 point)","100","great work!","88.5","Decoder waveform should show input as decimal values. (-0.5)ovf should be an output from your add3 module. (-0.5)ripple carry adder table should use signed decimal values. (-4)ripple carry adder tb waveform should show values in signed decimal. (-1)ripple carry subtractor tb waveform should show values in signed decimal. (-1)ripple carry subtractor table not filled out. (-4)Remember with Karnaugh maps you want to make the least number of circles. So for the second one you only need the two horizontal circles. (-0.5)","96","-1: Inputs b should be 1 and op should be 6 in the test bench for the right shift-3: Incorrect waveforms due to aforementioned mistakes ","92","netid: dbalsar2
Score: 92.0

Comments: 
    Problem 4: -1.0; Answer should be left as (a’ + c)(a’ + b’ + d)(a’ + c’ + d’). (-1)
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 7: -4.0; (c) Didn't provide expression for F and G.
    Problem 8: -2.0; r7[2] = r0; should use store and not load; goto loop should use br rather than jal because it's not a function call","100","","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"66",,"5",,"3",,"39",,"6",,,
"jbannan","Bannan, John","89",,,,"100",,"98","Part 3: Q2: Correct, just note that the leftmost bit is only the leftmost binary bit, not the hex digit representing those 4 bits. Q6: C does not care -- there is no error; the number just overflows (-1).Part 5: Incorrect hex representation for ~a -- should be 0xC (-1). Good work!","97.5","Part 1, Q5 (-0.5): Yes, the return comes from the quit function, but the return value comes from the value stored in r0.Part 2, Q6 (-1): A[0] and *A both refer to the value stored at memory location A, which is 7.Part 4, Q2+3 (-1): The question are asking for the displacements of the instructions, which are 2 and -4, respectively. Your methods for determining the displacements are correct.Part 6, Q8: While your method works for this case, better practice would be to store the value of r15 to a different register. Before the call to fun2, fun1 can copy r15 to r14, for example, and then call fun2. Then, when fun2 does a jr back to fun1, you can restore the value by copying r14 back to r15. No points deducted.","98.5","-1 bad logic in out1 of tabulator module-0.5 bad logic from earlier resurfaces in RTL netlist","93","netid: jbannan
Score: 93.0

Comments: 
    Problem 2: -1.0; Binary numbers should all be 8 bits
    Problem 5: -5.0; Missing Hex values for sums
    Problem 6: -1.0; Part E does not overflow.","100","Great work!!","92.5","Please crop your screenshots so they are easier to view.Overflow module is incorrect. (-2)ripple carry adder table should use signed decimals. (-4)Subtractor board picture shows a and b with flipped values. (-1)Remember with Karnaugh maps you want to make the least number of circles. For the second problem, you would only need the two horizontal circles, the vertical circle is redundant. (-0.5)","100","Good work","98","netid: jbannan
Score: 98.0

Comments: 
    Problem 4: -1.0; Answer should be left as (a’ + c)(a’ + b’ + d)(a’ + c’ + d’). (-1)
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)","100","","100",,,,"79",,"4",,"4",,"76",,"68",,"49",,"1",,"63",,"4",,"3",,,,"6",,,
"sbedford","Bedford, Savannah","66",,,,"57",,"83","Part 1: Incorrect ASCII value -- should be ""J"" (-1)Part 3: Q2: Incorrect -- f does not represent 0; negative numbers are represented using 2s complement and thus the lower negative numbers will begin with 1111... (0xfff...) (-1). Q3: Incorrect, most positive will be 0x7fffffff and most negative will be 0x80000000 (-2). Q4: most negative will be -2147483648 (-1). Part 5: Hex value for ~a in the table should be 0xC (only 4 bits) (-1). Incorrect explanation for why ~a = 0xfffffffc (-1). Missing result of AND mask in program output (-1). Part 6: Incorrect results for left shifts (should be 10100 (decimal 20) and 101000 (decimal 40)) (-2). In your code, you enter a value as 00001010, which is interpreted as octal by the compiler due to the leading 0. This is the reason for the bizarre output of the shift operators. Preface with 0b to enter a binary value. (-2) Missing right shift of a negative number (-5).","0","No submission","99","-1 connecting ports with same name is possible in Quartus ","0","netid: sbedford
Score: 0","0","No submission","0"," No submission","0","","0","netid: sbedford
Score: 0","0","No submission","74",,,,"0",,,,,,"0",,"0",,"0",,,,,,,,,,,,,,,
"cbenyah","Benyah, Caitlin","72",,,,"100",,"90","Part 6: Almost correct -- these shift results would be correct if we only had 4 bits available, but since integers are stored using 32 bits in C, the value would not get truncated, so the results would be 10100 (20) and 101000 (40). (-2). Missing C implementation of left/right shifts (should have actually coded these operations using << and >>) (-8).Otherwise, great work!","95","Part 1, Q6 (-0.5): Be careful with order of operations. ~ab does not = ~(ab).P2, Q2 (-.5): Yes, 7:4 = b, but the reason why is that b is the register number for r11, which is argument ra for the store instruction.P2, Q3 (-.5): Yes, 7:4 = 0, but the reason why is that 0 is the displacement for the load instructionP2, Q4 (-.5): The question asks for the value of &A, which is 0xa0.P2, Q5 (-0.5): The question asks for the value of *(&A), which is 7.P4, Q1 (-.5): The 0x02 value is the immediate, but the meaning of the value is the branch displacement.P4, Q2 (-.5): The displacement for the bz instruction is 2, because the pc needs to be moved forward two places. You are correct for the way it is determined.P6, Q6 (-.5): r15 is still pointing at the return place for fun1, which would be the line after jal fun1 is called, which is address 5.P6, Q8 (-1): Almost. fun2 is currently returning to where jal fun1 was instructed, without going back through fun1. Instead, try having the jr in fun2 return to r15, and then return from fun1 using r5.","95.5","-3 missing ampersands in tabulator logic-0.5 bad tabulator logic leads to adder in tabulator RTL for some reason-1 unsatisfactory test results response. Unlikely that this logic would work properly and response is very vague","93","netid: cbenyah
Score: 93.0

Comments: 
    Problem 4: -1.0; Part C: hex representation is 0x43
    Problem 5: -1.0; Part D does not overflow
    Problem 7: -5.0; Got RGB order inverted, used wrong ints for second mask (-5 points)","100","A note for the testbench; I won't take any points off, but don't switch between types as it will be more difficult to check later.","74","Did not include .qar file. (-10)Decoder waveform should show inputs as decimal values. (-1)Incorrect logic for overflow. (-2)ripple carry adder tb waveforms should be displayed in signed decimal. (-1)system tb should waveform should display inputs as decimal values.  (-1)ripple carry subtractor tb waveforms should be displayed in signed decimal. (-1)overflow is incorrect in subtractor and adder table. (-2)Did not do Karnaugh maps. (-8)","99","-1: Waveforms should have a hexadecimal radix","91","netid: cbenyah
Score: 91.0

Comments: 
    Problem 4: -1.0; Answer can be simplified further. (-1)
    Problem 6: -1.0; Should not include minterm ab'c', ab'c, or abc.
    Problem 7: -4.0; (c) didn't use inspection
    Problem 8: -3.0; Array values not initialized in Albacore code. Not all output of program shown.","100","","98",,,,"79",,"5",,"4",,"76",,"67",,"57",,"1",,"60",,"5",,"3",,"39",,"6",,,
"jberger8","Berger, Juan","80",,,,"100",,"100","Part 3: Q2 & Q3: Correct, but it is only the most significant binary bit (0/1) that determines the sign of a number, not the hex digit representing the leftmost 4 bits. Otherwise, great work!","97.5","Part 3, Q1 (-1): The 16-bit address associated with label A is the concatenation of the high(A) and low(A) values, which would be 0x0003. The value at memory location 0x0003 would be the data value 0xcafe.Part 4, Q1 (-0.5): The first four bits tell us the op code of the instruction, which is bn. Part 5, Q1 (-1): You have a bz that goes to label L1, which is not in your code anywhere.Well done.","97.5","-2 bad logic in tabulator: there is uninstantiated ""out2"" and it is wired wrong even if it were out0-0.5 bad logic in tabulator shows up again in RTL netlist","90","netid: jberger8
Score: 90.0

Comments: 
    Problem 5: -6.0; Part D does not overflow. Missing Part E
    Problem 6: -4.0; Incorrect overflow for parts A-D. (-4)","100","Great work!","75.5","Included .qpf, not .qar file. (-10)In your Karnaugh maps for the decoder, every bit of g is incorrect except for g[0]. (-6)decoder tb waveform should show inputs as decimal. (-1)overflow module is missing case of a & cin in the cout assign statement. (-0.5)overflow is incorrect in ripple carry adder table. (-1)ripple carry adder tb waveform should show values in signed decimal. (-1)system tb waveform should show inputs as decimal. (-1)ripple carry subtractor tb waveform should show values in signed decimal. (-1)Did not include photo of board with working subtractor. (-2)Remember with Karnaugh maps that you want to draw the fewest number of circles. So, with the second problem, only the two horizontal circles are necessary. (-0.5) Also, in the last problem, you can draw a circle between the top left and top right one. (-0.5)","78","-0.5: Instead of ""b"", you have ba"" in your text_and_data module-0.5: In text_and_data, you have 0p output instead of op-2: In text_and_data_de2, you used SW[7:4] instead of multiple inputs to your text_and_data module.-5: No image provided with switch inputs for a, b, op, and f-3: Using SW[3:0] instead of inputs to text_and_data in system_de2-6: Netlist for system_de2 is not actually of system_de2-5: No final board image provided","84","netid: jberger8
Score: 84.0

Comments: 
    Problem 4: -1.0; First term should be (a' + c). (-1)
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 6: -1.0; Should not include minterm ab'c', ab'c, or abc.
    Problem 8: -13.0; No ""finish"" flag. Couple of mistakes with ""r7 = A"" line. ""If (r3 ==0)"" line does not branch to right lcoation. No answrs to part (c) and (d)","97","-2: Didn't initialize the clk,,, produces a red line in waveform.-1: Waveform does not match expected results. ","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"70",,"5",,"3",,"34",,,,,
"jbigej","Bigej, Jack","96.5",,,,"100",,"97","Part 1: Decimal integer is 74 (-1)Part 5: Incorrect hex representation for ~a in the table; should be 0xC (-1). Incorrect explanation for why NOT a yields 0xfffffffc -- it is because the individual bits in 0x00000003 get flipped (-1). Otherwise, great work!","98.5","Part 1, Q4 (-0.5): The return happens as a result of the quit command, but the return code comes from the value of register 0.Part 3, Q3 (-1): Missing value of A[2] at the end of the program.Well done.","94.5","-0.5 no rule against connecting two ports of same name in Quartus-5 tabulator wired incorrectly. Must specify NOTs as well as ANDs and ORs in logic ","94","netid: jbigej
Score: 94.0

Comments: 
    Problem 5: -6.0; Part D does not overflow. Missing Part E","100","For the testbenches, use in = 3'b001 instead of what you did. Also, try not to use screenshots and use the snipping tool on the computer.","83.5","Did not include .qar file. (-10)ripple carry adder table should be in 2's complement. (-2)ripple carry adder tb waveform should show signed decimal. (1)system tb should show inputs as decimal. (-1)Incorrect decimal representation for 110 and 101 in subtractor table. (-1)In photo of board, a is set to 6 but b is set to 5, not 2. (-0.5)Remember with Karnaugh maps, you want to make as few circles as possible. So in the second problem, the vertical circle is redundant. (-1)","98.5","-0.5: Padded op with a 1 in your text_and_data, so all opcodes will show up left shifted by 1 on the display-1: op shows up as D instead of 5 ","98","netid: jbigej
Score: 98.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 6: -1.0; Should not include minterm ab'c', ab'c, or abc.","99","-1: Should not have a red line in waveform. ","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"66",,"5",,"3",,"40",,"6",,,
"jblanch2","Blanchard, Julia","91",,,,"100",,"92","Part 6: Your program should have actually demonstrated the use of the << and >> operators, not just printed the results. Also, you should have demonstrated shifting a negative number to the right (-8).Otherwise, great work!","98","Part 3, Q3 (-1): Missing value of A[2] at the end of the program.Part 4, Q1 (-0.5): Yes, 0x02 is the immediate value, but the question asks for the meaning of the value, which is the branch displacement.Part 4, Q2 (-0.5): The displacement for the bz instruction is what is added to the pc when the branch happens. In this case, going from bz to L2 requires two addresses forward, so the displacement is 2.Well done.","100","","88","netid: jblanch2
Score: 88.0

Comments: 
    Problem 2: -4.0; Part b: Incorrect, unsigned 8-bit binary numbers can go up to 255 (-2) Part d: Should be 01010001 and 0x51 (-2)
    Problem 3: -2.0; Part C, D: flipped to positive without keeping negative hex notation
    Problem 4: -1.0; Part D: put negative sign in front of hex
    Problem 5: -5.0; Does not determine whether there is overflow.","100","Great work!","89","Did not write out equations in Karnaugh maps. (-3)ripple carry adder tb waveform should use signed decimal. (-1)Did not complete subtractor table. (-4)ripple carry subtractor tb waveform should use signed decimal. (-1)Karnaugh map 1: You need another circle connecting the bottom two ones. (-0.5)Karnaugh map 2: The vertical circle is redundant. (-0.5)Karnaugh map 3: A one should be placed in the 0101 spot, not the 0110 spot. (-0.5)Karnaugh map 4: You need a circle between the top two ones. (-0.5)In general you want the least amount of circles that will cover every one. You are allowed to cross over from one side of the grid to the other, ie in problem 1 and 4.","91","-1: Input b should be 2 in the first image-8: Testbench code is your ALU module code.  ","97","netid: jblanch2
Score: 97.0

Comments: 
    Problem 4: -2.0; Answer is (a'+c)(a'+b'+d)(a'+c'+d') (-2)
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)","100","","81",,,,"77",,"5",,"4",,"72",,"65",,"57",,"1",,"70",,"5",,"3",,"40",,"6",,,
"jbottelb","Bottelberghe, Joshua","76",,,,"100",,"95","Part 3: Q3: This is technically correct, but more specifically, if the most significant binary bit is a 1, the number is negative, and if it is a 0, the number is positive. Part 5: Incorrect hex notation for ~a in table -- should be 0xC not 0x12 (-1).Part 6: Should have shifted 10 to the left twice, resulting in 20 and 40. (-2). Your explanation, while correct, does not capture the crucial element: shifting left by 1 bit doubles the number and shifting right by 1 bit halves the number (-2).Good work!","99","Part 2, Q1 (-1): The encoding order has nothing to do with the order of operations. It was a choice of the designer to encode the values in the way that they wanted.Well done!","95.5","-1 only wiring multiple outputs to single input will cause compiler problems-2 logic for tabulator out1 incorrect, e.g. includes in0&in1 twice in same line-1 logic written in doc for tabulator out1 persists in Quartus module-0.5 RTL netlist reflects logic errors in tabulator","95","netid: jbottelb
Score: 95.0

Comments: 
    Problem 5: -4.0; Incorrect binary for parts A, B, C, and D
    Problem 6: -1.0; Part E does not overflow. (-1)","98","(-2) - you red and blue line descriptions are fully described","75.5","Included .qpf file, not .qar file. (-10)All Karnaugh maps are incorrect except for q[0]. (-4)decoder tb waveform should show inputs as decimal. (-1)overflow module logic is incorrect. (-2)carry out of add3 should not be passed into your overflow module. Instead, you should pass in s[2]. (-1)adder table should use 3-bit 2's complement representation. Overflow is also incorrect. (-3)subtractor table should use 3-bit 2's complement representation. Overflow is also incorrect. (-3)In the second Karnaugh map, the vertical circle is redundant. (-0.5)","91","-1: op should 5 in the first image (I'm really not sure how you managed to get a division sign, but it shouldn't be there regardless)-8: Provided the code for your testbench a second time instead of your final system_de2","99","netid: jbottelb
Score: 99.0

Comments: 
    Problem 7: -1.0; (a) Need to use on and off for CMOS elements.","100","","100",,,,"79",,"5",,"4",,"72",,"65",,"52",,"1",,"68",,"5",,"3",,"39",,"6",,"4",
"pbrenna8","Brennan, Patrick","97",,,,"100",,"100","In your text output, you mixed up << and >> for right shifting, but the actual operation is done correctly, so just be careful with this in the future. Otherwise, great work!","93","Part 1, Q1 (-0.5): The hex encoding of the entire instruction takes all 16 bits of the instruction, which is 0x7105. 0x5 is just the encoding for the immediate.Part 2, Q6 (-1): *A indicates the value stored at the memory location of A. Since you already know A is 0xa0, and you know that you stored a 0x7 at that location, *A = 0x7.Part 4, Q1 (-1.5): You have the correct value of 0xC025, but the question asks for the meaning of each of those digits: C is the op code of bn, 02 is the branch displacement, and 5 is the condition register.Part 6, Q1 (-2): fun1 should be at address 6, and fun2 should be at address 8. You can double check this by looking at which line they are on. Counting commands starting at 0, the functions are located at their address values.Part 6, Q2 (-0.5): Same reasoning as the previous question, jal on line 3 has memory location 2, because we count up from 0.Part 6, Q5 (-0.5): Same reasoning, jal fun2 is at memory location 4.Part 6, Q7 (-1): The jump register calls do not alternate. Once fun2 returns to fun1, the jr at the end of fun1 returns to the beginning of fun1, creating a loop of one fun1.Part 6, Q8: While your method works for this case, better practice would be to store the value of r15 to a different register. Before the call to fun2, fun1 can copy r15 to r14, for example, and then call fun2. Then, when fun2 does a jr back to fun1, you can restore the value by copying r14 back to r15. No points deducted.","99.5","-0.5 no rule against connecting ports of same name in Quartus ","91","netid: pbrenna8
Score: 91.0

Comments: 
    Problem 5: -2.0; Incorrect binary and hex in part C
    Problem 8: -7.0; Two answers were wrong, shifting happened too early (-7 points)","100","Great work!","99","For the second Karnaugh map practice problem, you put a 1 in 110, not 111. This affects your circles and final answer. (-1)Great work.","94","-6: Netlist for text_and_data is actually the netlist for your ALU ","80","netid: pbrenna8
Score: 80.0

Comments: 
    Problem 2: -8.0; One step displayed, no properties of Booleran algebra stated
    Problem 4: -1.0; Answer is (a'+c)(a'+b'+d)(a'+c'+d') (-1)
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 7: -10.0; (a) Need to use on and off for CMOS elements. (b) Additionally minterm in G. (c) Didn't use inspection. (d) We wanted you to go from a reduced equation to a sum of minterms, not the other way around.","99","-1: Waveform for flipflop doesn't output the correct values.","100",,,,"79",,"5",,"4",,"75",,"68",,"57",,"1",,"63",,"5",,"3",,"39",,"6",,,
"tbrown25","Brown, Tarik","94.5",,,,"82",,"91","Part 3: Q2: Incorrect explanation; C does not just place f's in the leftmost parts of a negative number, it uses 2's complement -- the numbers used here just happen to be very small and so most of the leftmost bits of the 2's complement are 1's (-1). Q4: Missing hex representations of most positive/negative numbers (-2). Q5: Incorrect decimal representations of the most positive/negative numbers (-2). Q6: The value you overflow to is off by 1, due to the fact that you entered 2147483648 as your max val, which is actually 0x80000000 = -2147483648. The largest possible positive is 0x7fffffff. (-1). Part 4: Incorrect, largest unsigned int is 0xffffffff. Your programmed value matches this so I won't take off extra, but when outputting you use the max signed int instead of the max unsigned int (max_u). (-2)Part 6: The right shift of -10 by 1 bit should output -5, not +5. Your hex value is correct though. (-1)Good work!","97","Part 2, Q9 (-2): You correctly populate a register with the value 0xabcd, but you did not load the value of 0xef to a register, and then store it in the memory location of 0xabcd.Part 4, Q1 (-1): Be careful when distinguishing instructions--0xC represents the opcode for a branch if negative command. The branch command is different. Also, 0x02 represents the displacement of the branch, which is a bit more information that just ""the immediate 8 bits"". ","100","","96","netid: tbrown25
Score: 96.0

Comments: 
    Problem 5: -4.0; Incorrect binary and hex in parts A and B. Make sure to remember the carry.","100","Great work!","91","Overflow module logic is incorrect. (-2) This causes the overflow in your tables to be incorrect. (-2)system tb waveform should show inputs as decimal. (-1)Picture of board shows a and b reversed. (-0.5)subtractor table has incorrect values and overflow. (-2)Karnaugh map 1: You placed a one in 010, not 110. (-1)Karnaugh map 2: Remember that you want to use the fewest circles possible, so the vertical circle is redundant. (-0.5)","99","-0.5: Need 1 more bit of padding for op in text_and_data-0.5: Need to separate each character in ""op"" in text_and_data, as the LCD can only have one character per location","96","netid: tbrown25
Score: 96.0

Comments: 
    Problem 3: -1.0; abc' should be a solution
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 6: -2.0; Should not include minterm ab'c', ab'c, or abc. F(0, 1, 0) = 1","86","-1: Didn't initialize q in flipflop.-8: Appears to be the incorrect testbench posted for the flipflop,,, contact a TA I've looked at this wrong.-4: LSFR module initializations for each flipflop are a bit jumbled. -1: Waveform does not match expected values. ","100",,,,"69",,"5",,"4",,"76",,"66",,"55",,"1",,"66",,"4",,"3",,"39",,,,,
"bbudden","Budden, Bradley","98",,,,"99",,"100","Great work, code was very neat and comments/ descriptions were very helpful. Thank you!","100","Part 6, Q8: While your method of adding a new label works for this case, better practice would be to store the value of r15 to a different register. Before the call to fun2, fun1 can copy r15 to r14, for example, and then call fun2. Then, when fun2 does a jr back to fun1, you can restore the value by copying r14 back to r15. No points deducted.Well done.","100","","100","netid: bbudden
Score: 100.0","100","Great work!","98","overflow_detector should read ~a&~b&s, not ~a&b&s. (-0.5)ripple carry subtractor tb waveform should be in signed decimal. (-1)Karnaugh map 2: The vertical circle is redundant. You only need to include the two horizontal circles to cover all the ones. (-0.5)","100","Good work","99","netid: bbudden
Score: 99.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)","99","-1: Only did 10 clock cycles in testbench. ","98",,,,"79",,"5",,"4",,"75",,"68",,"57",,"1",,"70",,"5",,"3",,"39",,"6",,,
"jbuenvia","Buenviaje, Juan Sergio","74",,,,"100",,"88.5","Part 2, -1.5: Missing print statements for each number in its given format. All three numbers should be printed in all three formats.Part 3, -1: Checking the most significant bit is only one bit in binary, not one hex character. In this case, the most significant bit should be a 1 for the sign to be negative. F is equal to 1111, which is four bits.Part 3, -1: See explanation for previous question. The most negative will only have one bit as a 1 for it to be negative, meaning the F will actually be 1000, which is an 8 in hex, giving 0x80000000.Part 3, -0: Your C is correct for printing and adding the values, but the wrong values from the previous part meant that the print statements were displaying the wrong information. No points deducted.Part 3, -1: C does not care if an overflow happens. Yes, results can be incorrect because of the mistake of the programmer not taking into account the signed nature of 'int', but C will not give an error.Part 3, -0: After testing different numbers, return the values to what is specified in the document. Your print statement for -3 was still printing for -99999. No points deducted this time.Part 5, -2: Masks are in hex, not binary, so the ones in your answer are 0001 in binary. To fill the mask, you need to use 0s or Fs, which are 0000 or 1111. Changing all your ones to Fs results in the correct masks. Your program is correct assuming your masks are correct.Part 6, -5: decimal 10 is 1010 in binary, but shifting shifts the binary version, so instead of making the ones into twos and getting 2020, you move over, or 'shift' all the bits, and add a new bit on the end, to get 10100, which is 20 in decimal. When you program this, ints are entered as decimal, unless you use 0x or something else to change it, meaning your ten = 1010 is not actually 10, but 1010 in decimal. Same thing for negative values. Yes, shifting left doubles the value. Shifting right halves the value.","97","P2: -1 wrong memory locationP6: -2 Program does not store return address in R15 and does not copy return address, so jr 15 does not return to correct location","98","(-1) - Incorrect answer for ""Which of the following will fail to compile in Quartus""(-1) - Switched out1 and out0 for the boolean expressions Overall great work!!!","95","netid: jbuenvia
Score: 95.0

NOTE: Your submission is technically past the normal submission deadline. Please be prompt in the future or it will be a 50% deduction.

Comments: 
    Problem 3: -3.0; Only C is correct. A and B not supposed to be flipped, D improperly flipped
    Problem 4: -2.0; A, B not possible.","100","Be sure to only declare input and outputs from highest to lowest bit eg. [3:0]. Also, always submit your .qar file. It will be a 10% deduction starting with studio 5.Great work. -shayden2","85.5","-10: No QAR file-4: Equations not provided on Karnaugh maps-0.5: No `timescale 1ns/1ns in first testbench-2: Subtraction table incorrect, you added instead of subtracting (which would entail inverting b and adding that inverse to a)","100","","93","netid: jbuenvia
Score: 93.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 6: -1.0; Should not include minterm ab'c', ab'c, or abc.
    Problem 8: -5.0; No output in part (c)","88","No QAR (-10)Your clock rate in the first test bench is too fast, resulting in inaccurate results. Either set it to be #10, or change the intervals to #20 (-2) ","100",,,,"79",,"5",,"4",,"72",,"65",,"52",,"1",,"67",,"5",,"3",,"37",,"6",,"4",
"dcalvil2","Calvillo, Diego","96",,,,"100",,"100","Looks great!Try to use more labels in your print statements to organize your code better.","96","P1: -1 return value stored in R0, -2 the XOR operation seems to take in 3 and 5 as values and then manipulate them before doing the required AND and OR operationsP6: -1 need to copy return value back to R14 or else program will loop indefinitely","98","(-2) - Using both LEDR and LEDG for system_de2 doesn't make the most sense. LEDR is currently not doing anything purposeful and it would make more sense to replace LEDG with LEDR.Great work!!! Good coding practice","100","netid: dcalvil2
Score: 100.0","98","Error 1: Modelsim should show a warning that port size doesn’t match for port ‘out’ (-2)Great work. -shayden2","100","Good job","100","","98","netid: dcalvil2
Score: 98.0

Comments: 
    Problem 5: -2.0; Part a. Answer should be left as a + bd. Your answer is in sum of minterms form. (-2)","100","Good job","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"70",,"5",,"3",,"39",,"6",,,
"ncamara","Camara, Nicole","75",,,,"100",,"99","Part 3, -1: Question 3. To determine the sign of an int, we only need to look at the most significant bit (on the left side). If it is a one, we know that it is negative, otherwise it is positive. We don't need to know if it increases backwards or forwards.Part 5, -0: Correct idea. Try to put the numerical value for questions like these in the text box (0xFFFFFFFC) instead of just putting them in your printf statements. No points deducted.Looks good!","98","P2: -1 value of *A is 7P6: -1 the AND operation copies r0 into r1","97","(-1) - Incorrect answer for ""Which of the following will fail to compile in Quartus""(-1) - Flipped out0 and out1(-1) - Accidentally wrote the 1 1 1 with nots, thus refering instead to 0 0 0Overall good work!","94","netid: ncamara
Score: 94.0

Comments: 
    Problem 5: -6.0; Part C overflows. Part D does not. Incorrect binary and hex values for parts C and D","100","When taking screenshots of waveforms, make sure that the name of the port is included in the screenshot.Great work. -shayden2","93","-1: No Netlist of 3-bit ripple carry adder-0.5: s_hex should have been shown in binary in Modelsim-3.5: Subtractor table and waveform should be of system, not system_de2, thus giving the difference instead of the seven segment display values-2: Did not write out equations in Karnaugh Maps","100","","85","netid: ncamara
Score: 85.0

Comments: 
    Problem 2: -1.0; missing an idempotent at the start
    Problem 3: -1.0; abc' is a solution
    Problem 4: -2.0; Correct answer is (a’ + c)(a’ + b’ + d)(a’ + c’ + d’). You include too many +'s. (-2)
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 6: -4.0; Correct minterms are a'b'c, a'bc', a'b'c', abc', and a'bc. (-4)
    Problem 7: -5.0; (b) G isn't a sum of minterms. (c) Note: You only need to inspect the pull down or pull up, not both. (d) F and G not reduced to a sum of minterms
    Problem 8: -1.0; Answer unclear in (d)","97","In your flip flop, q is a reg - therefore, you need to set an initial value (-1). This causes your waveform to have a red line in the first clock cycle. In your second test bench, you didn't run for 20 clock cycles. Remember - saying #5 clk = ~clk means that half of a clock cycle takes 5 ns. (-2)","100",,,,"79",,"3",,"4",,"76",,"68",,"52",,"1",,"70",,"4",,"3",,"38",,"6",,"4",
"scanepa","Canepa, Sophie","99",,,,"100",,"99","Make sure to put your name on your report.Part 3, -1: Question 1. Not exactly. We use two's complement to represent negative integers, which involves both switching the bits and adding 1 to the inverted value. Explained more in Verilog book 11.3.2.Looks good!","95","P1: -1 the register r0 holds the return codeP2: -2 did not put actual values of A[0] and *AP3: -1.5 wrong values for high(A), low(A), AP4: -0.5 answer does not state whether or not ""bn"" branch is taken","97","(-1) - Incorrect answer for ""Which of the following will fail to compile in Quartus""(-2) - In your _de2, it doesn't make sense to use both LEDG and LEDR i.e. you are assigning LEDR to SW for no real purpose. What makes the most sense for this lab is to use only the LEDR and set them to the outputs of the system. Good job!!","92","netid: scanepa
Score: 92.0

Comments: 
    Problem 2: -4.0; Missing hex representations (-4)
    Problem 3: -4.0; No hexadecimal on any of the answers","94","In Modelsim, a red line represents an unknown value, typically the output of a module with a disconnected input. (-3)Tabulator logic is backwards. (-1)Error 1: ModelSim transcript errors/warnings: warning that port size doesn’t match for port ‘out’ (-2)-shayden2","94.5","-0.5: Incomplete simplification for g4 equation.  Should be g4 = n0 + n2n1'-3: In adder table, failed to take negative values into account, and overflow is incorrect as a result-1: Did not set radices to decimal in modelsim for ripple carry adder-1: Did not invert b input to overflow detector in subtractor, so no overflow output in modelsim","100","","96","netid: scanepa
Score: 96.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 6: -1.0; Should not include minterm ab'c', ab'c, or abc.
    Problem 8: -2.0; Incorrect starting address for A[]","100","You don't need to expand waveforms into their individual bit waveforms in the future.Good job otherwise.","100",,,,"79",,"4",,"4",,"76",,"0",,"28",,"0",,"69",,"4",,"2",,"38",,"4",,,
"jcanfiel","Canfield, Joseph","98.5",,,,"100",,"99","Part 3, -0: Question 2, C does not represent negative integers by only inverting each bit. Instead, it uses two's complement. For example, -1 would be 0xFFFFFFFE if all the bits were flipped. That is why we add 1 after we flip the bits to get two's complement. Just a clarification. No points deducted.Part 3, -1: Question 6, Make sure you know that C does NOT 'care' about overflowing an int. This is important because now we know it is up to the programmer to ensure their variables are not overflowing and messing up other parts of their programs.Looks good!","98","P2: -1 wrong value at memory location 2P3: -1 wrong procedure to load 16 bit value into register","98","(-2) - Using both LEDR and LEDG for the system_de2 doesn't make the most sense. The assign for LEDR is unnecessary for this lab and it would make more sense to solely use LEDR for the outputs for the _de2","100","netid: jcanfiel
Score: 100.0","92","Tabulator has inverted logic. out[0] and out[1] are backward. (-1)Decoder has inverted logic for out[1] and out[2]. (-1)Did not include wire 'count'. (-2)Error 1:Quartus transcript errors/warnings: Warning (10236): Verilog HDL Implicit Net warning at
tabulator_system.v(10): created implicit net for &quot;COUNT&quot; (-2)
ModelSim transcript errors/warnings: warning that port size doesn’t match for port (-2)-shayden2","97","-1: Forgot to include s[2] in overflow detector instantiation in ripplecarryadder -1: Only last test case depicted in Modelsim waveform for full adder system_de2-1: For incorrect overflow waveform in subtractor testbench ","96","Last picture didn't load for me, might just be my computer,,, check this and contact a TA if this isn't an issue for you","100","netid: jcanfiel
Score: 100.0","99","Please make sure your waveforms are in the radix required by the question (-1). Otherwise, good job.","100",,,,"79",,"4",,"4",,"76",,"68",,"57",,"1",,"63",,"5",,"3",,"31",,"6",,,
"jcapdevi","Capdevielle, Joseph","92.5",,,,"100",,"97.5","Part 2, -1.5: The question asks the program to display all three representations of each number in the printf statement. The given value should also be printed in this way, instead of being directly typed into the string. Ex: printf(""74:\nHex: 0x%x\nASCII: %c\n\n"", i, i); should be printf(""%d:\nHex: 0x%x\nASCII: %c\n\n"", i, i, i);Part 3, -1: Make sure you know that C does NOT care about overflowing an int and having it roll over to the most negative int. No error means it is up to the programmer to keep their data types under control.Looks good!","99.5","","97","(-1) - Incorrect answer to ""Which of the following will fail to compile in Quartus""(-2) - LEDR is unnecessary in system_de2, currently, it will only confuse the user as to what output they are seeing on the board.","95","netid: jcapdevi
Score: 95.0

Comments: 
    Problem 5: -4.0; Even if there is overflow, there will still be a sum or a difference
    Problem 6: -1.0; Part E does not cause overflow. (-1)","0","No submission","100","Good job","100","","96","netid: jcapdevi
Score: 96.0

Comments: 
    Problem 4: -2.0; Correct answer is (a’ + c)(a’ + b’ + d)(a’ + c’ + d’). You include too many +'s. (-2)
    Problem 6: -1.0; Should not include minterm ab'c', ab'c, or abc.
    Problem 7: -1.0; (a) Use ""on"" and ""off"" for CMOS rather than 0 and 1.","99","Whenever you have a reg, it must have an initial value (-1). As such, your waveform has a red line in the first clock cycle. You don't need to expand waveforms into their individual bit waveforms in the future.","100",,,,"0",,"5",,"4",,"76",,"0",,"57",,"1",,"69",,"5",,"3",,"38",,"6",,,
"bcariddi","Cariddi, Brian","93.5",,,,"100",,"94.5","Part 2, -1.5: Missing decimal print statement for 74, hex print statement for 0x5A, and ascii print statement for 'a'.Part 3, -1: Question 2, Almost. The smallest negative numbers may start as the largest possible 32 bit hex values, but we need to notice the trend that as the value becomes more negative, the 'int' representation decreases.Part 3, -1: Question 3: Almost. We only need the most significant bit to tell us the sign of the number. We look at the first digit only if we are in binary. In hex, 0-7 and 8-f are the correct cutoff points, but that is not how we directly determine the sign of the int.Part 5, -2: Remember that hex values are the same as four binary values. In this case, if we take your zeroing mask of 0x0000FFFF and translate it to binary -> 0000 0000 0000 0000 1111 1111 1111 1111, we can see that it is zeroing out all but the last 16 bits of an int, instead of 4. This is the same idea for the mask to set the first 28 bits to ones: We need the first 28 bits to be 1s, followed by four 0s, which is 1111 1111 1111 1111 1111 1111 1111 0000, or 0xFFFFFFF0.","97.5","P1: -0.5 r0 is not a memory locationP2: -0.5 r12 is not a valueP6: -0.5 jal fun1 is located at address 2; -0.5 jal fun2 is located at address 4; -0.5 r15 = 5","99","(-1) - Incorrect answer for ""Which of the following will fail to compile in Quartus""Great work!! Your code shows that you are understanding _de2 modules!","98","netid: bcariddi
Score: 98.0

Comments: 
    Problem 5: -2.0; Part C overflows. Incorrect binary representation in part E.","100","In the future, be sure to test every value in your test bench, such as 0-7, not just 0-2.-shayden2","82.5","Part 1:-0.5: In complete simplification of g5 equation from Karnaugh map- equation should be g5 = n2'n0 + n2'n1 + n1n0-1: Testbench for seven segment decoder instantiates system_de2 instead of the decoder-3: No Modelsim output from seven segment decoder testbenchPart 2:-2: Incorrect hex and decimal values in adder table for s.The rows of s should read: {011, 0x3, 3 , 0}, {101,0x5, -3, 1}, {101, 0x5, -3, 0}, and {011, 0x3, 3, 1}. (Values you had wrong in bold)-0.5: Did not connect output for overflow in ripple carry adder testbench-1: No output for overflow in Modelsim, and did not set radices for a, b, and s to decimalPart 3:-0.5: wire sToSeg in system module is 1 bit too small, so the sum will be truncated before being input to the decoder-1: In your ripple carry adder waveforms, your s_hex is incorrect, likely for the above reason, and you are missing the first test casePart 4:-2: Missing photo of board (should provide even if incorrect, partial credit was available)Part 5:-3: Incorrect subtractor table values in a and s.  Check posted solutions for correct values -1: Did not connect overflow to testbench, and likewise it did not come up correctly in Modelsim.-2: No photo of board with subtractor  ","100","","99","netid: bcariddi
Score: 99.0

Comments: 
    Problem 7: -1.0; (a) Use ""on"" and ""off"" for CMOS rather than 0 and 1.","97","Based on the scale in the first waveform (and waveforms), I don't think you included the entire waveform (-2). Additionally, for this test, your clock rate should've been #10. (-1)You don't need to expand waveforms into their individual bit waveforms in the future. ","100",,,,"79",,"4",,"4",,"76",,"68",,"57",,"1",,"65",,"5",,"3",,"39",,"6",,,
"mcastel3","CastellanosGarcia, Marcelo","97",,,,"80",,"93","Part 3, -1: Question 2, Not exactly. Subtracting the absolute value of -1 from the max 32 bit value (0xFFFFFFFF) would result in 0xFFFFFFFE. Think of it as starting from 0xFFFFFFFF, and subtracting one for each number past -1, or two's complement. Part 3, -1: Question 3, We already know that it tells us if it is positive or negative. We need to know that a 1 as the most significant bit makes it negative, and vice versa.Part 3, -1: Question 4, missing the most negative value. Your code had the correct value.Part 3, -1: Question 6, Correct values, but we have to know that C does not 'care', as it does not throw an error when this happens.Part 5, -1: Correct masks, but make sure you are using the or operation, |, in your code. You may have accidentally used & for both masks.Part 6, -2: Almost. Shifting 1010 left gives us 10100 (decimal 20), not 0101. Shifting left again gives us 101000 (decimal 40). Correct answers of doubling and halving.","98.5","P1: -0.5 r0 produces return codeP3: -0.5 program needs to store value to A[2] at the endP4: -0.5 wrong opcode","94","(-4) - Your answer to the decoder is flipped. out0 should be in1' in0' and out3 should be in1 in0 (1 and 2 are flipped as well)(-2) - Using LEDR in your system_de2 is unnecessary and will make interpreting the output more difficult.Overall good job!!!","96","netid: mcastel3
Score: 96.0

Comments: 
    Problem 5: -4.0; Incorrect binary for parts B, C, and E. Incorrect hex for part E","91","Tabulator logic is incorrect. You cannot assign out1 or out0 because they do not exist. You initialized an output [1:0] out. You need to reference each bit with out[1] and out[0]. (-4)Be sure to always declare inputs and outputs from highest to lowest bit eg [2:0], not [0:2].Logic is inverted, showing a count of 2 when only one switch is high and vice versa. (-3)Error 1: ModelSim transcript errors/warnings: warning that port size doesn’t match for port ‘out’ (-2)-shayden2","87","Part 1:-4: Did not simplify any Karnaugh map equations, so g6, g5, and g4 are all incorrectPart 5:You seem to have edited some of the b binary values in the subtractor table, making much of it, and your testbench and modelsim, incorrect, as you then translated those incorrect binaries.  Please see solutions for correct table.-2: For the table-2: For incorrect testbench values-1: For incorrect Modelsim outputPart 6: -4: No minimized equations given for any Karnaugh map","100","","46","netid: mcastel3
Score: 92.0
-50% for late submission

Comments: 
    Problem 4: -2.0; Cannot factor out the a' like that. (-2)
    Problem 5: -2.0; Part a. Answer can be simplified to a + bd. (-1) Part b. Answer is a'b'd. (-1)
    Problem 6: -2.0; Should not include minterm ab'c', ab'c, or abc.
    Problem 8: -2.0; -2 Incorrect starting address for A[];","100","You don't need to expand waveforms into their individual bit waveforms in the future. ","100",,,,"79",,"5",,"4",,"76",,"0",,"48",,"1",,"66",,"5",,,,"38",,"6",,,
"jcepeda","Cepeda, Joshua","94.5",,,,"38",,"89","Part 3, -1: Question 2, Not exactly. Subtracting the absolute value of -1 from the max 32 bit value (0xFFFFFFFF) would result in 0xFFFFFFFE. Think of it as starting from 0xFFFFFFFF, and subtracting one for each number past -1, or two's complement. Part 3, -1: Question 3, We know that the most significant bit tells us the sign of the int, but we need to specify that a 1 makes it negative, and 0 makes it positive.Part 3, -2: Question 4, Only the most significant bit must remain a 1 or 0 to specify the sign, so the most positive int can have one 0, followed by 31 1s, which would be 0x7FFFFFFF. Some idea for the most negative. 0xF0000000 has four ones, followed by 28 zeros, but we can trim that to one 1, followed by 31 zeros: 0x80000000.Part 3, -1: Question 5, Your program had the right answer. Make sure you know the most negative number is one smaller than the most positive number is large: 2147483647 vs -2147483648.Part 5, -3: Missing binary operations table on page 4. Still empty.Part 6, -3. Missing the binary translation of decimal 10, as well as the computations for each of the two right shifts in the text box. The program is a separate question. Your ideas of halving and doubling are correct.","96","P1: -0.5 add stored at location 2; -2 misconception with what XOR is supposed to doP3: -0.5 low(A) should equal 3P4: -0.5 displacement for bz is 2; -0.5 displacement for br is -4","98","(-2) - Using LEDR for system_de2 is unnecessary and will just confuse output.good simplification of minterms!! but maybe a little too simplified","95","netid: jcepeda
Score: 95.0

Comments: 
    Problem 2: -1.0; Part a: hex representation should be 0x11
    Problem 3: -2.0; Negative hexadecimals not allowed
    Problem 5: -2.0; Part D does not overflow. Incorrect hex for part A. *Because there are only eight bits in each number, you do not need to include the overflow bit in your answer.","98","Be sure to always declare inputs and outputs from highest to lowest bit eg. [2:0], not [0:2]. This is convention and keeps you from getting confused about inverted signals and such.Waveform shows inverted logic for a count of one and count of two (most likely caused by changing your declaration of inputs/outputs, [0:2] vs [2:0]) (-2)","86.5","Part 1:-1: Incomplete simplifications for g5 and g4.  You should not leave any full minterms if you can help it, even though some circles might be slightly redundant.-1: Equations for g4 and g1 were coded in Verilog incorrectly.  g4 is missing a term and g1 has a missing invert on one of its termsPart 2:No points off, but Verilog full adder equations are inefficient, but correct-3: Overflow detector equation is incorrect.  The module should have a[2], b[2], and s[2] as inputs a, b, and s respectively, and check for overflow with the equation ovf = a&b&~s | ~a&~b&s  . Your equation will sometimes trigger when overflow is not present.-0.5: First full adder's cin should be set equal to 0.-3: Adder table largely incorrect, refer to solutions for correct versionPart 3:-0.5: Sum wire in system Verilog is 1 bit too small-0.5: Did not include sum wire in testbenchPart 5:-2: Did not change adder to subtractor, supposed to change first cin to 1 and invert all b inputs -1: Photo on board shows incorrect output, as you input the arguments in the incorrect orderPart 6:-1: Redundant term in second K-map   ","98","-2: incorrect values in first picture (op = 5, f = E) ","85","netid: jcepeda
Score: 85.0

Comments: 
    Problem 5: -2.0; Part a. Answer can be simplified to a + bd. (-1 )Part b. Answer is a'b'd. (-1)
    Problem 7: -13.0; (a) Use ""on"" and ""off"" for CMOS rather than 0 and 1. F and G are wrong, see solutions. (b) F and G not the courrect sum of minterms because of part A. (c) Inspection done incorrectly, seemingly F and G are always 0 according to these equations.","99","In your flip flop, initialize a reg by using '=', not '<='. (-1)Why did you use a time interval of 7 ns? While feasible, testbenching with numbers that aren't a multiple of the clock rate can lead to misleading results. ","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"62",,"5",,"3",,"39",,"6",,,
"jchang5","Chang, Jae Young","97",,,,"100",,"100","Well done!","100","","97","(-1) - Incorrect answer for ""Which of the following will fail to compile in Quartus""(-2) - Your use of LEDR in system_de2 is unnecessary and will make it more difficult to see your desired result.","98","netid: jchang5
Score: 98.0

Comments: 
    Problem 5: -2.0; Part C overflows. Part D does not.","98","Error 1: ModelSim transcript errors/warnings: warning that port size doesn’t match for port ‘out’ (-2)Great work. -shayden2","95","Part 1: -1: Forgot to define g[0] in Verilog code for decoder-0.5: Did not set radices to decimal for input in ModelsimPart 2:-1: Did not send correct bits to overflow detector in ripple carry adder (sent full signals instead of most significant bits)-0.5: Did not set radices for a and b to decimal in ModelsimPart 3:-0.5:Did not include wire for sum in Modelsim waveformsPart 5:-0.5: Did not set radices for a and b to decimal in ModelsimPart 6:-1: Redundant term in second K-Map   ","99","-1: Incorrect netlist for first module (should not have latches)  ","99","netid: jchang5
Score: 99.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)","100","You don't need to expand waveforms into their individual bit waveforms in the future. ","100",,,,"79",,"5",,"4",,"76",,"67",,"57",,"1",,"66",,"5",,"3",,"39",,"6",,,
"mcheng3","Cheng, Mark","90",,,,"100",,"97","Part 3, -1: While your method for determining if a number is negative or positive, we only need to look at the most significant bit, which is either a 1 or a 0. The hex character on the far left side is not a 'bit'.Part 6, -1: Shifting to the left asks for you to write the decimal number 10 in binary. This is important because the decimal representation does not allow us to shift. We only do shifting operations on the binary format. You have the right idea.Part 6, -1: When you are printing two values in C, make sure you put both values in a the list following the quotes. Your strange ""48840a00"" values in your shifting operation printf statement are random values somewhere in the computer, because you only specified one value: printf(""%d and %x\n"", shift);. Instead, add another "", shift"" in the function call. ","99.5","P2: -0.5 *A does not give address of array, it gives first value","98","(-2) - LEDR in your system_de2 will have no real purpose and will just confuse your output. Overall great work!!","99","netid: mcheng3
Score: 99.0

Comments: 
    Problem 5: -1.0; Part D does not overflow.","100","Be sure to include your .qar file. Starting with studio 5 it will be an automatic 10% loss.Great work. -shayden2","86.5","-10: No QAR filePart 1:-0.5: Added extra term to g5 K-Map, did not include in equation-0.5: Forgot to complement a variable in g3 equation (You had a n2'n1n0 term instead of a n2'n1'n0 term)-0.5: Forgot to invert a term in g0 Verilog code in decoder modulePart 3:-0.5: s_hex should have binary radix in ModelsimPart 6: -0.5: Incorrect term in first K-Map (equation should be b'c' + ac')-1: Redundant and wrong term in second K-Map ( equation should be a'b' + ac)    ","95","-5: Missing last picture","97","netid: mcheng3
Score: 97.0

Comments: 
    Problem 6: -2.0; Does not list minterms. (-2)
    Problem 7: -1.0; (a) Use ""on"" and ""off"" for CMOS rather than 0 and 1.","90","Don't forget to include the QAR in the future. (-10)When testbenching, you should almost always start your clock at 0  - so for this test bench, it should start at 0, then wait 10 ns so 1 can be assigned to the flip flop.You don't need to expand waveforms into their individual bit waveforms in the future.","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"67",,"5",,"3",,"40",,"6",,,
"achong","Chong, Alyssa","92",,,,"98",,"94","Part 2, -0.5: Your code has the ascii value of 'Z' for 0x5A, which is correct, but you put 'c' in your answer.Part 3, -2: That idea works for obtaining the largest and most negative int values, but you need to make sure that they are 32 bits: 0x7F -> 0x7FFFFFFF and 0x80 -> 0x80000000. 0x7F is just 127 in binary, not 2,147,483,647.Part 4, -2: Remember that an unsigned integer does not need to reserve the first bit to determine its sign, so the first bit can be turned on to obtain a larger positive number, and not flip it negative. Additionally, we need to remember to use all 32 bits: 0xFFFFFFFF.Part 4, -0.5: The question asks to program the hex value and display it as an unsigned int. This would mean your code should read ""int lrgUn = 0xFFFFFFFF;""Part 5, -1: Make sure you fill out all 32 bits of the int to make NOT a = 0xFFFFFFFC. Right idea, you have the code correct. ","99.5","P2: -0.5 *A refers to the value, not the address, of the first element","97","(-1) - incorrect answer for ""Which of the following will fail to compile in Quartus""(-2) - Using LEDR in system_de2 as no real effect or purpose, doing so will make it more difficult to know what output you are receiving. You should only use the lights you are planning on showing your output on.","96","netid: achong
Score: 96.0

Comments: 
    Problem 4: -2.0; A, B not possible
    Problem 5: -1.0; Part D does not overflow.
    Problem 6: -1.0; Part B does not overflow. (-1)","99","Missing the count wire in waveform. (-1)Great work. -shayden2","86","Part 1:-1: Test cases for 1 and 2 not shown in decoder ModelsimPart 3:-3: System module missing all port definitions for instantiated modules (This is graded from code provided, I presume you fixed this, but did not update the code on the document)Part 4:-1: Did not include labels for Modelsim waveforms-1: Photo does not have correct inputs on the boardPart 5:-2: Subtractor table values incorrect for b and overflow-1.5: No labels in Modelsim, and did not set radices for a and b to decimal-2: No photo of board providedPart 6:-0.5: First K-map incorrect-2: All equations not correctly minimized  ","99","-1: op code not padded with 5 bits of 0 in case statement. Netlist has no op code connected. ","95","netid: achong
Score: 95.0

Comments: 
    Problem 4: -2.0; Correct answer is (a’ + c)(a’ + b’ + d)(a’ + c’ + d’). You include too many +'s. (-2)
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 6: -2.0; Does not list minterms. (-2)","98","Whenever you have a reg, you must give it an initial value (initial q = 0, in the flipflop). (-1)
Similarly, your test bench should not be assigning a value to the flip flip - only the flip flop's input (-1)You don't need to expand waveforms into their individual bit waveforms in the future.","100",,,,"0",,"5",,"4",,"76",,"68",,"57",,"1",,"69",,"5",,"3",,"40",,"6",,,
"sclarin2","Clarin, Sara","100",,,,"98",,"98","Part 2, -2: Missing hex print statement for 0x5, and ascii print statement for 'a'.Part 5, -0: Quick note, 0xf is the same value as 0x0000000f, but it is important to have 32 bits when using the mask on another 32 bit number. No points deducted.Well done.","96","P2: -1 value of bits 7:4 at 0002 is 0xb; -1 value of bits 7:4 at 0003 is 0; -0.5 A[0] = 7; -1 cannot ldi a 16 bit value, must use procedure aboveP3: -0.5 low(A) is 3","94","(-4) - We were looking for the reverse of your output for the decoder. i.e. out0 = in1’ in0’ and out3 = in1 in0(-2) - Using LEDR in the system_de2 will only create confusion as to what outputs you are receiving. It has no real purpose for this lab.Also, I do recommend coding with tabs to make it easier to read your code.","95","netid: sclarin2
Score: 95.0

Comments: 
    Problem 5: -5.0; Part E does overflow. Incorrect binary and hex representations for parts D and E.","96","Make sure to always include you .qar file. Starting with studio 5 it will be an automatic deduction of 10%.Also, when viewing your waveform, make sure to press the 'f' key so that the entire waveform is in your screenshot.It is also good practice to indent your code so that it's more readable.Decoder logic is inverted, causing an inverted output in the waveform. (-2)Error 1: When viewing the waveform, count should be blue, while out is red. (-2)-shayden2","96.5","Incorrect equation for g[3] and g[4] in seven segment module (-1.5)
Seven segment tb waveforms incorrect for 4 and 6 (-1)
System tb s_hex waveform is incorrect for the third test case (-.5)
2nd K-map has unnecessary 3rd loop (-.5)","76.5","-0.5: op code incorrectly padded (needs 5bits rather than 4) in case statement. -23: Missing Part 3","97","netid: sclarin2
Score: 97.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 6: -2.0; Should not include minterm ab'c', ab'c, or abc.","100","When testbenching, you don't need to use intervals of 10 - you could simply write #200 in the second test bench.You don't need to expand waveforms into their individual bit waveforms in the future.","99",,,,"79",,"5",,"4",,"74",,"68",,"57",,"0",,"68",,"4",,"2",,"40",,"5",,,
"mcoil","Coil, Maxwell","93.5",,,,"100",,"100","Well done. Your formatting on your output was easy to read as well. Keep it up.","99","P1: -0.5 add instruction located at 2; -0.5 A equals the location of A[0] in memory","100","Great work!!!","98","netid: mcoil
Score: 98.0

Comments: 
    Problem 6: -2.0; Part D overflows. (-1) Incorrect addition in part D. (-1)","96","Make sure to always declare the inputs and outputs from highest to lowest bit eg [2:0], not [0:2].In your test bench, you can declare variables easier by putting 'testIn = 3'b000;' or 'testIn = 3'd0;'. The b stands for binary while the d stands for decimal. This makes it so that you don't have to declare the values bit-by-bit.Should not have had any Modelsim errors/warnings for Errors 2 and 3. (-4)-shayden2","98.5","Seven segment tb should use unsigned decimal radix for the inputs (-.5)
Adder tb should use decimal radix for the waveforms (-.5)
Subtractor tb should use decimal radix for the waveforms (-.5)Great work!","100","","100","netid: mcoil
Score: 100.0","99","Your clock rate was 10 ns - so for 20 cycles, there's a total runtime of 20*10 = 200 ns, not 400 ns. (-1)","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"70",,"5",,"3",,"38",,"6",,,
"pcreaven","Creaven, Patrick","91",,,,"100",,"95","Please submit your reports in a pdf format.Part 2, -1: Missing ascii display for 'a'.Part 3, -1: The pattern for negative integers is a little bit more complicated than just the last number changing. It will continue to decrease into the next digit once the F has turned into a 0.Part 3, -1: The third question is a bit more specific. We know that the most significant bit tells us something about the sign, but we need to know that being positive is what makes it negative, and vice versa.Part 3, -0: Your answer to the last question is correct, just make sure you know that C does NOT care about rolling over to the lowest possible int. No points deducted.Part 4, -1: The question asks for the largest unsigned number to be printed as an unsigned value format, given with a %u in printf. Your number was correct, but it also important to get the formatting of these correct.Part 5, -1: To zero out all but the lowest four bits, the question asks for a 32 bit hex value. 0xF is the right idea, but you need to extend it to 32 bits: 0x0000000F. ","98.5","Submit in PDF format only. Do not make this mistake again.P1: -0.5 r2 is not a memory locationP3: -1 final value of A[2] not included in answer","98","(-2) - Using LEDR in the system_de2 is unnecessary and will only confuse what output is received.Good simplification of minterms!!","96","netid: pcreaven
Score: 96.0

Comments: 
    Problem 5: -1.0; Part E does overflow.
    Problem 8: -3.0; 2nd answer is wrong, looks like wrong numbers were input (code seems fine, -3 points)","96","Error 1: ModelSim transcript errors/warnings: warning that port size doesn’t match for port ‘out’ (-2)Should have had no errors/warnings for modelsim in errors 2 and 3. (-2)","85","You should use a single | for bitwise OR operations like this, not the double pipe ||.Seven segment testbench should use unsigned radix for the input waveform (-.5)Waveform values are cut off and so cannot be verified (-1.5) -- you must expand these fully so the values can be seen.Incorrect overflow detector logic (-2)In system, the overflow detector should take in the most significant bits of a, b, and s, not cout (-1); the b input to fa2 should be b[2] (-.5)In the adder table, 2 of the overflows and 2 of the hex values are incorrect (-2)Incorrect adder tb waveforms, but no additional deduction.Missing sum wire from system tb waveforms (-1); inputs should be in decimal radix (-.5); incorrect sum and overflow waveforms but no additional deductionSubtractor module has the same things incorrect as the adder module (-1.5)Subtractor table largely incorrect (-3)Subtractor waveforms should be in decimal radix (-.5)1st K-map has an incorrect circle/equation term -- you missed a ' in the given equation (-.5)2nd K-map has an unnecessary third loop (-.5)","100","","98","netid: pcreaven
Score: 98.0

Comments: 
    Problem 7: -2.0; (a) Use ""on"" and ""off"" for CMOS rather than 0 and 1. (d) This is done backwards... but if all lines are switches it's correct.","93.5","In Part 1, make sure you use the correct format specified (i.e. hex, not decimal). (-0.5)In your second test bench, you had a clock cycle period of 10 ns - so for 20 clock cycles, you should have a total runtime of 20*10 = 200 ns, not 100 ns. (-1)In your second waveform, it's fine if you don't expand the wave into individual bits, but you must have the radix set into a format that can be read. Here, I have no way of verifying if your answers are correct for q. (-5) ","100",,,,"79",,"5",,"4",,"72",,"0",,"53",,"1",,"68",,"5",,"3",,"40",,"6",,,
"scurry2","Curry, Samuel","95",,,,"100",,"99","-1 pt 5: NOT decimal 3 should give 0xFFFFFFC as it is simply flipping each bitNo points taken off for this, but make sure you designate hex values as hex by putting 0x before the value. Otherwise, if there are no letters, it will be indistinguishable from a decimal valueGrade: 99","94.5","(-1) - The add instruction is stored at 2(-1) - R2 is 8 (0x8)(-1.5) - Incorrect answer to ""What is the meaning of each of the hex digits of the value stored at memory address 0001?""(-2) - Program 5 shifting by 1 in a loop will shift as necessary, you don't need to add 1 continuously","100","In the future, be sure to submit the QAR file for the project as well. Simply open the project in Quartus and under Project -> Archive Project, archive the project to download the .QAR file into the same folder that the rest of your project is in.Great work. -shayden2","88","netid: scurry2
Score: 88.0

Comments: 
    Problem 3: -1.0; Part B: decimal is 46
    Problem 5: -11.0; Incorrect binary representations for parts A, D, and E. (-3) Incorrect hex representations for parts A, D, and E. (-3) Did not determine overflow. (-5)","97","-1: In error 1, should have observed a modelsim warning that port size does not match for port 'out'-1: In error 2, no Modelsim warnings should have appeared-1: In error 3, no Modelsim warnings should have appeared","99","-1: Two incorrect values in subtractor table. ","100","","96","netid: scurry2
Score: 96.0

Comments: 
    Problem 2: -2.0; Multiple steps missing. Insufficient to say idempotent for last step
    Problem 4: -1.0; Answer should be left as (a’ + c)(a’ + b’ + d)(a’ + c’ + d’). (-1)
    Problem 7: -1.0; (a) Use ""on"" and ""off"" for CMOS rather than 0 and 1.","100","","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"68",,"5",,"3",,"39",,"6",,,
"jdaboub","DaboubSilhy, Jorge Jose","98",,,,"100",,"100","Part 6: Not taking off points, but we were looking specifically for what mathematical operation happens when you shift left or right in binary. Shifting left by one doubles the value and shifting right by one halves the value.Grade: 100","99","(-1) - Incorrect ""Why can’t we use the ldi instruction to load a 16-bit value into a register?"" ","100","Great work. -shayden2","100","netid: jdaboub
Score: 100.0","97.5","-0.5: Forgot #10 before $stop in testbench.  This will not give time for simulation to process the change from 6 to 7 as input, thus making your simulation potentially incorrect.-1: In Error 1, should have observed a Modelsim warning about port size not matching for 'out'-1: There should have been no observable Modelsim error in Error 2","99.5","-0.5: 3rd K-map, only need 2 terms rather than 3.","100","","97","netid: jdaboub
Score: 97.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 6: -2.0; Should not include minterm ab'c', ab'c, or abc.","100","","100",,,,"0",,"5",,"4",,"76",,"68",,"0",,"1",,"69",,,,,,"36",,"6",,,
"pdavis8","Davis, Peter","89.5",,,,"90",,"98","Maybe nitpicking here, but for part 3, you say that if the leading bit is ""F,"" it is a negative number. F represents four bits and is not the only hex that indicates a negative number. You show that you know this later, so no points taken off-2 pt 5: you again make the misconception that a hex value refers to a bit. A hex value refers to four bits, so if you wanted to flip the smallest four bits, you would flip only the right-most hexadecimal 0 to an F.Grade: 98","98","(-1) - Incorrect ""What is the hex encoding of ldi r1, 5?""(-1) - Incorrect ""Where do you think the return code at the end of program execution comes from?"" correct is r0 ","98","Using one wire to connect one output port to multiple input ports and Connecting a port of one module to a port of another module if both ports have the same name will not throw an error. (-2)In the future, be sure to submit the .QAR file, not the .QPF file. Open your project in Quartus and under Project -> Archive Project, click on archive. Then, the QAR file will be downloaded into the same file that you have your other files in.Great work. -shayden2","98","netid: pdavis8
Score: 98.0

Comments: 
    Problem 6: -2.0; Parts C and D overflow. (-2)","83","-10: No qar-1: No Modelsim data for count-2: No Quartus error/warning listed for Error 1-1: Error 1, should have observed a Modelsim warning that port size does not match for 'out'-1: Error 1, should have noted that count is blue, and out is red -1: Error 2, should have listed that an implicit net was created for COUNT-1: Error 2, there should have been no Modelsim errors  ","0","No submission","81","-5 No board photo (pg 6)-8 No testbench code on pg 8-1 Opcode 3'h7 not tested-5 No photo of board (pg 11)","91","netid: pdavis8
Score: 91.0

Comments: 
    Problem 7: -9.0; (a) Use ""on"" and ""off"" for CMOS rather than 0 and 1. F, pF, nF, G are incorrect. (c) Inspection is incorrect.","63","-4 Table with values of sequence incomplete and partially incorrect-4 Value of 0 not loaded in testbench (pg. 3 and 4) because of logical error in code (""else if (d) should just be ""else"")-9 LFSR waveform very wrong, and uses incorrect radix-20 No verilog, netlist, or photo of system_de2 in place  ","100",,,,"79",,"5",,"4",,"76",,"68",,"50",,"1",,"61",,"5",,"3",,"40",,"6",,,
"gdefalco","DeFalco, Gregory","86",,,,"100",,"100","Remember to lead hexadecimal values with 0x, especially if they are long onesGrade: 100","98","(-1) - Incorrect ""What is the hex encoding of ldi r1, 5""(-1) - Incorrect ""Which register produces the return code? Test your hypothesis"" ","100","Great work. -shayden2","97","netid: gdefalco
Score: 97.0

Comments: 
    Problem 7: -3.0; RGB order is inverted, resulting in incorrect answers (-3 points)","92","-1: Flipped b[1] and b[0] definitions in tabulator-0.5: testOut wire should be defined as [3:0] testOut in testbench-0.5: incorrect waveforms due to flipping definitions previously-1: In error 1, count should have been blue and testOut should have been red-1: No RTL netlist issues are present in error 2-1: No Modelsim errors or warnings are present in error 2-1: Error 2, some waves should have appeared.  count would be blue, and testOut would be strange, appearing red as it is only partially defined-1: error 3, no Modelsim errors-1: Error 3, Modelsim waveform should display testOut as red and count as a one bit wire ","96.5","-3.5: Missing filled in K-maps. ","100","","94","netid: gdefalco
Score: 94.0

Comments: 
    Problem 2: -1.0; Essential to show a(b+c) rather than a(bc)
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 8: -4.0; -4 (c) output mostly not copied.","100","","100",,,,"79",,"4",,"3",,"72",,"65",,"52",,"1",,"69",,"4",,"2",,"35",,"6",,,
"adiaz8","Diaz, Aaron","87",,,,"100",,"100","Grade: 100","98","(-1) - Incorrect r2(-1) - Incorrect return code ","85","An output port can only be set with an assign statement once, not multiple times. (-1)Connecting a port of one module to a port of another module if both ports have the same name and Neglecting to connect a port of an instantiated module will not cause the program to fail to compile. Using one wire to connect multiple output ports to one input port will cause the program to fail to compile. (-3)Your system_de2 should instantiate system. It should not be a copy of your system. (-7)Your system_de2 RTL Netlist picture does not match your code given. (-2)No explanation on errors experienced. (-2)In the future, be sure to submit the QAR file for the project as well. Simply open the project in Quartus and under Project -> Archive Project, archive the project to download the .QAR file into the same folder that the rest of your project is in.-shayden2","83","netid: adiaz8
Score: 83.0

Comments: 
    Problem 2: -1.0; Binary representations should be 8 bits long
    Problem 5: -15.0; Did not do number 5.
    Problem 7: -1.0; Red value is cut off from the answer for the first value (-1 point)","91.5","-1: Flipped equations for out[1] and out[0] in tabulator-0.5: Modelsim Waveforms appear strange due to flipped equations-1: Error 1 should have caused a Modelsim warning that port size does not match for 'out'-1: Error 1 should have caused count to appear as blue and out as red-1: Error 2 should not have caused a Modelsim error.-1: Error 2 should have caused count to appear blue, and out to appear red with partial definitions-1: Error 3 should have caused Quartus warnings about pins out[1] and out[0] being stuck at GND-1: Error 3 should not have caused Modelsim warnings-1: Error 3 should have out to appear red and count to appear as a one bit wire ","92.5","-5.5: incorrect values in adder table. -1.5: incorrect values in subtractor table.-0.5: Only need 2 terms in 3rd K-map.","98.5","-1.5 op 3'h7 does not appear in waveform because of mistake in testbench (pg 11) ","97","netid: adiaz8
Score: 97.0

Comments: 
    Problem 6: -2.0; Should not include minterm ab'c', ab'c, or abc.
    Problem 7: -1.0; (a) Use ""on"" and ""off"" for CMOS rather than 0 and 1.","88","-10 No .qar-2 Cannot see waveform values (pg 6) ","100",,,,"79",,"5",,"4",,"75",,"64",,"57",,"1",,"62",,"5",,"3",,"40",,"6",,,
"rdomel","Domel, Reno","99",,,,"100",,"100","Grade: 100","100","","99","Neglecting to connect a port of an instantiated module will not cause Quartus to fail to compile. (-1)Great work. -shayden2","100","netid: rdomel
Score: 100.0","97","-1: Error 1 should have caused count to appear as blue-1: Error 2 should not have caused Modelsim warnings-1: Error 3 should not have caused Modelsim warnings ","99.5","-0.5: 3rd K-map should be 2 terms not 3.","100","","99","netid: rdomel
Score: 99.0

Comments: 
    Problem 8: -1.0; -1 (b) Unnecessarily ldi r10 high(A)","100","","100",,,,"79",,"4",,"4",,"76",,"68",,"57",,"1",,"69",,"5",,"2",,"40",,"5",,,
"tdonegan","Donegan, Theodore","98.5",,,,"100",,"100","Grade: 100","100","","100","Great work. -shayden2","93","netid: tdonegan
Score: 93.0

Comments: 
    Problem 4: -1.0; Part B not possible
    Problem 5: -2.0; Incorrect hex and binary values for part D
    Problem 8: -4.0; Third answer is the same as the second (-4 points)","97","-1: count wire not shown in Modelsim output-1: Error 1 should have caused a Modelsim error that port size does not match for port out-1: Error 2 should have resulted in a Quartus warning that implicit net was created for COUNT ","91","-1: Incorrect overflow assignment.-3: Incorrect values in adder table.-1: Overall system should instance ""add3"" as shown in the given RTL.-1: RTL doesn't match for overall system.-3: Incorrect values on adder table. ","98.5","-1.5 b is not set to 3'h1 for shift operations as instructed (pg 10) ","91","netid: tdonegan
Score: 91.0

Comments: 
    Problem 3: -1.0; No a'bc in equation
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 6: -2.0; Should not include minterm ab'c', ab'c, or abc.
    Problem 8: -5.0; -1 (b) ""ldi r7, r13, 0"" is incorrect way to combine registers. -2 (b) initialize A[]'s values incorrectly to start, then you load in the correct values later. -2 (d) incorrect starting addr for A[].","100","","100",,,,"79",,"4",,"4",,"76",,"68",,"57",,"1",,"62",,"3",,"2",,"39",,"3",,"4",
"ddove","Dove, Dalton","93.5",,,,"100",,"100","Grade: 100","96","(-4) - Incorrect ""From these, what are the values of high(A) and low(A)? What 16-bit address is associated with label A?"" ","100","In the future, be sure to submit the QAR file for the project as well. Simply open the project in Quartus and under Project -> Archive Project, archive the project to download the .QAR file into the same folder that the rest of your project is in.Great work. -shayden2","98","netid: ddove
Score: 98.0

Comments: 
    Problem 6: -2.0; Parts C and D overflow. (-2)","96.5","-1: Flipped equations for out[0] and out[1] in tabulator-0.5: Waveforms are incorrect as a result of the flipped equations-1: Error 2 should not have resulted in Modelsim warnings-1: Error 3 should not have resulted in Modelsim warnings","90","Missing QAR file (-10)","100","","94","netid: ddove
Score: 94.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 8: -5.0; -2 (c) incorrect return value. -2 (d) incorrect addr for A[]. -1 (b) unnecessary lines of code for ""r7 = A"".","100","","100",,,,"79",,"5",,"4",,"76",,"68",,"56",,"1",,,,"5",,"3",,"37",,"6",,,
"mdoyle22","Doyle, Molly","90",,,,"100",,"100","Part 6: you're right that shifting 1010 left would give 0100 if your number is limited to four bit representation and the operation does indeed double the number. You can usually assume that you have 32 bits when working with an integer, though. With division, the operation will approach 0 or -1, but in integer representation, the numbers will jump to those values rather than approaching them. No points taken offGrade: 100","99","(-1) - Incorrect ""What is the hex encoding of ldi r1, 5?"" ","98","Using one wire to connect one output port to multiple input ports would not cause the program to fail to compile. Using one wire to connect multiple output ports to one input port would cause the program to fail to compile. (-2)Great work. -shayden2","93","netid: mdoyle22
Score: 93.0

Comments: 
    Problem 5: -3.0; Parts C and E did overflow. Incorrect hex value for part E.
    Problem 8: -4.0; Third answer is incorrect (-4 points)","98","-2: Modelsim errors should not have appeared for Errors 2 and 3","97","-1: Filled in top right K-table in incorrectly.-2: Filled in subtractor table with some incorrect values. ","100","","96","netid: mdoyle22
Score: 96.0

Comments: 
    Problem 3: -1.0; Did not note abc' on table
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 6: -2.0; Should not include minterm ab'c', ab'c, or abc.","100","","100",,,,"79",,"5",,"4",,"76",,"66",,"57",,"1",,"63",,"5",,"3",,"38",,"6",,,
"adugan2","Dugan, Aileen","94",,,,"98",,"92","Part 3: -4 It is not correct to say that the leading hexadecimal F makes the number negative; only the leading bit decides the sign. So, it follows that 0xF0000000 is not the most negative, but rather 0x80000000. Your most positive and negative decimal values are off as a result. Adding 1 to the greatest positive hex value would not give 0x10000000.Part 4: -2 An unsigned integer is not bound to 0x7FFFFFFF as its largest positive number. Since it is unsigned, it can go all the way up to 0xFFFFFFFF, producing a much larger maximum value.Part 5: -2 Your masks do not block all except the smallest four bits and vice versa.Score: 92","0","No submission","98","Connecting a port of one module to a port of another module if both ports have the same name would not cause Quartus to fail to compile. Using one wire to connect multiple output ports to one input port would cause Quartus to fail to compile. (-2)In the future, be sure to submit the QAR file for the project as well. Simply open the project in Quartus and under Project -> Archive Project, archive the project to download the .QAR file into the same folder that the rest of your project is in.Great work. -shayden2","0","netid: adugan2
Score: 0","0","No submission","0","No submission","96","-1 pg 3 Don't know what you're trying to do at index 24 and 26 of Always block-2 pg 7 ""1 ^"" included in LCD output-1 pg 16 Unnecessary ""3"" included in LCD output","0","netid: adugan2
Score: 0","42.5","-2 Waveform does not show all values of q (pg 6)-1 system_de2 Verilog code assigns HEX0 multiple times-2 LEDR[3:0] and LEDG[0] are unassigned in system_de2-7 No RTL netlist of system_de2-3 No photo of board showing first clock cycle after 0The cause of your error is that your lfsr4 and hexdigit modules both output to HEX0 according to your system_de2 file. Because this is hardware, the system is trying to do both of these assignments at the same time, which doesn't work. Your lfsr4 should be outputting to LEDR[3:0] which can then be input to hexdigit.Raw Score: 85Late submission: -50%Final Score: 42.5","99",,,,"79",,"5",,"4",,"76",,"66",,"57",,"1",,"64",,"5",,"3",,"40",,"6",,,
"lfangmey","Fangmeyer, Leo","97",,,,"100",,"100","Part 6: Note that we generally have 32 bits to work with in an int, so unless the value was limited to four bits, your left shift would in fact double 10 to be 20. No points taken offScore: 100","100","","98","A Verilog module is allowed to have multiple ports, not just one. (-1)Incorrect equation for tabulator variable out0 (out0 = in1 ^ in0) (-1)Awesome work Leo. -shayden2","100","netid: lfangmey
Score: 100.0","98","-1: Did not translate minterm equation for in[1] in tabulator.  No points off, but in the future, use screenshots instead of pictures of your screen.  Use the Windows Snipping Tool on the lab computers, for example.-1: Error 1 should have created a Modelsim warning that port size does not match for port out ","99.5","-0.5: 3rd K-map only needs 2 terms.","100","","96","netid: lfangmey
Score: 96.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 7: -3.0; (a) Use ""on"" and ""off"" for CMOS rather than 0 and 1. (b) minterms should be written in abc rather than m0-m7.","100","","100",,,,"79",,"5",,"4",,"76",,"68",,"56",,"1",,"58",,"5",,"3",,"37",,"6",,,
"afarag","Farag, Ahmed","95.5",,,,"91",,"99","Part 2: -1 The question gave you the hex value 0x5A and asked for decimal and ASCII, but you gave hex in the decimal spot.Score: 99Note: No deduction this time, but in the future it will be 50% off if you submit after midnight the day before your lab section.","96","(-3) - incorrect answers for r1, r3, and the return code register(-1) - incorrect answer for ""What is the value of bits 7:4 of the 16-bit word at memory location 2?""","99","Using one wire to connect one output port to multiple input ports would not cause Quartus to fail to compile. (-1)In the future, be sure to submit the QAR file for the project as well. Simply open the project in Quartus and under Project -> Archive Project, archive the project to download the .QAR file into the same folder that the rest of your project is in.Great work. (-1)","95","netid: afarag
Score: 95.0

Comments: 
    Problem 5: -1.0; Part D does not overflow.
    Problem 7: -4.0; RGB order was inverted (-4 points)","95","-3: Waveform is missing a wave, and you did not expand the labels, so I cannot tell which wave is which-1: Error 1 should have produced an blue line for count as well as a red line for out-1: Error 2 should not have produced any Modelsim errors  ","79.5","Missing QAR file (-10)-3.5: Missing boolean equations from k-map reductions. -2: Incorrect values on adder table.-3: Incorrect values on subtractor table.-2: Missing boolean equations from k-maps.","100","","45","netid: afarag
Score: 90.0
-50% for late submission
Comments: 
    Problem 4: -1.0; Answer should be left as (a’ + c)(a’ + b’ + d)(a’ + c’ + d’). (-1)
    Problem 7: -4.0; (c) didn't use inspection
    Problem 8: -5.0; -2 (d)Incorrect starding addr for A[]. -2 (b) no code provided for ""r7 =A"". -1 No ""shift"" flag used in assembly code","90","-10 No .qar ","51",,,,"0",,"3",,"4",,"67",,"68",,"57",,"0",,"64",,"4",,"2",,"39",,"6",,"4",
"mfarre22","Farrell, Margaret","92",,,,"100",,"100","Score: 100","89","(-2) - incorrect ""What is the hex encoding of ldi r1, 5?"" and r2(-1) - incorrect ""What is the value of bits 7:4 of the 16-bit word at 7, because bits 7:4 refer to r11, which is memory location 2? Why?""(-4) - incorrect low(A) and 16-bit address(-4) - incorrect answers in the second part of program 6","100","In the future, be sure to submit the QAR file for the project as well. Simply open the project in Quartus and under Project -> Archive Project, archive the project to download the .QAR file into the same folder that the rest of your project is in.Great work. -shayden2","95","netid: mfarre22
Score: 95.0

Comments: 
    Problem 5: -5.0; Part E does overflow. Incorrect hex and binary values for parts D and E.","98","-1: Missing count wave in Modelsim waveform-1 Error 1 should have produced a Modelsim warning that port size does not match for out ","99.5","-0.5: 3rd K-map, only need 2 terms.","99","-1 5-3 = 2, not 6 (-pg 9 testbench) ","94","netid: mfarre22
Score: 94.0

Comments: 
    Problem 8: -6.0; -2 (d) Incorrect starting addr for A[], -2 (d) incorrect starting addr for mult, -2 (b) no flags in assembly code [you say go to ""finish"" but never say where it is].","100","","100",,,,"79",,"4",,"4",,"72",,"65",,"52",,"1",,"68",,"5",,"3",,"40",,"6",,,
"cfinnan","Finnan, Collin","99",,,,"100",,"100","Score: 100","100","","100","You accidentally copied your decoder code into the system box. I was able to open up your QAR and confirm your system code was correct. (-0)Great work. -shayden2","92","netid: cfinnan
Score: 92.0

Comments: 
    Problem 1: -2.0; Part b: should be 0x2E and 46
    Problem 2: -2.0; Part b: should be 10011001 and 0x99
    Problem 3: -1.0; Part B: miscounted, should be 2E/46
    Problem 4: -1.0; Part A impossible
    Problem 8: -2.0; Forgot to show answers in decimal (-2 points)","98","-2: Errors 2 and 3 should not have produced Modelsim warnings","94","-6: incorrect values in adder and subtractor table, we don't write negative hex.  ","100","","98","netid: cfinnan
Score: 98.0

Comments: 
    Problem 4: -1.0; Answer should be left as (a’ + c)(a’ + b’ + d)(a’ + c’ + d’). (-1)
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)","100","","100",,,,"79",,"5",,"4",,"76",,"68",,"56",,"1",,"62",,"5",,"3",,,,"6",,"4",
"afische4","Fischer, Anna","94",,,,"100",,"100","Great work! Your answers show your understanding of the topics and questions asked.","93.5","Program 1: The value of r0 produces the return code (-0.5)Program 2: Load and store use different bit fields for the offset because ld needs bits 11:8 for rw and st needs bits 7:4 for ra (-1) The value of A is also just the address, so 0xa0 (-1)Program 5: Substituted shift instruction for add and sub instruction (>> means shift right). (-3)Program 6: Placing the quit function in fun2 would make the jal instruction meaningless because it would never return. Instead, we could save r15 into a different register before calling fun2, then restoring r15 after fun2 returns. This would prevent fun2 from overwriting r15 and creating a loop. (-1)Great work. -shayden2","97","-2: Video Question 4 - Neglecting to connect a port of a module will not cause a failure to compile.  Of the options provided, only using one wire to connect multiple outputs to a single input will cause a failure to compile.-1: Incorrect equation for out1: Should read in1' in0, not in1 in0'","97","netid: afische4
Score: 97.0

Comments: 
    Problem 5: -3.0; Incorrect hex value for part A. Incorrect hex and binary values for part E.","96","-2: Error 2, ""ModelSim transcript errors/warnings:"" incorrect.-2: Error 3, ""ModelSim transcript errors/warnings:"" incorrect. ","94","In the future, you can assign multi-bit regs at once using, for example, ""3'h0"" for 3 bits, with the value written in hexadecimal.In the testbench table, keep in mind that the values are signed (-2).Additionally, your waveforms seem to be incorrect (possible wrong radix) (-1)When assigning multibit wires to a module, you don't need to specify the range unless you're explicitly using part of the wire's range. Your second waveform should be in a decimal radix, not signed (-1)Your third testbench table should be signed (-1). Make sure your third waveform ahs the correct radix (-1).","100","Your opcodes should be written with the number of bits as a prefix - while using just 1, 2, 3, ... 7 works, Quartus actually makes it 24 bits - which is then truncated by the wires. You may notice this as a warning in the console. ","100","netid: afische4
Score: 100.0","99","-1 for Page 7 in the debounce module, the KEY[0] should be ~KEY[0]","100",,,,"77",,"5",,"4",,"76",,"0",,"52",,"1",,"64",,"5",,"3",,"40",,"6",,,
"rfrost","Frost, Ryan","96.5",,,,"100",,"100","Great job!","94.5","Program 2: You are right that &A represents the address of A, but are missing the value (0xa0). (-1)Program 3: Incorrect 16-bit address for A. (-0.5) When loading into A[2], use ld instructions from memory location A, not ldi instructions. (-2)Program 6: Incorrect memory locations for fun1, fun2, jal fun1, and jal fun2. (-2)Great work. -shayden2","100","Warning: No QAR file provided.  No points off for this lab, but there will be penalties in future labsIn the future, create your equations based on the truth table, showing complete minterms for each term.  Technically, your equations for out1 and out0 for your tabulator are correct, but they are more complex than needed, and go against general convention. ","100","netid: rfrost
Score: 100.0","100","Note: .qarlog is not a .QAR file. To create this file go to projects-> archive project. This is -10 points on future labs. ","99","In the future, you don't need to show the individual waveforms for each bit unless the question specifically asks for it.Make sure that you waveform screenshots show the entire title (-0.5)Make sure that your waveforms are using the radix that the question is asking for (-0.5).When assigning ports to a module, you don't need to include the multi-bit definition - just the name. For example, "".a (SW)"" instead of "".a(SW[2:0])"", as long as the port sizes are correct.  ","100","When testbenching, if a value doesn't change between time intervals, you don't need to re-assign its value. The value persists until it is changed to a different value. ","95","netid: rfrost
Score: 95.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 8: -4.0; -4 (c) Code output not pasted","99","-1 for page 7 in the debounce module, the KEY[0] should be ~KEY[0]","100",,,,"79",,"5",,"4",,"76",,"68",,"56",,"1",,"68",,"5",,"3",,"38",,"6",,,
"rgahitir","Gahitira, Rene Frank","82",,,,"100",,"100","Great work! Very nice code style.","80.5","Program 1: Only 8 bits can be used for the load value in an ldi instruction because the first 8 bits are used for the opcode and register value, leaving only the second 8 bits for the load value. (-1) The return code comes from r0. (-0.5) Incorrect xor instruction. (-4)Program 2: Incorrect value of bits 7:4 in memory location 2. (-1) The value of A is just the address of A, so 0xa0. (-1) When setting A[] = {7, 8, 9}, you use more instructions than necessary and change more registers than r11. You can just use ldi r11, 8 and st r11, r0, 1, then repeat for 9. (-2)Program 3: The 16-bit address associated with label A should be 0xa. 0xcafe is the value stored at address A (0xa), not just the address itself. (-1) Program does not load the value at A into r1. (-6) When trying to get the address of A in part 3, you are missing the shift instruction, so when you or high(A) with low(A), it does not create the correct address. You need to shift high(A) to the left 8 bits before you or. (-1)Program 5: Program does not initialize a value for r5. (-1) r2 is placed in a spot where it will never be reached, and thus r2 is not initialized. (-1)-shayden2","98","No QAR file provided.  You don't need to provide all your Verilog files, as the QAR file will compile them into an easily transferrable form.  No points off for this lab, but in the future, not providing a QAR will be a 10 point penalty.-2: Video Question 4 - Neglecting to connect a port of a module will not cause a failure to compile.  Of the options provided, only using one wire to connect multiple outputs to a single input will cause a failure to compile.No points off, but convention is usually to define multibit signals as [high:low] (for example [2:0] rather than the opposite.","94","netid: rgahitir
Score: 94.0

Comments: 
    Problem 3: -1.0; Part D: hex is 9C, not 9A
    Problem 5: -1.0; Part D does not overflow.
    Problem 7: -4.0; RGB order was inverted (-4 points)","91","-4: Red/Blue line questions: Missing reason for high impedance. Missing more direct reason for red line.-0.5: You should not be assigning 1 bit values with ""3b'X"" where X is 0 or 1. This works but is bad practice as it's very misleading. -0.5: Missing port in first waveform.-4: Incorrect ""ModelSim transcript errors/warnings"" for Error 2 and 3 parts. ","97","When converting to hex, think of how many bits you're converting. If there are, for example, only 4 bits, then -1 would only be 0xF, not 0xFFFF FFFF. (-2).Make sure that you use the correct radix in your waveforms (-1).Your third k-map is correct - but for clarity, circle all minterms - even if it only contains one minterm. ","100","When testbenching, you don't need to reassign a reg every time interval. Their values are preserved until it is change to a different value.  ","86","netid: rgahitir
Score: 86.0

Comments: 
    Problem 1: -3.0; No Boolean algebra properties stated
    Problem 2: -3.0; No Boolean algebra properties stated
    Problem 3: -5.0; No truth table
    Problem 4: -1.0; Answer should be left as (a’ + c)(a’ + b’ + d)(a’ + c’ + d’). (-1)
    Problem 8: -2.0; -2 (d) Incorrect addr of A[].","99","-1 for page 7 in the debounce module, the KEY[0] should be ~KEY[0]","100",,,,"79",,"5",,"4",,"76",,"62",,"47",,"1",,"67",,"5",,"3",,"40",,"6",,"4",
"ggavenda","Gavenda, Gregory","95.5",,,,"80",,"100","Great work! ","90.5","Program 1: When using the ldi instruction, the first eight bits are reserved for the opcode and register number, so only eight bits are left for the load value. (-1) Incorrect hex encoding of ldi r1, 5. (0.5) Incorrect procedure for xor. (-3)Program 2: Missing values of &A and *(&A). (-2)Program 3: Incorrect value of A[2]. (-1)Program 6: Incorrect memory locations for fun1, fun2, jal fun1, and jal fun2. (-2)-shayden2","95","Warning: In the future, provide a QAR file with your submission.  There is no penalty this week, but in future labs there will be a 10 point penalty-2: Video Question 4 - Neglecting to connect a port of a module will not cause a failure to compile.  Of the options provided, only using one wire to connect multiple outputs to a single input will cause a failure to compile.-3: Tabulator out1 equation - Duplicate term, missing in0in2 term at a minimum.  In the future, just directly transcribe the terms from the truth, table, including complemented terms.  An fully correct equation directly transcribed from the table would be:out1 = in0' in1 in2 + in0 in1' in2 + in0 in1 in2' + in0 in1 in2Tabulator out0 is  technically correct, but again, you can just directly transcribe the minterms to simplify the process considerablyIn your verilog implementation of tabulator, you corrected your issue from the equations, so no points taken  ","99","netid: ggavenda
Score: 99.0

Comments: 
    Problem 7: -1.0; Forgot to show answer in hex (-1 point)","95","-3: Red line answer insufficient.Note that your tabulator should be a sum of minterms.-2: Error 3, ""ModelSim transcript errors/warnings:"" incorrect.","84","Make sure you include the .qar, not the .qpf. The project file doesn't contain your actual Verilog code (-10)In the future, paste your code as text - don't take screenshots of your code. Make sure your waveforms are with the correct radix (-1).Your equation in part 2 for s is needlessly complex - it can be simplified to s = a ^ b ^ ci.Assuming that c is your input s, your overflow detector equation is incorrect (-1).In your full adder, s[2] should be connected from add3 to over. co should be left unconnected (-2).Your overflow error has resulted in an incorrect overflow waveform in part 2, 3, and 4 (-1.5)Your second k-map is incorrect - remember, you want as few circles as possible (-0.5). ","100","When testbenching, you don't need to reassign a reg every time interval. Their values are preserved until it is change to a different value. ","99","netid: ggavenda
Score: 99.0

Comments: 
    Problem 5: -1.0; Part b. Answer is a'b'd. (-1)","99","-1 for page 7 in the debounce module, the KEY[0] should be ~KEY[0]","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"64",,"5",,"3",,"38",,"6",,"4",
"zgeorge","George, Zakiya","69.5",,,,"99",,"95","(-1) - For when you are adding one to the most positive number, i.e. 0x7fffffff, you find that this value switches to the most negative number 0x80000000. Your answer of, ""The result is the same."" didn't convey this.(-3) - For left shift 10, we wanted you to use 8 bits. By doing this, you find that leftshift by one bit will always multiply a value by 2. So the expected values were 20 and then 40.(-1) - Right shifting by one bit divides the number by 2. Simply saying decreases doesn't show the comprehension we were looking for. Overall great job!","92.5","Program 1: when finding the xor, make sure to put the not operators before the and operators because they come first in order. (-2)Program 2: Incorrect value of &A. (-1) When setting A = {7, 8, 9}, the directions indicate to only change r11. Also, the LD instructions are unnecessary. (-3)Program 6: Incorrect value of r15 when the first instruction of fun2 is executed. (-0.5) When fixing the infinite loop, you did not copy the value from r5 back into r15. (-1)Please submit a .pdf instead of a .docx. -shayden2","100","Good job.","97","netid: zgeorge
Score: 97.0

Comments: 
    Problem 3: -2.0; Part C, D: negative signage not preserved
    Problem 5: -1.0; Part D does not overflow.","94","-6: Error 1 & 2 & 3, ""ModelSim transcript errors/warnings:"" incorrect ","83.5","In the future, include your .qar (quartus archive), not your entire project. (-10).In the future, you can assign multi-bit regs at once using, for example, ""3'h0"" for 3 bits, with the value written in hexadecimal.Your overflow equation is incorrect (-0.5).Make sure you use the correct radix in your waveform (-1.0)You didn't show your k-map circles (-2).Your k-map equations for 1, 2, and 3 are incorrect - for some reason, your k-map contents are different (-3).","100","","88","netid: zgeorge
Score: 88.0

Comments: 
    Problem 4: -2.0; Answer should be (a’ + c)(a’ + b’ + d)(a’ + c’ + d’) (-2)
    Problem 6: -2.0; Should not include minterm ab'c', ab'c, or abc.
    Problem 7: -4.0; (c) didn't use inspection
    Problem 8: -4.0; -4 (c) Code output not posted","96","-1 for page 5 in the testbench, you do not need to set d = X cause d is generated by inside lsfr module.-1 for page 5 in the testbench, 20 clock cycles = #200 then stop, not #300 in total.-1 for page 5, the waveform doesn't show the actual value of q.-1 for page 6 in the debounce module, KEY[0] should be ~KEY[0]. ","100",,,,"79",,"5",,"4",,"72",,"65",,"52",,"1",,"64",,"5",,"3",,"39",,"6",,"4",
"mgharib","Gharib, Michael","92",,,,"99",,"100","Great work! Good explanation and understanding of both the left and right shift.","93","Program 1: Missing identification of the register that produces the return code. (-1) When taking the xor, be sure to not the two registers first, then add them, and finally or them. (-2) Missing actual values for &A and *(7A). (-1)Program 2: When referencing memory locations, each location is only seperated by 1 (not 4 like they are in other assembly languages like ARM). Therefore, you would only need to offset 1 or 2 places, not 4 or 8. (-2)Program 3: Missing final value of A[2]. (-1)-shayden2","100","Warning: Include a QAR file for the project along with your PDF.  No penalty for this lab, but in the future it will be a 10 point penalty.No points off, but please make your truth table variables consistent with your equation variables, for clarity's sake ","100","netid: mgharib
Score: 100.0","96","-4: Error 1, ""Quartus transcript errors/warnings:"" and ""ModelSim transcript errors/warnings:"" both incorrect. ","93.5","You did not include any of your minterm equations in Part 1 (-3.5).Your equation for s in Part 2 can be simplified to s = a ^ b ^ ci.Make sure you use the correct radix in your waveform (-0.5)Your switch position for a in Part 5 is incorrect (-0.5)Your k-maps for questions 1 and 3 are incorrect. (-1).Your equations for questions 1 and 3 are incorrect (-1).","100","When testbenching, you don't need to reassign a reg every time interval. Their values are preserved until it is change to a different value. ","98","netid: mgharib
Score: 98.0

Comments: 
    Problem 6: -2.0; Should not include minterm ab'c', ab'c, or abc.","100","","100",,,,"79",,"4",,"4",,"76",,"66",,"0",,"1",,"67",,"5",,"3",,"30",,"6",,,
"pgierl","Gierl, Paul","100",,,,"100",,"100","Very good work!! And great-looking output.","98.5","Program 2: When storing 0xef into 0xabcd, you should use an or instruction on line 16 to combine registers r11 and r12 instead of using an and. You did this correctly in the previous program, so I'm just assuming it was a typo. (-0.5)Program 3: When taking A[2] = A[0] + A[1], you store the value of A[2] into the incorrect memory location (line 13). The register should be r10 instead of r1. (-1)Great work. -shayden2","100","No points off, but please use descriptive variable names in the future.","100","netid: pgierl
Score: 100.0","92","-2: Error 1, ""ModelSim transcript errors/warnings:"" incorrect.-6: Error 1-3, ""Quartus transcript errors/warnings:"" incorrect, no warnings were explained or noted besides the number of them. ","97","You put your system instead of your testbench in part 3 (-3). ","100","","93","netid: pgierl
Score: 93.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 6: -2.0; Should not include minterm ab'c', ab'c, or abc.
    Problem 8: -4.0; Part d: mult function is at 0x000a (-2); A[] is at 0x0017 (-2)","100","","100",,,,"78",,"5",,"4",,"76",,"68",,"57",,"1",,"69",,"5",,"3",,"37",,"6",,,
"bgoodwin","Goodwine, Bridget","97.5",,,,"100",,"97","(-1) - The question ""Using your intuition, what should be the hex representations of the most positive and most negative int values?"" wanted the answers 0x7fffffff and 0x80000000 which would be the most positive and negative values.(-1) - The most negative value is -2,147,483,648, which can be reach by 0x80000000.(-1) - When adding 1 to 0x7fffffff it becomes 0x80000000 which is -2,147,483,648, adding 2 would lead to 0x80000001.Overall great work!!","81","Program 1: You are correct in saying that the first four bits of the instruction are used for the opcode, but the next four are used for the write register, so there are only 8 bits reserved for the immediate value. (-1) Incorrect memory location and hex encoding. (-1) In order to properly represent 0xabcd, you need to use the or command to combine 0xab00 and 0xcd. The and command will not properly merge the two. (-1)Program 2: Incorrect 7:4 bits of memory location 2. (-1)Program 3: Memory locations are only separated by 1 space. Therefore, when using offsets, you only need to offset by 1 or 2 rather than 4 or 8. (-2) Program does not load value at A from memory into register r1. (-6) Program does not access A[0] or A[1] correctly. (-4)Program 6: Incorrect addresses for fun1, fun2, jal fun1, and jal fun2. (-2) Incorrect value of r15 when the first instruction of fun1 and fun2 is executed. (-1)-shayden2","99","Warning: in the future please include a QAR file generated for your project.  No penalty for this assignment, but in the future there will be a 10 point deductionNo penalty, but please use variable names consistent with your truth tables in your equations, for clarity's sakeIn your tabulator out1, you appear to have placed the apostrophes marking complements ahead of the variables they complement.  No points off, as you kept it consistent in the equation, but conventions dictate they come after the variables-1: Used a variable in2 in your first decoder equation, and no where elseNo penalty, but you added unnecessary 2 LEDG bits to your multibit declaration.","84","netid: bgoodwin
Score: 84.0

Comments: 
    Problem 1: -2.0; Part c: hex representation should be 0xB7, Part d: hex representation shoud be 0x9C
    Problem 3: -2.0; Part B: miscounted on hex. Part C: wrong hex, letters reversed
    Problem 4: -3.0; Part C: hex wrong. Part D: both hex and binary wrong
    Problem 5: -3.0; -2: Incorrect hex and binary in part A, -1: Incorrect hex in part E
    Problem 6: -5.0; -5: No hex values given 
    Problem 8: -1.0; -1 Wrong test case (225*225 rather than 255*255)","97.5","Thanks for at least trying to submit something similar to a .QAR file, in the future it will be 10 points so try to remember that to make your QAR file you go to Project->Archive Project!-0.5: Missing ""count"" wire in first waveform.-2: Error 1, ""ModelSim transcript errors/warnings:"" incorrect.  ","99","Make sure you use the radix that the question asks for (-0.5).Your second k-map in Part 6 is incorrect - remember, you want the fewest number of circles possible, so there should only be two minterms.(-0.5)","100","When testbenching, you don't need to reassign a reg every time interval. Their values are preserved until it is change to a different value. ","82","netid: bgoodwin
Score: 82.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 6: -2.0; Should not include minterm ab'c', ab'c, or abc.
    Problem 7: -9.0; (a) Use ""on"" and ""off"" for CMOS rather than 0 and 1. nC, nF, pF, F and G are wrong. (b) F is not a sum of minterms. (d) Used the wrong equations for F and G here.
    Problem 8: -6.0; Missing part c output, so part d also cannot be validated. However, mult is definitely not at 0x0000, likely it's around 0x000a.","98","-1 for page 2 in the verilog module, you did not initialize q = 0.One comment for Page 6 in the testbench, why not use #200 to replace so many #10. (no penalty)-1 for page 9 in the debounce module, the KEY[0] should be ~KEY[0].","99",,,,"79",,"5",,"4",,"76",,"66",,"57",,,,"66",,"5",,"3",,"40",,"6",,,
"jgose","Gose, Jacob","100",,,,"100",,"100","Very nicely written code!","98","Program 1: Incorrect value for xor. (-1)Program 2: Incorrect value of *A. (-1)Great work. -shayden2","98","-2: Video Question 4 - Connecting a port of one module to a port of another module with the same name will not cause a failure to compile.  Of the options provided, only using one wire to connect multiple outputs to a single input will cause a failure to compile. ","98","netid: jgose
Score: 98.0

Comments: 
    Problem 3: -2.0; Part C, D: hex wrong","95.5","-0.5: First waveform, missing ""count"" wire in radix=unsigned. This is the wire connecting to two internal modules in the overall system.-4: Error 1, ""Quartus transcript errors/warnings"" and ""ModelSim transcript errors/warnings"" incorrect. ","99.5","In the future, you can assign multi-bit regs at once using, for example, ""3'h0"" for 3 bits, with the value written in hexadecimal.It looks like you used the wrong switches for the subtractor? (-0.5)","100","","93","netid: jgose
Score: 93.0

Comments: 
    Problem 3: -3.0; Not enough steps shown
    Problem 6: -2.0; Should not include minterm ab'c', ab'c, or abc.
    Problem 7: -2.0; (a) Use ""on"" and ""off"" for CMOS rather than 0 and 1. nF is a bit off.","100","","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"66",,"5",,"3",,"40",,"6",,,
"vgoyette","Goyette, Vincent","87",,,,"98",,"100","Great work! Good understanding of left and right shifts.","94","Program 2: Incorrect value of *A. (-1)Program 3: When loading the value from memory location A, remember to use the LD instruction instead of the LDI instruction. (-1)Program 4: Incorrect definitions of the opcode and displacement value. (-1) Incorrect displacement values. (-1)Program 5: Incorrect memory locations of fun1, fun2, jal fun1, and jal fun2. (-2)-shayden2","98","-2: Video Question 4 - Using one wire to connect one output to multiple inputs. will not cause a failure to compile.  Of the options provided, only using one wire to connect multiple outputs to a single input will cause a failure to compile.No penalties, as your results worked, but you can just directly translate your equations into code.  No need to change them like you did with tabulator out1.  Also please be consistent with your notation.  You used ! instead of ~ in your equation for tabulator out0 for one of your inversions, but not for any of the others ","97","netid: vgoyette
Score: 97.0

Comments: 
    Problem 3: -2.0; Part C, D: hex wrong
    Problem 7: -1.0; -1 (255 in hex is FF)","99.5","-0.5: Missing waveform of count with radix=unsigned. ","97","In the table in Part 2, you forgot to make one of the s decimal values signed (-0.5).Make sure you use the radix that the question asks for (-0.5).You didn't show any of your circles for your k-maps in Part 6 (-2).","99","When testbenching, you don't need to reassign a reg every time interval. Their values are preserved until it is change to a different value. In your test bench, you forgot to test for opcode 3'h6 (-1)","91","netid: vgoyette
Score: 91.0

Comments: 
    Problem 4: -1.0; Answer should be left as (a’ + c)(a’ + b’ + d)(a’ + c’ + d’). (-1)
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 7: -1.0; (d) Didn't label DeMorgans law in F.
    Problem 8: -6.0; Load instruction is not needed int r7=A; A refers to the address of A, so you should have loaded that into r7, not A[0] (-1). At the finish label, you should have used jr r15, not quit (-1). Return code incorrect, should be 15 (-2). A[] does not start at 0x0000 (-2)","99","-1 for page2 in the verilog module, you did not initialize q = 0.","100",,,,"79",,"5",,"4",,"76",,"66",,"57",,"1",,"70",,"5",,"3",,"39",,"6",,,
"rgriffi8","Griffith, Riley","94",,,,"100",,"100","Great work and showing of understanding the material.","93.5","Program 1: Incorrect hex encoding for ldi r1, 5. (-0.5)Program 3: Did not load the value at A into r1. (-1) High(A) and Low(A) do not reference the value stored at memory location A, but rather the memory location of A itself. For example, 0xcafe could be stored at memory location 0x3e0d. Then high and low A would give you 0x3e and 0x0d, respectively. Did not store the value of A[2] to memory. (In order to access the value of 0xf00d, or A[1], you would need to use the offset feature of the LD instruction. For example, LD r1, r5, 1 would store the value of r5 into the memory location of r1 + 1. This is how you can access and create arrays in albacore. (-4)Program 6: Incorrect memory locations for jal fun1 and jal fun2. (-1)-shayden2","98","Warning: Please include a QAR file in the future, as future studios will have a 10 point penalty for not including one.-2: Video Question 4 - Neglecting to connect a port of a module or connecting same named ports will not cause a compilation failure Of the options provided, only using one wire to connect multiple outputs to a single input will cause a failure to compile.No penalty, but please use descriptive variable names in your Verilog code in the future ","92","netid: rgriffi8
Score: 92.0

Comments: 
    Problem 3: -2.0; Part A, B: needlessly flipped bits
    Problem 5: -6.0; Part D: Binary and hex incorrect, no overflow (-3),  Part E: Binary and hex incorrect, overflows (-3)","97.5","-0.5: Missing waveform of ""count"" with radix=unsigned.-2: Error 3, ""ModelSim transcript errors/warnings"" incorrect. ","94.5","Your equation for g6, g5, and g4 are not reduced to minterms (-1.5).In your full adder, the last cout should be left unconnected (-0.5).In the table in Part 2, one of your s decimal values is incorrectly signed (-0.5).Make sure that you use the radix that the question asks for in your waveforms (-0.5).In the table in Part 3, your signs for b decimal are incorrect (-0.5). Additionally, your values for s are incorrect (-3), which leads to your overflow being incorrect (-1)Since your table was incorrect, you had incorrect waveforms (-1)  ","100","Don't forget to include your name. When testbenching, you don't need to reassign a reg every time interval. Their values are preserved until it is change to a different value. ","43.5","netid: rgriffi8
Score: 87.0
-50% for late submission
Comments: 
    Problem 4: -1.0; Answer should be left as (a’ + c)(a’ + b’ + d)(a’ + c’ + d’). (-1)
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 6: -2.0; Should not include minterm ab'c', ab'c, or abc.
    Problem 7: -1.0; (a) Use ""on"" and ""off"" for CMOS rather than 0 and 1.
    Problem 8: -8.0; r7[2]=r0 is storing a value into memory, not loading an immediate value (-1). r5 = r4 & r2 instruction incorrect (-1). Missing part c output, so part d also cannot be validated (-6). However, mult is likely around 0x000a and A[] is likely around 0x0017.","98","-1 for page 2 in the verilog module, you did not initialize q = 0.-1 for Page 7 in the debounce module, the KEY[0] should be ~KEY[0].","100",,,,"79",,"5",,"4",,"72",,"59",,"52",,"1",,"64",,"5",,"3",,"36",,"6",,"4",
"egrow2","Grow, Emily","93.5",,,,"100",,"98","(-1) - The pattern that occurs with negative numbers is that as they decrease towards larger negatives, their hex value decreases as well.(-1) - A bit can only be 0 or 1, therefore your intuition is correct but you would listing the bytes. It the bit is 0 it is positive and if the bit is 1 it is negative.Overall great work! ","95","Program 2: Missing the values of &A, *(&A), A, A[0], and *A. (-3)Program 3: Did not load the value stored at A into r1. (-1)Program 4: Displacement for the bz instruction is 2. (-1)Great work. -shayden2","100",".In the future, please use descriptive variable names in your code to improve clarity ","88","netid: egrow2
Score: 88.0

Comments: 
    Problem 1: -3.0; Part b: hex should be 0x2E. Part c: decimal should be 183. Part d: hex should be 0x9C
    Problem 3: -3.0; Part B: wrong hex. Part C, D: wrong decimal values
    Problem 4: -2.0; Part D: wrong binary and hex
    Problem 5: -4.0; Part A: Binary and hex incorrect (-2).  Part B: Binary and hex incorrect (-2),","99.5","-0.5: Missing ""count"" on waveform with radix=unsigned.  ","98.5","Your equations for g6 was not properly reduced to its minterms (-0.5).Make sure you use the radix that the question asks for in your waveforms (-0.5)You incorrectly changed the sign of 0x6 in b decimal in the Part 2 table (-0.5). ","100","When testbenching, you don't need to reassign a reg every time interval. Their values are preserved until it is change to a different value. ","99","netid: egrow2
Score: 99.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)","98","-1 for page 2 in the verilog module, you did not initialize q = 0.-1 for page 5 in the testbench, 20 cycles means #200, not #100","100",,,,"78",,"5",,"4",,"76",,"68",,"57",,"1",,"67",,"5",,"3",,"40",,"6",,,
"agutier6","GutierrezElizondo, Alejandro Jose","99.5",,,,"71",,"100","Great work!!","99","Program 3: The 16-bit address associated with label A is 0x3. (-1)Great work. -shayden2","99","-1: In your tabulator out0, your in2'in1in0 should read in0'in1'in2 and the equation is incorrect, as this term is not covered by other casesHowever, this was fixed in your code, so the mistake did not propagate ","100","netid: agutier6
Score: 100.0","96","-4: Error 2 & 3, ""ModelSim transcript errors/warnings:"" incorrect.","99.5","Your second k-map in part 6 is incorrect. Remember, you want the fewest number of circles possible - so if there are no minterms that aren't already in a circle, don't make any more circles (-0.5). ","98","When testbenching, you don't need to reassign a reg every time interval. Their values are preserved until it is change to a different value. In your test bench, you didn't test for opcodes 5 and 6, (and in doing so, didn't change the value of b). Remember, the goal of a test bench is to check all situations. -2","95","netid: agutier6
Score: 95.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 6: -2.0; Should not include minterm ab'c', ab'c, or abc.
    Problem 8: -2.0; Part b: In r7=A, or instruction is incorrect (r13 is empty) (-1). Part d: A[] is at 0x0017, not 0x0023 (23 is the decimal translation) (-1)","100","","76",,,,"79",,"5",,"4",,"76",,"59",,"52",,"1",,"70",,"5",,"3",,"40",,"6",,,
"pharkins","Harkins, Patrick","99",,,,"98",,"96","(-4) - I think you add a mistake with your entering of answers cause you separated the answers for ""What were your results for -1, -2, -3?"" into three different boxes. The -4 is for the missing answer for the two other boxes.Otherwise great work!!","88.5","Program 1: It seems that you have the hex encoding and the memory location switched. (-1) r0 is the register that the return code comes from. (-0.5) Incorrect procedure for xor. (-1)Program 2: Missing values for &A, *(&A), A, A[0], *A. (-3) You cannot directly load 0xabcd into r2. You have to follow the same procedure as you did above. (-1)Program 3: Did not store the sum of A[0] and A[1] into A[2]. You need to use the st instruction with the offset of 2. (-1)Program 4: Incorrect hex values of instruction. (-1)Program 5: When implementing your loop, make sure to use registers that make sense. You loaded values into r1 and r2, then used r11, and r10 the rest of the way through, even though you don't know their values. (-3)-shayden2","99","You do not need to include your Verilog code files in your submission.However, you do need to include a QAR file.  There is no penalty for this studio, but all future studios will have a 10 point penalty if you fail to include one-1: You did not include the fourth LED in your system_de2 code provided.  I'm guessing this was fixed, as your RTL netlists are correct, but please update the code you provide in the future.  ","91","netid: pharkins
Score: 91.0

Comments: 
    Problem 2: -1.0; Part d: incorrect binary, should be 01010001
    Problem 5: -5.0; No overflows given (-5)
    Problem 6: -3.0; Part E: Hex, binary, and overflow incorrect (-3)","92","NOTE: You must submit a QAR file in the future, not separate .v files. To make a .QAR file go to Project->Archive Project.-3: Incorrect answer to blue line questions.-3: Error 1-3: Missing further detail for ""Quartus transcript errors/warnings:"".-2: Error 1, And ""The ModelSim transcript did not have any errors or warnings"" is not correct. ","92","When declaring multibit regs and wires, make sure that you follow the format [6:0] if it were 7 bits, instead of [0:6]. Doing it as [0:6] inverts the order of the bits when in the waveform (-0.5).In your table in Part 2, you didn't give the signed decimal value for a, b, or s (-1.5).Make sure you use the radix that the question is asking for in your waveforms (-0.5).No RTL netlist (-3), I did note your attempt. No picture either (-1).In the table in part 3, some decimal values in a decimal and s decimal are incorrect. This resulted in one of your overflows being incorrect (-1.5).","100","When testbenching, you don't need to reassign a reg every time interval. Their values are preserved until it is change to a different value.  ","93","netid: pharkins
Score: 93.0

Comments: 
    Problem 6: -2.0; Should not include minterm ab'c', ab'c, or abc.
    Problem 8: -5.0; One of your shift left instructions is missing a parameter (-1). mult is at address 0x000a (-2). A[] is at address 0x0017 (-2).","100","One comment, in the testbench, please use always *** to generate the clk signal.","99",,,,"79",,"5",,"4",,"68",,"0",,"47",,"1",,"62",,"5",,"3",,"37",,"6",,"4",
"pharkin2","Harkins, Peter","93.5",,,,"100",,"100","Great work!","89.5","Program 1: The register that produces the return code is r0. (-1)Program 2: Incorrect value of the 7:4 bits at memory locations 2 and 3. (-2) Missing values of A, A[0], and *A. (-1.5)Program 4: Missing the rest of the meaning of the hex digits stored at memory location 0001. (-1)Program 6: Incorrect memory address of fun1, fun2, jal fun1, and jal fun2. (-2) Proposed fix would cause an infinite loop. (-3)","100","Good job","95","netid: pharkin2
Score: 95.0

Comments: 
    Problem 1: -2.0; Part b: Hex should be 0x2E. Part d: Decimal should be 156
    Problem 5: -3.0; Incorrect hex in Part A (-1), Part C overflows (-1), Part D does not overflow (-1)","97.5","-0.5: Missing ""count"" wire with radix=unsigned in first waveform.-2: Error 1, ""ModelSim transcript errors/warnings:"" incorrect. ","97","No equations for g4, g3, g2, g1, or g0 (-2.5)In the fourth k-map in part 6, your circle at 01/10 could be expanded to both 01/10 and 00/10. Circles are allowed to overlap. (-0.5) ","99","In the first picture, your opcode was 4, not 5 (-1)","88","netid: pharkin2
Score: 88.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 6: -2.0; Should not include minterm ab'c', ab'c, or abc.
    Problem 8: -9.0; Missing parts c and d. The issue was that you didn't write the labels (finish, loop, shift) in from of the corresponding lines of code (-9)","97","-1 for page 2 in the verilog module, you did not initialize q = 0.-1 for part 3 in the testbench, ""20 cycles"" means you should use #200 instead of #100.-1 for part 4 in the debounce module, KEY[0] should be ~KEY[0].","82",,,,"79",,"4",,"4",,"76",,"0",,"53",,"1",,"62",,"4",,"2",,"38",,,,,
"oheming","Heming, Olivia","87",,,,"69",,"99","Part 3 Pattern Question: There are no unused spots when representing integers, just bits that are one or zero. When representing negative integers, C counts backwards from all ones (0xffffffff = -1) rather than forward when representing positive integers (0x00000001 = 1). (-1 point)Be sure to always begin hex values with a 0x. Great work on this studio. -shayden2","33.5","Program 1:-1: In question about ldi's limitations, you referred to ra and rb, which do not exist for ldi.  8 bits are used for the opcode and rw, and the last 8 bits are available for imm8, which is the number to be loaded.  Since only 8 bits available, only 8 bit numbers can be loaded.No points taken, but try to optimize register usage more in your albaCore programs.  You can use fewer registers in both of your programs in this sectionProgram 2: -14: Missing answers asking you to add lines to your programIn future, remember to use 0x prefix to reference hexadecimal numbersProgram 3:-3: high(A) = 0x0, low(A) = 0x3, and the address to A is 0x0003.  High(A) and low(A) refer to first 8 bits and last 8 bits of the address A respectively, which would be subbed into the program by the assembler.  0xcafe is the value actually stored at the memory address A.-6: Missing answer to second part of question-8: I'm really not sure what to make of this part 3. The line below .data should read A: 0xcafe, oxf00d, 0  , and the program (beginning with .text) should load the address of the first element of A using high, low, shl, and or, and then use ld with offsets to load elements of the array, add them, and store them in the third element.-18.5: Program 5 not attempted-16: Program 6 not attempted","97.5","-1: Last multiple choice question is incorrect.-1: Used ""+"" instead of ""|"" in tabulator.-0.5: Incorrect netlist for tabulator (adder in netlist rather than or gate). ","84","netid: oheming
Score: 84.0

Comments: 
    Problem 3: -8.0; All parts wrong: unnecessary and improper bit flipping
    Problem 4: -2.0; Part C, D: no hex
    Problem 5: -6.0; Incorrect binary and hex in Part A (-2), Incorrect hex and binary in Part B (-2), Incorrect hex and binary in Part E (-2)","95","Don't forget to include your name in the future.In your tabulator, use the '|' operator for OR, not '+'. '+' is addition, not an OR (-0.5).In your test bench, you can set a value for all of the bits in 'in'. For example, you could say ""in = 3'h0"" to set in to be 000. However, you did not put any values for any of the testIn regs (1.5).Error 1 should've had errors in ModelSim - check the terminal for errors in the future (-1)In Error 2, you should un-pause it by restarting the simulation (-1).Error 3 has the same issue as Error 2 (-1). ","92","-1 pg 8 incorrect addition-2 system_de2 has ""LEDG"", not ""LEDG[0]"", so overflow light does not go off as it's supposed to-3 pg 17 subtraction is entirely incorrect-2 Incorrect tested values for testbench ","97","-1.5 on Page 6 for not showing b, op and f on the lcd-1.5 on Page 12 for not showing b, op and f on the lcd","44","netid: oheming
Score: 44.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 6: -5.0; Did not do problem 6.
    Problem 7: -25.0; Blank
    Problem 8: -25.0; No submission","89.5","Bottom right entry in table incorrect (-.5)
Missing initialization for q in my_dff (-1)
Incorrect waveforms for q in lfsr_tb (-8)
Board picture should show clock cycle after 0 (-1)","100",,,,"79",,"5",,"4",,"76",,"68",,"52",,"1",,"62",,"5",,"3",,,,"6",,,
"aherman3","Hermann, Ann","99",,,,"100",,"99","Part 5 NOT a (~a): In this case a is only a 4 bit integer, so the not of a should also only be 4 bits. In your answer, you included 32 bits, and the f's change the value. Your program gave you 0xfffffffc because it defaulted a (3) as a 32 bit integer. Be sure to not change the number of bits that you are given when performing nots. (-1 points)Great work. -shayden2","95","Program 1:ldi syntax should not include equal signs.  No points off since I understand you were trying to show the initial values, but you only needed to include the code you added.  The 3 and 5 were assumed from the previous problem-2: Unnecessary ldi and shl on r11.  ldi loads the value as to the last 8 bits of the rw register, so no need for any shifting there, especially not by 0, which would just unnecessarily copy the value into an extra register, decreasing the memory efficiency of the programProgram 2:No points off, but in the future, try to remember to use the 0x prefix for hex numbers. In the problem asking you to load A[] = {7, 8, 9}, you did not have to include extra lines loading the address and 7, as those are assumed to carry over from the previous question.-1: Unnecessary shl in the program to store 0xef in 0xabcd.  I'm not sure why you would want to shift 0xef 8 bits to the left, especially since you did not do anything with the shifted value.  Regardless, there is no reason to include it.Program 4:-2: In the first question memory location 0001 does not refer to the value of r5, but rather to the second instruction, the bn.  These are listed when you run the simulator, although they are easily confused for something counting each instruction executed.  They are found to the left of the instruction executed.  In this case, it would have been 0xc025, with c referring to the opcode of bn, 02 referring to the displacement, and 5 to the register to check for the condition.Program 5:No points off, but it is perfectly fine to use the labels to determine your displacements, instead of figuring out the displacements yourselfProgram 6:Your way of resolving the problem results in intended behavior, so no points off.  However, technically, you are supposed to copy the first r15 to another register (r14 for example), then call fun2, and restore the value of r15 from r14 before returning again, for the sake of completing the function return all the way.  Your approach works in the case there is no more to execute outside of fun1 and fun2 only.  If there was more outside the function calls, you would have to use the above approach to return from fun1.  ","100","","95","netid: aherman3
Score: 95.0

Comments: 
    Problem 5: -5.0; No overflows given (-5)","98.5","In future test benching, you can set all of the bits of ""in"" to a specific value in one statement. For example, you could say ""in = 3'h0"" to set all of the bits to 0. In the error problems, you need to give specific warnings, not just how many (-1.5).","99.5","Please only submit one QAR file in the future.-0.5 No RTL view of full adder provided where requested (shown later)  ","100","Great work!","90","netid: aherman3
Score: 90.0

Comments: 
    Problem 2: -8.0; Problem specifically said to use the other properties of Boolean algebra to prove this one
    Problem 7: -1.0; (a) Use ""on"" and ""off"" for CMOS rather than 0 and 1.
    Problem 8: -1.0; In r7=A, the add instruction is unncessary (-1).","95","Missing initialization for q in my_dff (-1)
Only showed half the test cases in LFSR_tb waveforms (-3)
KEY[0] needs to be inverted (-1)
Great work!","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"67",,"5",,"3",,"37",,"6",,,
"ehieatt","Hieatt, Emily","71",,,,"76",,"87","Part 5 NOT a explanation: No explanation included. (-1 points)Part 5 masks values: Incomplete. (-4 points)Part 5 masking program: Incomplete. (-8 points)-shayden2","13.5","Program 1:-1: No explanation for why ldi can only load an 8 bit value-1: The hex encoding of ldi r1, 5 is not 0x5.  It is 0x7105, with 7 being the opcode, 1 referring to r1, and 05 being the value to be loaded.  No points off, but consider finding ways to use fewer registers in the programs in this section, for example by overwriting registers whose values you no longer need, as that makes the code more efficientProgram 2: -3: No answer for why the two instructions use different bit fields for the offset.  -27 for missing answer to other questionsPages 5-11 of pdf missing, so no credit for Programs 3-6.If this was an error you were unaware of, please reach out, and see if something can be worked outFor now, -54.5 for missing pages.  ","94","Note: You need to submit at QAR file not a .qpf file. This can be created by going to Project->Archive Project. In the future this will result in deductions, so please try to remember in the future!-4: 2 multiple choice left blank.Note: In the tabulator module, (a^b^c) covers all cases, the minterm a*b*c isn't needed.-2: Very last question left blank.","96","netid: ehieatt
Score: 96.0

Comments: 
    Problem 1: -1.0; Part c: Hex representation should be 0xB7
    Problem 2: -3.0; Part a: Hex representation should be 0x11. Part d should be 01010001 and 0x51","98","I'm a little confused about your testbench. Why did you assign 8 bit values to in, which is only 3 bits? It's best to test all situations (i.e. set in to 3'h0, 3'h1, 3'h2, …, 3'h7) when testing. Quartus should have given you warnings regarding this issue. (-2)","24","-66 Missing almost entire lab report [I added up what points were earned]-10 No QAR penalty","100","","54","netid: ehieatt
Score: 54.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 6: -3.0; Missing minterm a'bc'. (-1) Should not include minterm ab'c', ab'c, or abc. (-2)
    Problem 7: -20.0; Missing 4 parts of (a) and CMOS is written with 0 and 1 rather than ""on"" and ""off"". Missing parts (b-d).
    Problem 8: -22.0; The instructions you have in part b are correct, but most are missing (-13). Parts c and d missing (-9).","84","No QAR file submitted (-10)
To testbench a clock, use ""always #5 clk = ~clk""; don't write out explicit values for the clock (-2)
Only showed half the test cases in LFSR_tb waveforms (-3)
KEY[0] needs to be inverted (-1)","84",,,,"0",,"5",,"4",,"76",,"26",,"14",,"1",,,,"5",,"3",,"30",,,,,
"shnat","Hnat, Sydney","76.5",,,,"100",,"88","Note: No deduction this time, but in the future it will be 50% off if you submit after midnight the day before your lab section.Part 3 Pattern: C represents negative integers by counting backwards from all 1's to represent -1, and so forth. (-1 point)Part 3 most positive and negative hex values: Positive: (0x7fffffff)   Negative: (0x80000000) (-2 points)Part 3 most negative decimal: -2147483648 (-1 point)Part 3 program: incorrect representation of most negative (-1 point)Part 5 NOT a explanation: Incomplete (-1 point)Part 5 mask values: 0x0000000f, 0xfffffff0 (-3 points)Part 6 shifting: incorrect explanations (-2 points)Part 6: program does not represent shifting a negative integer (-1 point)-shayden2","22.5","I can only grade what's present right now, so there will be points off for anything not here right now (2/10).  Reach out if there is an issue.Program 1:-1: the add instruction should be stored at 0x2, if you copied the code directly-1: The hex encoding of ldi r1, 5 is 7105, with 7 being the opcode for ldi, 1 referring to r1, and 05 being the value to be stored, as encoded in hex.-4: The program to store 0xabcd into r5 has many issues.  Firstly, there appears to be three separate programs included in the box your program was copied into.  I am focusing mainly on the last one, as that seems to be closest to correct, but in the future, clean up your submission. Your main issue appears to be a misunderstanding in how shl works.  It does not simply slide the second argument in behind the first.  Rather it shifts the first argument over by the number of bits indicated by the second argument.  So when you write shl r11, r12, r13, with r12 = 0xa and r13 = 0xb, as you did in your submission, really what you are doing is shifting 0xa to the left by 0xb = 11 bits, which is not the intended behavior.  Instead, you should load 8 into another register, and shl r12 by that register, to make room for the second set of bits.  ldi also allows up to 8 bits, which would be two hex digits, so you should have stored 0xab into a register, shifted it over by 8, stored 0xcd in another register, and used or to combine the shifted register with the one holding the lower 8 bits (0xcd).Program 2:  -1: The value of &A would be 0xa0, as it refers to the memory address A would be stored at.  Registers are different than memory locations-2: A[0] would refer to the contents of memory location A, so it would be the stored value of 7.  *A is a way to dereference A, thereby giving the contents of the memory address, also making it 7.-68.5 for missing work","97","-3: Last three MC are incorrect.In response to your comment, you did the RTL views correctly, I don't know what the waveforms mentioned are about but it was probably meant for studio 4.","0","netid: shnat
Score: 0","83","Don't forget to include your name in the future and to be prompt with your submission. In future test benches, you can assign all of the bits to a reg at once using for example, ""in = 3'h0"" for 3 bits, written in hex.If you cannot get a waveform to show up, make sure that it's compiled. If it still doesn't appear, make sure you restart and then select run to end. Additionally, don't hesitate to ask a question on Piazza or go to office hours for help. (-4)In Error 1, you should've gotten a Implicit Net Warning for ""COUNT"". Additionally, the wires are not crossed - tabulator is entirely disconnected from decoder. Similar to the last issue, Modelsim shouldn't have an issue showing waveforms. (-3).No answers from Error 2 and 3 (-10).","41.5","-10 no QAR file submitted-2 incorrect logic for g[3]-0.5 Verilog overflow code has ""****"" rather than ""cout""-0.5 Incorrect decimal value in subtraction (pg 7)-1 pg 10 Waveform incorrect b/c g[3] error-1 pg 15 Incorrect waveform radix-2 pg 15 no photo of boardRaw score: 83 Late submission: -50%Final score: 41.5","100","","60.5","netid: shnat
Score: 60.5

Comments: 
    Problem 4: -1.0; Answer should be left as (a’ + c)(a’ + b’ + d)(a’ + c’ + d’). (-1)
    Problem 5: -2.0; Part a. Answer can be simplified to a + bd. (-1) Part b. Answer should be a'b'd. (-1)
    Problem 6: -1.0; Missing minterm a'b'c'. (-1)
    Problem 7: -19.0; (a) Use ""on"" and ""off"" for CMOS rather than 0 and 1. pF, nP, F, G missing or incorrect. (b) Not sum of min terms or missing. (c-d) Missing.
    Problem 8: -16.5; For r7=A, you should have used low(A) and high(A) with a left shift, as in the previous studio, not ldi (-2). Should have branched to mult label (-1). For r7[2] = r0, the instruction parameters are out of order (-.5). Missing 3 instructions (-3). Instruction on finish line should use jr r15 (-1). Missing parts c and d (-9).","99","Unnecessary d register in LFSR_tb (-1)
Great work!","100",,,,"79",,"5",,"4",,"76",,"65",,"57",,"1",,"66",,"5",,"3",,"39",,"6",,,
"ihorvath","Horvath, Ian","91",,,,"100",,"100","Great work. Be sure to remember to always begin hex values with a 0x. -shayden2","91","Program 1:-2: The ldi instruction does not fill the upper 8 bits with zeros.  The first 8 bits are reserved for the opcode and the number of the register to store the value in.  Since albaCore is a 16-bit architecture, using 4 bits for both of those leaves only 8 bits for the value to be stored.-2: You should not have stored 1 in r0 and r1 in your first program in this part.  The values 3 and 5 were meant to carry over from the example code for the section, as the code you wrote here was supposed to be appended to the example code.Program 3:-4: Incorrect program to handle A[] ={0xcafe, 0xf00d, 0}.  You successfully got the starting address into r2 and loaded the first element of the array into r1.  However, you the overwrote the address with a random value from an undefined bit of memory.  All you had to do was increase the offset to access the other two values in the array (for example: ld r3, r2, 1 would get A[1] = 0xf00d into r3).  Once you had that stored in some other register, you would then sum them and store it into the third slot by using st, the address in r2, and an offset of 2.Program 5:No points off, but using labels is generally good practice.Program 6:-1: Right idea for fixing the infinite lop, but you left r14 undefined.  Need to define r14 to use it store into memory.  You could have stored r15 directly into r14 using an or instruction to get around this. ","99","-1: Last MC is incorrect.Note: I don't know whether or not you got incorrect values, but your tabulator might need parentheses around each minterm because of how order of operations work in assignment statements. ","100","netid: ihorvath
Score: 100.0","99","In the future, you can assign multi-bit regs at once using, for example, ""3'h0"" for 3 bits, with the value written in hexadecimal.Also in the future, use ""windows + shift + s"" to take a cropped screenshot - it's saved to your clipboard, so just paste into your document. In Error 1, Modelsim should've given some warnings - check the terminal to see these warnings/errors. (-1) ","100","","100","","99","netid: ihorvath
Score: 99.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)","100","Great work!","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"70",,"5",,"3",,"39",,"6",,,
"thorwitz","Horwitz, Tyler","87",,,,"100",,"100","Great work. -shayden2","96","Program 1:-1: Your description of why ldi cannot store a 16 bit number is incomplete.  While you are correct that the first 4 bits are for the opcode, and the last 8 are for the value to be itself, that leaves 4 bits unaccounted for, which are used to designate which register to store the value into.  Program 2:-1: *A is the value stored at location A in memory.  * is the dereference operator in C, which gets the contents of a memory location, which in this case is 7.Program 4:-2: Your displacements are wrong.  The displacements are the number that the program counter gets incremented or decremented by, so they would be 2 and -4 respectively. ","97.5","-1: Last MC is incorrect.-1: out0 assignment statement should not use ""+"". We were also looking for a sum of minterms with this boolean equation.-0.5: Netlist incorrect because of ""add"" module. ","93","netid: thorwitz
Score: 93.0

Comments: 
    Problem 5: -7.0; Part C overflows (-1), Incorrect hex, binary and overflow for Part D (-3), incorrect hex and binary for Part E (-3)","94","In the future, you can assign multi-bit regs using hexadecimal and decimal - for example, ""3'h0"" for 3 bits, with the value written in hexadecimal. 
When you screenshot your waveforms, make sure you include the tile of each wave. Additionally, you don't need to show the individual binary wave forms. In Error 1, you need to state what the error is, not just show the RTL view. The same goes for the waveform. (-2).This also applies to Error 2 and 3. (-4)","98","-1.5 pg 9 include reg/wire names in waveform screenshot-0.5 pg 13 s_hex should be in binary radix in waveform ","100","","90","netid: thorwitz
Score: 90.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 7: -4.0; (d) No steps shown.
    Problem 8: -5.0; Load instruction is not needed int r7=A; A refers to the address of A, so you should have loaded that into r7, not A[0] (-1). goto loop should be translated as br loop (-1). Instruction by finish label should be jr r15 (-1) Incorrect address for A, it is 0x0018 in your case (-2)","96","lfsr_tb is missing half the test cases (only 10 CCs instead of 20) (-4)
Great work!","100",,,,"79",,"2",,"4",,"76",,"68",,"57",,"1",,"70",,"5",,"3",,"39",,"6",,,
"ahouser2","Houser, Aubrey","63",,,,"86",,"91","Note: No deduction this time, but in the future it will be 50% off if you submit after midnight the day before your lab section.Part 3: most positive and negative values: (-4 points)Positive: 2147483647 (0x7fffffff)Negative: -2147483648 (0x80000000)Part 3 does C care: adding 1 to the most positive value makes the value overflow and become the most negative value. C will still display it, however, and cannot tell if anything is wrong. (-1 point)Part 3 NOT a: 3 = 0011.  Not 3 = 1100. This is decimal 12, or hex 0xc. (-1 point)Part 3 program: incorrectly represented most positive and most negative. (-3 points)Be sure to always include the 0x at the beginning of every hex value. -shayden2","0","No submission","0","No submission","58","netid: ahouser2
Score: 58.0

Comments: 
    Problem 2: -2.0; Binary representations should be 8 bits wide; Part d: hex should be 0x51
    Problem 3: -1.0; Part A: wrong hex
    Problem 5: -4.0; Incorrect binary and hex in part A (-2), Part C overflows (-1), incorrect hex in part D (-1)
    Problem 6: -5.0; No overflows given (-5)
    Problem 7: -10.0; Answer missing
    Problem 8: -20.0; Answer missing","86","Don't forget to include your name or QAR in the future. In the future, you can assign multi-bit regs at once using, for example, ""3'h0"" for 3 bits, with the value written in hexadecimal.
Also in the future, use ""windows + shift + s"" to take a cropped screenshot - it's saved to your clipboard, so just paste into your document. There's no included waveform (-5).Error 1, 2, and 3 only have the Quartus transcript error listed (-9).","0","No submission","0","No submission","96","netid: ahouser2
Score: 96.0

Comments: 
    Problem 5: -1.0; Part b. Answer should be a'b'd. (-1)
    Problem 6: -2.0; Does not list minterms.
    Problem 7: -1.0; (a) Use ""on"" and ""off"" for CMOS rather than 0 and 1.","77","LFSR module should use 4 instances of the dff module and create its own register (-4)
Incorrect simulation results (-6) -- I suspect that what has happened is your bits got flipped around somewhere along the way. I strongly recommend you stick to the [3:0] convention rather than [0:3] to avoid issues like this.
LFSR_de2 and RTL are largely incorrect (see the solution) (-10)
Missing board photo (-3)
 ","100",,,,"0",,"4",,"4",,"76",,"0",,"0",,"1",,,,"4",,"3",,,,"2",,,
"jhracho","Hracho, Jake","78",,,,"100",,"96","Part 6 Shifting: Missing general pattern for left shifting and right shifting with negative number. (-2 points)Part 5 Program: Incorrectly masked to 1 (-1 point). Missing shifting of negative integer (-1 point).Great work. -shayden2","99","Please send in your documents as PDFs.Program 3:-1: You forgot to store the result of A[0] + A[1] into A[2].Program 6:No points off, as program would work as intended, but technically you were supposed to store the value of r15 in fun1 into another register and restore it after you return from fun2.","100","Note: You should have submitted a .QAR file. In the future no .QAR file is -10 points. To make this file go to Projects->Archive Project.Good work, clean lab report.","92","netid: jhracho
Score: 92.0

Note: You must submit as a pdf in the future or there will be a deduction.

Comments: 
    Problem 2: -2.0; Part a: should be 00010001 and 0x11
    Problem 5: -2.0; Incorrect binary and hex in part A (-2)
    Problem 7: -1.0; -1 Tested with 0x0000abcd rather than 0x00abcdef as instructed
    Problem 8: -3.0; -3 Results not displayed in hex format","96.5","Your testbench only assigns values to two of the bits in ""in"". You should use something like ""in = 3'b000"", since the 3 indicates the number of bits, not position. (-0.5)Error 2 shouldn't have any Modelsim errors - this is likely due to the error in your testbench previously mentioned (-1).Error 3 has no answer written for Quartus RTL problems and Modelsim transcript errors/warnings (-2).","100","","100","","93","netid: jhracho
Score: 93.0

Comments: 
    Problem 4: -1.0; Correct answer is (a’ + c)(a’ + b’ + d)(a’ + c’ + d’). (-1)
    Problem 7: -4.0; (d) No steps shown.
    Problem 8: -2.0; mult label is at 0x000a (-2)","100","Great work!","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"60",,"5",,"3",,"37",,"5",,,
"chunt4","Hunt, Christopher","97",,,,"100",,"99","Part 3 negative integers pattern: C represents negative integers by counting backwards from all 1's for -1. 0xffffffff = -1, 0xfffffffe = -2 (-1 point)Great work. -shayden2","96","Program 2:-1: Error in program to create A[] = {7, 8, 9}.  Second store statement needs an offset of 2, as otherwise it would overwrite the 8.Program 3:-1 The address is not 0xcafe.  High(A) gives the first 8 bits of the address, and low(A) gives the last 8 bits, so adjoining them would give the address 0x0003.  0xcafe is what is stored at that addressProgram 6:-2: No code provided for last question.  You were supposed to copy your code in here, although your description sounds good. ","100","","97.5","netid: chunt4
Score: 97.5

Comments: 
    Problem 2: -2.5; Part a: binary representation should be 8 bits wide, Part c: This value cannot be represented in 8-bit binary/hex","97.5","Don't forget to include your name. Red lines in Modelsim are due to unknown values, not necessarily unitialized outputs. Your testbench only has 2 bits being assigned to testIn, which has 3 bits. The first number when assigning indicates the number of bits - for example, ""testIn = 3'b000"" assigns 000 to all 3 bits in testIn. (-0.5).Error 2 should have no Modelsim transcript errors/warnings - this is likely due to the previous issue regarding your testbench. (-1).Error 3 has the same issue as Error 2 (-1), as there should be no Modelsim transcript errors/warnings. ","94.5","-0.5 pg 4 Incorrect radix in waveform-1.5 pg 10 Incorrect radix in waveform-1 pg 13 Incorrect values for s hex in waveform-1 pg 14 Switches not correctly wired to red LEDs-1.5 pg 19 Incorrect radix for waveform ","99","-1 on Page 12, you should display the waveform as hex radix.","100","netid: chunt4
Score: 100.0","92.5","4th value for q in table should be 0xa (-.5)
To testbench a clock, use ""always #5 clk = ~clk""; don't write out explicit values for the clock (-2)
LFSR_tb waveforms for q should be in hex radix (-1) and you are missing the last half of the test cases (-3)
KEY[0] should be inverted (-1)","100",,,,"79",,"5",,"4",,"75",,"68",,"57",,"1",,"69",,"5",,"3",,"40",,"6",,"4",
"minteri2","Interiano, Mauricio","100",,,,"100",,"96","Part 3 most positive and negative values: Incorrect hex values Instead of 0xffffffff and 0x00000000, values should be 0x7fffffff and 0x80000000. Missing signed decimal values. (-4 points)Great work. -shayden2","90","Program 1:-2: Incorrect description of how ldi is encoded.  The first 4 bits are indeed for the opcode, but the next 4 encode which register to write the value to, while only the last 8 hold the value to be written.  No points off, but using the 0x prefix and writing the values in hex instead of converting to decimal makes the program much clearer.Program 3:-1: 0xcafe is not the address of A.  The first 8 bits of the address are given by high(A), and the last 8 are given by low(A).  Combining these would yield the address, which is 0x0003 in this case.  0xcafe is the value stored at memory location A.-3: Your program for handling A[] = {0xcafe, 0xf00d, 0} has some flaws.  Firstly, the line after .data should have read A: 0xcafe, 0xf00d, 0This would have instructed the assembler to store the entire array in memory, which would have saved you significant amounts of code, as then you could have accessed all those values simply using the offset with load and store, instead of having to store them all first.  Program 5:-2: Your code contains two wrong lines.  Given the registers where you stored 1 and 8, the third line (starting from the line after .text) should read L0: bz r2, L1 because the value 8 is what i starts at, and the line after should read shr r2, r2, r1.  r10 and r11 are undefined in your program.Program 6:No points off, but the and r1, r0, r0 line does not technically add the the value of r0 to r1, but copies the value of r0 to r1.-2: Misuse of ld and st in your fixed program.  Those are not for loading and storing to registers, but instead to actual memory.  You can use the and trick previously described to copy values from register to register.   ","100","","80","netid: minteri2
Score: 80.0

Comments: 
    Problem 8: -20.0; Answer missing","96","A red line in Modelsim is due to an unknown value, not necessarily an unitialized input (-1).In Error 1, you need to state the actual issue in the RTL netlist view, not just show the netlist (-1). Errors 2 and 3 should have no errors/warnings in Modelsim (-2).","100","","100","","96","netid: minteri2
Score: 96.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 6: -2.0; Should not include minterm ab'c', ab'c, or abc.
    Problem 8: -1.0; A[] is at 0x0017, not 0x0023 (23 is the decimal version of 0x17) (-1)","100","Great work!","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"70",,"5",,"3",,"36",,"6",,,
"gjakubik","Jakubik, Gavin","93.5",,,,"44",,"89","Part 3: Incorrect representation of the most positive and negative integers. (-4 points)Positive: 2147483647 (0x7fffffff)Negative: -2147483647 (0x80000000)Part 5 NOT a: The bits of a are 0011, so NOT a is 1100. This is represented as C. (-1 point)Program: incorrect representation of -1 in hex (-1 point). incorrect representations of most positive and most negative integers (-4 points). error when shifting 0x5 to the left. (-1 point)Be sure to always begin with 0x when representing hex values. -shayden2","95","Program 1:-1: No explanation for why ldi can only have 8 bits of data to store.  The opcode and the number of the register to store the value in  each use up 4 bits, and since albaCore is a 16-bit architecture, that only leaves 8 bits of space for the number to store.-1: The return code is stored in r0, not r1.Program 2:-2: A[0] would be 7, as the brackets give the contents of the memory location of A.  * is the dereference operator in C, which also gives the value of the memory location, which would again be 7.Program 4:-1: You forgot to list the displacement of the br instruction, which should be -4. ","100","Note: You should have submitted a QAR file. To make QAR files go to Project->Archive Project. (in the future this is -10 points, please remember!) ","93","netid: gjakubik
Score: 93.0

Comments: 
    Problem 2: -1.0; Part d: Binary representation should be 01010001
    Problem 4: -4.0; Part C, D all wrong. Appears that bits are inverted
    Problem 5: -2.0; Parts C and E overflow (-2)","94.5","Make sure to include the .qar in the future. Blue lines in Modelsim are due to unconnected wires, not just outputs (-0.5).
Red lines in Modelsim are due to unknown values, not necessarily undefined inputs (-0.5).When testbenching, you should try to test all possible situations, not just a few values. (-0.5).In the future, you can assign multi-bit regs at once using, for example, ""3'h0"" for 3 bits, with the value written in hexadecimal.Error 1 should've had an implicit net error for ""COUNT"" in the Quartus transcript. Modelsim should've given a warning about the port size for 'out' (-2).Errors 2 and 3 should've had errors from the Quartus Transcript (-2). ","97.5","-1 pg 12 incorrect radix for a and b in waveform-0.5 pg 21 Incorrect overflow-1 pg 22 Incorrect radix in waveform ","99","-1 for the 12 Page, your a is 4, which is different from the test case on the instruction","97","netid: gjakubik
Score: 97.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 8: -2.0; mult label is at 0x000a (-2)","97","Missing initialization for q in my_dff (-1)
dff_tb waveforms are missing labels for signals (-1)
KEY[0] should be inverted (-1)
Great work!","100",,,,"0",,"5",,"4",,"74",,"0",,"0",,"1",,"70",,"4",,"2",,"39",,"6",,,
"hjeon","Jeon, Hye Soo","84",,,,"100",,"98","Part 5 NOT a: The bits of a (3) are 0011. So NOT a is 1100, which corresponds to 0xC. Your answer (0xfffffffc) is representative of 32 bits. a, however, is only a 4 bit integer. (-1 point)Part 5 NOT a explanation: missing explanation (-1 point)Great work. -shayden2","83","Program 1:-2: Incomplete description of why ldi does not allow the loading of a 16-bit value.  This is because in albaCore, all instructions are encoded in 16 bits, and the first 4 bits are used to store the opcode, and the next 4 bits are used to store the number of the register to store the value into.  That leaves only 8 bits to encode the number to store.-1: Incorrect hex encoding for ldi r1, 5.  The correct encoding is 0x7105.  7 corresponds to ldi's opcode, 1 is the number of the register to store the value in, and 05 is the value to store, given in hex.-1: Incorrect initial values for a = r0 and b = r1 in your XOR program.  The initial values should be 3 and 5, which would XOR to 6.  Program 2:-1: Incorrect syntax for ld instruction for loading r13 with A[2].  Should be ld r13, r10, 2-1: incorrect shl syntax in final program in this part.  Should shl r11, r11, r10-1: Incorrect st syntax in last line of program.  Should be st r12, r13, 0.Program 3:-1: incorrect shl syntax in first program in this part.  Should shl r10, r10, r13-4: Did not include process of getting correct address in final program in this part.  Need to show shl and or trick to get 16 bit address before indexing and loading from array.  Also did not include a store into A[2] at the end.Program 4:No points off, but the zero in the hex encoding at memory address at 0001 does not solely mean the value is positive.  It is simply the first half of the hex encoding for the displacement.Program 5:-2: Your loop program has a few errors.  The bz statement should not take a r6 = 0 argument.  That argument should point to a label that is missing from your program, which would be next to a quit statement, so the program can break out of the loop and finish executing when the loop is complete.  So the there should also be an extra line in your program reading something like END: quit.Program 6:-3: Your solution to fixing the infinite loop is incorrect.  In your code, fun2 is never called at all, which goes against the original functionality.  One way to fix the code is to use the and trick used in the code to copy the value of r15 to another register, thus allowing you to restore it when you jump back from fun2.  ","100","","60","netid: hjeon
Score: 60.0

Comments: 
    Problem 6: -10.0; No answer (-10)
    Problem 7: -10.0; Ansewr missing
    Problem 8: -20.0; Answer missing","98.5","Red lines in Modelsim are due to unknown values, not necessarily just uninitialized inputs. (-0.5)In the future, you can assign multi-bit regs at once using, for example, ""3'h0"" for 3 bits, with the value written in hexadecimal.Error 1 should've had a Modelsim transcript error about mismatched port sizes for 'out' (-1). ","99","-1 pg 11 Incorrect radix in waveform","99","-1 on Page 7, some of the LEDs is not showing the states of switches. ","90","netid: hjeon
Score: 90.0

Comments: 
    Problem 6: -2.0; Should not include minterm ab'c', ab'c, or abc.
    Problem 7: -4.0; (c) didn't use inspection
    Problem 8: -4.0; Based on your results, mult is at 0x0018 and A[] is at 0x0018 (-4)","99","KEY[0] should be inverted (-1)
Great work!","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"66",,"5",,"3",,"40",,"6",,"4",
"jjoehlin","Joehlin, Jason","94",,,,"100",,"99","Program: missing shifting of a negative number. (-1 point)Great work. -shayden2","86","Program 3:-6: Missing answer to second question in this part-4: In your final program, you should have included the shift and or trick to store the 16-bit address, even though it was not strictly necessary in this example, as high(A) is the first 8 bits of the address, and low(A) is the second 8 bits, they should be combined before accessing the array.  You should have also included a store statement at the end to place the sum of A[1] and A[0] into A[2].Program 4:-2: Did not include the values of the displacements.  The bz has a displacement of 2, and the br has a value of -4.Program 6:No points off, but the and r1, r0, r0 simply copies whatever is in r0 into r1.-2: Your code would never allow the code after jal fun1 to execute, as the code would terminate after completing fun2.  One potential way around this, is to store r15 in another register in fun1 before calling fun2, and restoring the value after returning from fun2, thus allowing you to return from fun1 without creating an infinite loop. ","99","-1: Last MC is incorrect. ","91","netid: jjoehlin
Score: 91.0

Comments: 
    Problem 5: -3.0; No answer for part E (-3)
    Problem 8: -6.0; -6 Operands not displayed in hex or dec","93","A red line in Modelsim means that there's an unknown value. You didn't include your code for tabulator (-5).In the future, you can assign multi-bit regs at once using, for example, ""3'h0"" for 3 bits, with the value written in hexadecimal.Error 1 should've had a ModelSim warning about a port size mismatch for 'out'. (-1).Error 2 should have no issues in the RTL netlist (-1).","100","","100","","96","netid: jjoehlin
Score: 96.0

Comments: 
    Problem 6: -2.0; Does not list minterms.
    Problem 7: -1.0; (d) missing steps for G.
    Problem 8: -1.0; Missing shift operation in the r7=A instructions (-1)","97","Missing board photo (-3)","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"70",,"5",,"3",,"39",,"6",,,
"jkerriga","Kerrigan, James","65",,,,"100",,"95","Part 5 NOT a: missing explanation (-1 point)Part 5 mask values: Incorrect values. Correct values are 0x0000000f and 0xfffffff0 (-2 points)Program: incorrect masking (-2 points)-shayden2","32.5","Please provide your documents as PDFs in the futureProgram 1:-1: Your description of why ldi cannot take a 16-bit value is only half correct.  The second 4 bits encode the number of the register to load the value into, and last 8 bits encode the value to be loaded.-1: The hex encoding of ldi r1, 5 is not 0x5.  It is 7105, where 7 is the opcode for ldi, 1 refers to r1, and 05 is the value to be loaded into r1.-2: Your XOR is slightly incorrect.  The operation you performed was ~(ab) | ~(ba), which can be rewritten as (ab)' + (ba)' to use the boolean equation notation.  The operation you were supposed to perform was ab' + a'b.-6: Second answer was missingProgram 2:-0.5: Forgot to include actual hex value for bits 7:4 at location 2, which is 0xb.-2: A would be equal to its memory location, 0xa0.  A[0] is equivalent to the contents of the first memory location, which in this case would be 7.-14 for missing answers in this section.Program 3:-3: Incorrect values for high(A), low(A) and memory location A.  If you copied the code directly,these would be equal to 0x0, 0x3, and 0x0003 respectively.-17 for missing answers in this sectionProgram 4:-2: The hex encoding stored at 0001 should be c025, which is the encoding for bn r5, 2.  The c corresponds to the opcode for the bn instruction, the 02 refers to the displacement, and the 5 refers to the register to be checked, which is r5.  -2: The displacement is just 2, as determined by the location of the label L1 to jump to relative to the instruction.-2: The displacement here is -4, as determined by the location of the label L2 relative to the instruction.   Program 5 missing, -6Program 6:-1: The and r1, r0, r0 copies the value of r0 into r1.-2: r1 can be used in both functions.  The actual problem is that the jal in fun1 will override the return address written by the first jal, thus causing an infinite loop as the code constantly loops, as the return address points to the next instruction after the jal instruction.-6: Missing answer to fixed code question       ","95","Note: Please include a QAR file next studio. This can be found at Project->Archive Projects. (this is -10 points on future labs, please remember!)-3: Last 3 MC are incorrect.-2: Incorrect out0 and out3 assignments for decoder. ","0","netid: jkerriga
Score: 0","90.5","Don't forget to include the .qar in the future and be prompt with your submission.A red line doesn't necessarily mean that the value will be initialized later - it just means that it has an unknown value. OR operators in Verilog only require one '|' operator, not two (-0.5).In the future, you can assign multi-bit regs at once using, for example, ""3'h0"" for 3 bits, with the value written in hexadecimal.You didn't include your waveform (-5).In Error 1, give specific warnings/errors/issues for Modelsim (-2). In Error 2, there should be issues in the waveform (-1).In Error 3, what do you mean by ""wire not translating""? Be more specific (-1). ","29","-61 Missing answers-10 No QAR penalty","78","-10 for missing QAR file-10 for missing two photos of the board-1 on Page 10, in the testbench you should set b to 1 when the op is 5 and 6-1 on Page 10, in the waveform, missing one test case op = 7","73","netid: jkerriga
Score: 73.0

Comments: 
    Problem 5: -2.0; Part a. Answer can be simplified to a + bd. (-1) Part b. Answer can be simplified to a'b'd. (-1)
    Problem 8: -25.0; No submission","19","Missing QAR file (-10)
Missing initialization for q in my_dff (-1)
Missing sections (-70)","100",,,,"79",,"4",,"4",,"72",,"59",,"48",,"1",,"18",,"5",,"3",,,,"6",,,
"rkman","Kman, Ray","91.5",,,,"100",,"98","Part 5 mask values: missing hex values (-2 points)Great work. -shayden2","89","Program 1:-1: Incomplete description of why you cannot use ldi to load a 16 bit number.  The first 4 bits are used by the opcode, the second 4 bits are used to encode the number of the register to load the value into, leaving the last 8 bits available for encoding the value itself.-1: The return code is the value of r0.Program 2:-2: The value of bits 7:4 at location 3 refers to the offset of the load instruction.  It is added to the memory location being loaded from to make indexing arrays over small values easier.-6: You cannot load 0xabcd into a register using ldi.  0xabcd is a 16-bit number, and the ldi instruction can only take up to an 8-bit number as an argument.  Instead, you have to store the first 8 bits, shift it left by 8 using the shl command, load the second half into a different register, and use or to combine them.Program 3:-1: In the array program using A[] = {0xcafe, 0xf00d, 0}, you were supposed to store the sum of A[0] and A[1] into A[2] using a st instruction.  ","99","-1: 2nd MC is incorrect. ","95","netid: rkman
Score: 95.0

Comments: 
    Problem 2: -1.0; Binary representations should be 8 bits wide
    Problem 5: -3.0; Incorrect hex, binary, and overflow for part D (-3)
    Problem 7: -1.0; -1 Hex values not printed with respective colors","99","A red line in Modelsim means that there's an unknown value, not necessarily an unitialized input. In the future, you can assign multi-bit regs at once using, for example, ""3'h0"" for 3 bits, with the value written in hexadecimal.When testbenching, you should try to cover all input cases, not just a few (i.e. test 3'h0, 3'h1, 3'h2, …, 3'h7). (-1). ","98.5","-0.5 pg 4 Incorrect radix in waveform-1 pg 10 Incorrect radix in waveform ","100","","98","netid: rkman
Score: 98.0

Comments: 
    Problem 6: -2.0; Should not include minterm ab'c', ab'c, or abc.","98","Missing initialization for q in my_dff (-1)
KEY[0] needs to be inverted (-1)","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"69",,"5",,"3",,"40",,"6",,,
"ckraeme2","Kraemer, Charles","93",,,,"100",,"96","Part 2:-1 for providing incorrect hex and ASCII representations of the number 74.  Hex should be 4A and ASCII should be J.Part 3:-1 for adding 1 to the most negative value (0x80000000) instead of the most positive (0x7FFFFFFF).  I recommend more descriptive variable names to prevent similar mistakes in the future.Part 5:-2 for incorrect masks.  You had the right general idea, but your masks were better fit for an 8-bit binary number instead of a 32-bit hex number. The mask to zero out all but the last 4 digits should have been 0x0000000F, and the other mask should have been 0xFFFFFFF0, in order to cover all the bits in the integer. ","96","-1: Program 2, the value in the 7:4 field should be 0xb to represent r11, not the value in r11.Note: for program 3 loading A's memory address, you should include the ldi lines for r10 and r11 since these registers are used.-1.5: Program 4, the ""c"" represents the op-code or the instruction rather than that the branch is of negative type.-1.5: Program 6, the memory address of jal fun1 is 2. The purpose of ""and r1 r0 r0"" is to copy the value of r0 into r1. The memory address of jal fun2 is 4.","94","In the tabulator Boolean equations, you simplified out0 incorrectly. It's best to write out the un-simplified equation first. AND operators should be written with only one &, not two. One & is for bitwise operations (what we're doing), while && is for logical AND (don't worry, I only deducted points once). ","96","netid: ckraeme2
Score: 96.0

Comments: 
    Problem 3: -2.0; Part C, D: cannot put a negative sign in front of hex. Change hex so it represents a negative value
    Problem 4: -2.0; Part C, D: missing hex representation","98","-1.5 Incorrect tabulator out[0] assign statment.-0.5 No waveform for wire connecting tabulator to decoder ","97.5","-0.5 for part 1 verilog module. use & and | instead of && and ||.-1 for part 3 verilog module. missing the overflow module.-0.5 for part 3 waveform for input and output should be radix decimal.-0.5 for part 5 waveform for input and output should be radix decimal","99","In text_and_data, you cannot set one of the lcd chars to display ""op"" since it is only an 8-bit wire (1 character) (-.5)
In system_de2, your LCD_DATA port becomes [10:0] instead of [7:0] the second time around. You should not edit the ports that the LCD controller uses unless necessary (-.5)","91","netid: ckraeme2
Score: 91.0

Comments: 
    Problem 5: -1.0; Part a. Answer can be simplified to a + bd. (-1)
    Problem 6: -2.0; Should not include minterm ab'c', ab'c, or abc. 
    Problem 8: -6.0; Missing part c output, so part d also cannot be validated.","99","Part 2 (-1): missing initial value of 0. ","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"70",,"5",,"3",,"37",,"6",,,
"tkrasny","Krasny, Tyler","95",,,,"100",,"99","Part 5:-1 for incorrect second mask.  The mask you provided was identical to the the first, and did not actually set all bits ahead of the four least significant bits to 1.  Since you output your answer as a decimal, setting them all to one would have lead to a negative answer.  This behavior might have been easier to see if you had output your answer as a hexadecimal, as that would have shown you all the bits.  The correct mask should have been 0xFFFFFFF0. ","98","-0.5: Program 2, the value of *(&A) is the contents of A, 7.-1.5: Program 6, the memory location on the jal fun1 instruction is 2. The memory location of jal fun2 is 4. The value of r15 when the first instruction is of fun2 is executed is 5.  ","96","In your decoder, the inputs are in0 and in1, not in1 and in2.In the future, try to keep your wire/input/output naming consistent across modules.","97","netid: tkrasny
Score: 97.0

Comments: 
    Problem 4: -3.0; You were inverting the values before finding the 8-bit 2's complement and the hex therefore finding it for the negative of the value we wanted you to be solving for. Since you solved for -67 instead of 67 and got the correct answer I'm only taking 1 point off for that question, however, on part D you incorrectly stated -67 8-bit 2's complement so I'm taking both points from that question. You simply changed the signifigant bit of 67 to try to get -67, however, this instead would be the value for -58.","100","-1 No wave form for wire, wire for ports weren't all binary radix ","98.5","-0.5 for Page 7, RTL netlist of overflow detector, you are using the netlist of the full adder.-0.5 for Page 11, sToSegn should be 3-bit.-0.5 for part 5 waveform for input and output should be radix decimal","96.5","In text_and_data, you cannot make set one of the lcd chars to display ""op"" since it is only an 8-bit wire (1 character) (-.5)
3 of your test cases are cut off in the simulation screenshots (-3)
 ","89","netid: tkrasny
Score: 89.0

Comments: 
    Problem 5: -2.0; Incomplete simplifications on both  Part A can be simplified to a+bd, and Part B can be simplified to a'b'd (-2)
    Problem 7: -4.0; (a) nA, nB, nC are wrong -4
    Problem 8: -5.0; r7[2]=r0 should use the store instruction (-1). Based on your simulation results, mult is at 0x000e and A[] is at 0x0020 (-4)","99","Part 3 (-1): Can't read output values.","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"66",,"5",,"3",,"39",,"6",,,
"zkreft","Kreft, Zachary","92",,,,"100",,"97","Part 3:-2 for the most significant bit question.There seems to be confusion regarding the difference between a hexadecimal number and a bit.  A bit is always 1 or 0, while a hexadecimal is composed of four bits.So while I understand that what you mean when you say the ""if the most significant bit is greater than 8"" is the value of the first hex digit, the most significant bit cannot be anything other than 1 or 0. Part 5:-1 for incorrect second mask.  The mask you provided will not apply ones to all but the four least significant bits.  If it had, your decimal output would have been negative.  The correct mask would have been 0xFFFFFFF0.  ","98","-0.5: Program 2, *(&A) is 7. -1.5: Program 6, memory address of jal fun1 is 2. Memory address of jal fun2 is 4. r15 is 5 in the following question.","99","In the future, try to keep wire/input/output naming consistent. Question 4 in the beginning is incorrect.","98","netid: zkreft
Score: 98.0

Comments: 
    Problem 5: -2.0; No hex for parts C and E (-2)","99","-1 Blue line can be because of wrong test bench, but more generally because of disconnected wire. ","99","-0.5 for page 10 waveform should use radix decimal.-0.5 for page 20 waveform should use radix decimal.","100","Great work!","97","netid: zkreft
Score: 97.0

Comments: 
    Problem 4: -1.0; Did not complement final d in third term.  Answer should be (a' + c')(a' + b' +d)(a' + c' + d') (-1)
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 8: -1.0; r7[2]=r0 should use the store instruction (-1).","100","","100",,,,"79",,"4",,"4",,"76",,"68",,"57",,"1",,"69",,"5",,"3",,"39",,"6",,,
"jkuebler","Kuebler, Joseph","98",,,,"100",,"98","Part 3:-2 for the most significant bit question.  You confused the meanings of bits and hex digits.  Bits can only ever be 1 or 0, while hex digits can be 0 through 15, as they are composed of four bits.  Thus the most significant bit of any number can only be 1 or 0, in this case being 1 if the number is negative and 0 if the number is positive.","99.5","Note: Attach pdfs not .docx files.-0.5: Program 6, the purpose of and r1, r0, r0 is to copy r0 into r1. ","100","","98","netid: jkuebler
Score: 98.0

Comments: 
    Problem 5: -2.0; Overflow is present in parts C and E (-2)","100","","98.5","-0.5 part 6 Karnaugh Maps problem 2 no need for b'c.-0.5 for page 10 waveform should use radix decimal-0.5 for page 20 waveform should use radix decimal for input a and b.","98","Missing testbench code -- I'll only take off a little since your simulations work (-2)","100","netid: jkuebler
Score: 100.0","100","","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"67",,"5",,"3",,"38",,"6",,,
"gkulin","Kulin, Grace","93",,,,"100",,"92","Part 3:-4 for the Pattern/Negative Integer Representation Question.  The pattern is that negative numbers start with 0xFFFFFFFF and then approach the most positiive number 0x7FFFFFFF, subtracting 1 from 0xFFFFFFFF each time.  Thus negative numbers are represented not by their number of 'F's but by their distance from 0xFFFFFFFF.  -2 for the most significant bit question, as the most significant bit simply tells you whether a number is negative or positive depending on whether it is a 1 or 0 respectively.  Remember that a bit is different than a hex digit, and thus cannot be anything other than a 1 or 0.-2 for not providing the hex representations of the most negative or most positive numbers.  You described them somewhat, but did not actually provide their hex values.","74.5","-1: Program 2, loaded 0xce instead of 0xcd into r11.-12: Program 3, can't use ""shl"" with imm4 value, must be register. Missing code for 3rd part.-3.5: Program 4, missing first part. Incorrect answer for displacement of br instruction.-6: Program 5, missing code.-3: Program 6: memory addresses for fun1 and fun2 are 6 and 8 respectively. Memory address for jal fun1 is 2. Memory address for jal fun2 is 4. ","99","In the fourth question, only using one wire to connect multiple outputs to one input is correct. In the future, try using windows+shift+s to take a screenshot, since it can be much more easily cropped.","85","netid: gkulin
Score: 85.0

Comments: 
    Problem 2: -4.0; Missing conversion to hex.
    Problem 5: -1.0; Overflow is present in part C (-1)
    Problem 8: -10.0; -10 Code has significant errors and gets every test incorrect","92","-3 Tabulator code: Used '+' instead of '|'-2 Error 2 observations are different than they should be-3 Error 3 is the same observations as Error 2, still different than they should be.","98","-0.5 Page 2 verilog module, you have several '+' which should be '|'.For waveforms, please only screenshot the waveform part, otherwise it's hard to grade.-0.5 Page 18, you subtraction results in the table are incorrect for all the test cases, also the photo of board is shown wrong with the b(2 in decimal).-0.5 for page 10 waveform should use radix decimal for input a and b.-0.5 for page 19 waveform should use radix decimal for input a and b.","99.5","lcd_char is only 8 bits wide (the length of one ASCII character, so you can't store ""op"" in it (-.5)
Great work!","68","netid: gkulin
Score: 68.0

Comments: 
    Problem 2: -6.0; Wrote down the problem incorrectly so you are proving the incorrect equation. But you solved it correctly for the wrong equation so I am given you some points.
    Problem 4: -1.0; Should not have simplified beyond (a'+c)(a'+b'+d)(a'+c'+d') (-1)
    Problem 5: -2.0; Part A: Incomplete simplification.  Should be a+bd. (-1) Part B: Incomplete simplification.  Should be a'b'd. (-1)
    Problem 6: -1.0; Duplicate minterms in final equation.  You have two a'bc' terms (-1)
    Problem 7: -10.0; Missing (c) and (d) -10
    Problem 8: -12.0; For r7=A, you could have just sent the output of the or instruction to r7 rather than adding the and instruction. Missing 3 instructions (-3). Missing parts c and d (-9).","100","","100",,,,"79",,"5",,"4",,"72",,"65",,"52",,"1",,"63",,"5",,"3",,"38",,"6",,"4",
"ckusek2","Kusek, Calvin","96.5",,,,"100",,"96","Part 3:-2 for most significant bit question.  this mistake likely resulted from confusion between a bit and a hex digit.  A bit can only be 1 or 0, while a hex digit is composed of four bits and can take any value in the range 0 to 15. The most significant bit indicates the number is negative if the bit is 1 and positive if the bit is 0. -1 for incorrect hex for most negative number.  Should be 0x80000000.  -1 for incorrect decimal for most negative number.  Should be -2147483648.","88","-1: Program 1, there is only 8 bits of available space for a value since you also use 4 bits to declare which register you are loading to.-5: Program 1, you don't want to add or sub r0 and r1 for this calculation, see solution.-3: Program 2, no value recorded for 7:4 bit field of memory location 3. Missing answers to the value of *A and A[0]. Last line of the lasts part should be ""st r11, r10, 0"".-3: Program 4, incorrect answers for last two parts, see solutions. ","98","In the future, make sure you export your files as a .qar. You can find instructions on how to export as a quartus archive in one of the readings. In your tabulator, you switched in0 and in1. When taking screenshots, please use windows+shift+s to take a screenshot. It'll be put to your clipboard for easy pasting.","87","netid: ckusek2
Score: 87.0

Comments: 
    Problem 5: -2.0; Overflow is present in part C, and not in part D (-2)
    Problem 6: -3.0; No overflow in part B (-1), Overflow is in part D (-1), No overflow in part E (-1)
    Problem 8: -8.0; -8 Code has significant errors and gets 2/3 tests incorrect","99","-1 No connecting wire in waveform ","99","-0.5 for page 10 waveform should use unsigned radix for n.-0.5 for page 12 waveform should use decimal radix for input a and b.","100","You don't need to expand your waveforms all the way to show every bit waveform; all we need is the number to be visible. 
Great work!","92","netid: ckusek2
Score: 92.0

Comments: 
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 7: -3.0; (c) incorrect, -3
    Problem 8: -4.0; For r7=A, you could have just sent the output of the add instruction to r7 rather than adding the or instruction. The mult function is at 0x000c and A[] is at 0x0019 (-4).","100","","100",,,,"79",,"5",,"4",,"72",,"65",,"52",,"1",,"63",,"5",,"3",,"37",,"6",,"4",
"jlamptey","Lamptey, Jonathan David","91.5",,,,"76",,"88","Part 6:-2 for not doing left shifts in code-4 for not doing positive or negative right shifts in code.-6 for incorrect answers to the left and right shift questions..  Left shifting the 32-bit integer would cause the value to double on each shift, for values of 20 and then 40 in decimal.  right shifting causes the value to be divided by 2 each time.","97.5","-2: Program 1, really close, but you ended up doing ~(ab) | ~(ba) when you needed to do this... (~a)b | (~b)a.Note: Program 3, no overload occurred since you added two negative numbers and ended up with a negative number.-0.5: Program 6, the value of r15 when the first instruction of fun2 is executed is 5. ","98","Your first answer is incorrect - a RTL netlist is a circuit diagram generated by Quartus, not the user.Make sure you include your code via quartus archive (.qar) in the future. ","69","netid: jlamptey
Score: 69.0

Comments: 
    Problem 1: -1.0; Forgot to add the 2^2 term in part C
    Problem 2: -2.0; You can't truncate 10001011 to 00001011 without losing information. It is not possible to represent this 9 bit number in 8 bits, so neither the 8 bit unsigned nor hex formats can represent decimal 267.
    Problem 3: -2.0; You we accidentally using the positive value to find the hex value from. I.e. using 73 and 100 instead of -73 and -100 therefore getting the wrong hex values for the final 2 
    Problem 5: -6.0; Incorrect hex and binary in Part A (-2); Incorrect hex and binary in Part B (-2); Incorrect overflow in Part C (-1), No overflow comment in Part E (-1) (Binary in bold also incorrect, but correct in work shown, so assumed to be an error copying, no penalty given) 
    Problem 8: -20.0; Answer missing","96","-3 Used '+' instead of '|' in Verilog code-0.5 No waveform for wire connecting tabulator to decoder-0.5 Improper radix for ""out"" waveform","86.5","-10 for missing .QAR file.-0.5 for page 6 the overflow module, the logic is wrong.-0.5 for the overflow RTL netlist.-1 for the Karnaugh Maps Q2 and Q4-0.5 for page 10 waveform should use unsigned radix for n.-0.5 for page 13 waveform should use decimal radix for input a and b.-0.5 for page 19 waveform should use decimal radix for input a, b and s.","100","You don't need to expand your waveforms all the way to show every bit waveform; all we need is the number to be visible. 
Great work!
 ","98.5","netid: jlamptey
Score: 98.5

Comments: 
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 7: -0.5; (a) one row of nA, nB, nC is wrong -0.5","97","Part 2 (-1): missing initial value of 0.Part 3 (-2): waveform does not show first 20 values. Wrong radix.","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"65",,"5",,"3",,"39",,"6",,,
"alangsta","Langstaff, Ava","88.5",,,,"100",,"96","Part 3: -2 for incorrect explanation of the most significant bit.  This mistake likely comes from confusion between a hex digit and a bit.  A bit can only take the value 0 or 1.  A hex digit is composed of four bits, and can take values from 0 to 15 (0xF).  If the most significant bit is 1, the number is negative, and if it is 0, then the value is positive.Part 5: -2 for incorrect NOT result explanation.  The NOT operator simply flips all the bits to their inverses.  It does not perform a 2's complement conversion.  To get 2's complement, you would have to add 1 to the result of the NOT. ","56.5","-4: Program 1, a bit too loose of an explanation. We were looking for you to explicitly tell us that these isn't enough space for 16 bits of value data since instructions are always 16 bits total and we use 8 bits for the opcode and write register in a ldi instruction, leaving us with only 8 bits for an imm value. The memory address the add instruction is stored at is 2. The return code is gotten from r0. You or the wrong registers in your screenshot code, but have it written correctly in your text, but you lose a point since you use the wrong answer because of the run code being wrong. You try to ldi a 12 bit value when you can only ldi an 8 bit imm value. If you change r10 to 0xab and r13 to 0xcd you code works as expected.-15: Program 2, A[0] is 7 not 0xa0. Missing last 3 parts.-17: Program 3, missing last 2 parts.-7.5: Program 6, memory location for jal fun2 is 4. Missing last 2 parts.  ","100","","94","netid: alangsta
Score: 94.0

Comments: 
    Problem 8: -6.0; -6 Test cases are missing hex values","95","-3 RTL view must be exploded so everything is seen-1.5 Improper logic for out[0] assign statement-0.5 No waveform for wire connecting tabulator and decoder ","97.5","-0.5 for Page 6 the overflow module. You cannot use the cin, please follow the instructions in the studio.-0.5 the its RTL netlist-1 for missing the two photos of the board.-0.5 for page 9 waveform should use decimal radix for input a and b.","97","You did not include your testbench code in the report but I'll only take off a little since it's in the QAR and your simulations seem to work (-2). However, the testbench you included is missing 2 of the test cases needed (opcodes 5 and 6) (-1).","77","netid: alangsta
Score: 77.0

Comments: 
    Problem 2: -3.0; Incorrectly used comlpement when dealing with a and a.
    Problem 4: -1.0; Final answer should be (a'+c)(a'+b'+d)(a'+c'+d')
    Problem 7: -14.0; (a) have p and n transistors inverted -2 (b) incorrect formula for F -2 Missing (c) and (d) -10
    Problem 8: -5.0; Load instruction is not needed int r7=A; A refers to the address of A, so you should have loaded that into r7, not A[0] (-1). The mult function is at 0x000b and A[] is at 0x0018 (-4).","65","Part 2 (-1): missing initial value of 0.Part 3 (-2): missing connection between my_dff inputs and 'd' module inputPart 3 (-10): missing waveformsPart 3 (-2): missing hand-calculated answerPart 4 (-20): missing everything","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"69",,"5",,"3",,"40",,"6",,"4",
"mlee43","Lee, Michael","97.5",,,,"91",,"93","Part 1:-6 for incorrect responses to the three questions.  The actual decimal value is 74, the hex is 4A, and the ASCII is J.  It is likely that you missed the first 1 of the string, which is located in the second block of four bits from the right, which would have added 64 to your answer.Part 3:-1 for the ""does C care?"" question.  C does not really 'care' as it does not give an error when this overflow occurs.  It simply outputs the overflowed integer as the answer. ","93","-4.5: Program 2, &A is 0xa0. You cannot load a 16 bit value into r11 for the last part.-1: Program 3, missing store instruction for the last part. -1.5: Program 4, incorrect instruction code for part 1.","100","","85","netid: mlee43
Score: 85.0

Comments: 
    Problem 5: -8.0; Incorrect binary and hex in Part A (-2); Incorrect binary, hex, and overflow in Part D (-3); Incorrect binary, hex, and overflow in Part E (-3)
    Problem 6: -2.0; Overflow present in partss C and D (-2)
    Problem 7: -5.0; -5 Code has significant errors and fails every test","99.5","-0.5 No waveform for wire connecting tabulator and decoder ","97","for the photo of board, you should the given test case. No penalty.-2 for all the Karnaugh Maps problems, please check the solution for how to solve this kind of problem.-0.5 for page 4 waveform should use unsigned radix for n.-0.5 for page 23 waveform should use decimal radix for input a and b.","94.5","In text_and_data, op is only 3 bits so it needs 5 bits of padding (-.5). 
Missing second board photo (-5)
 ","86","netid: mlee43
Score: 86.0

Comments: 
    Problem 1: -1.0; Skipped over the identity property. A small jump in logic
    Problem 2: -5.0; First, the simplification would go to a (1 + b + c) not a + (1 + b +c). Then the simplification of (1 + b + c) is 1, but then this would simplify your final solution of a + 1 + bc to (1) not (a + bc)
    Problem 5: -2.0; Part A: (-1) Incomplete simplification.  Correct answer should be a+bd.  Part B: (-1) Incomplete simplification.  Should be a'b'd
    Problem 7: -2.0; (d) no explanation -2
    Problem 8: -4.0; The mult function is at 0x000a and A[] is at 0x0017 (-4).","99","Part 3 (-1): waveform values aren't visible. Should have hex radix.","99",,,,"77",,"5",,"4",,"72",,"64",,"56",,"1",,"66",,"4",,"3",,"40",,"6",,,
"nlee9","Lee, Nicole","80.5",,,,"58",,"88","Part 1: -2 for incorrect hex value.  The correct value would 4A.  It is likely you made some simple error converting the decimal into hex.Part 2:-2 for incorrect decimal value in the second block.  You input the given hex value as the converted decimal.Part 3:-4 for incorrect description of how C represents negative integers.  While -1 is equivalent to the highest unsigned value in C, it decrements that value once each time the value becomes more negative.  For example, as it moves from -1 to -2, it represents this change by converting from 0xFFFFFFFF to 0xFFFFFFFE, which is one value lower.  It does not represent the number as the normal complement of the positive, but rather as its 2's complement, which means 1 is added to the value after the complement is calculated.-2 for most negative number.  -1 is not the most negative number.  The most negative number is the negative number with the largest magnitude/absolute value C can represent.  It is 0x80000000 or -2147483648, which is the first value with a first bit of 1, or the furthest from -1 that still has a first bit of 1.Part 5:-2 for incorrect representation of decimal 10 in binary.  10 in binary is 1010.  You gave the equivalent of decimal 2.","95.5","-0.5: Program 1, r0 gives the return code value. -0.5: Program 2, the value of &A is 0xa0.-3.5: Program 3, high(A), low(A), A should be 0x00, 0x03, and 0x0003 respectively. For the second part, r10 and r11 should be using high(A) and low(A).  ","98","Your answers for questions 2 and 3 are incorrect. ","95","netid: nlee9
Score: 95.0

Comments: 
    Problem 5: -3.0; No binary given for part C or prt E (-2);  No overflow comment in part D (-1) 
    Problem 6: -2.0; Incorrect binary and hex output for part D (-2)","100","","98","-0.5 for page 8 waveform should use decimal radix for input a and b.-0.5 for page 16 waveform should use decimal radix for input a and b.-0.5 for Page 14 the subtractor module, in the first full adder, you should give cin a 1 instead of c[1]. -0.5 for Karnaugh Maps, problem 2 does not need the b'c ","100","Great work!","95.5","netid: nlee9
Score: 95.5

Comments: 
    Problem 5: -1.0; Part A: (-1) Incomplete simplification.  Correct answer should be a+bd
    Problem 6: -1.0; Should include the values of the minterms in the table instead of listing them by number
    Problem 7: -2.5; (c) did not use inspection of serial/parallel connections -2.5","100","","82",,,,"79",,"5",,"4",,"76",,"0",,"0",,"1",,"63",,"5",,"3",,"34",,,,,
"slee54","Lee, Seungwoo","92",,,,"100",,"87","Part 3:-2 for not commenting on the pattern.  The pattern shows how increasingly negative numbers are represented as numbers moving increasingly away from 0xFFFFFFFF.  -2 for incorrect description of the most significant bit.  Your answer likely results from confusion between a hex digit and a bit.  A bit can only be 0 or 1.  A hex digit, which is composed of four bits, can take values from 0 to 15 in decimal, or from 0 to F in hex.  When the most significant bit is 1, the integer is consider negative by C.  When the most significant bit is 0, the number is considered positive by C.-2 for incorrect most negative number in hex.  It should be 0x80000000, which is the number furthest from 0xFFFFFFFF that still maintains a first bit of 1, indicating negativity.-2 for incorrect most negative integer.  The most negative integer is 0x80000000 in hex, which translates to -2147483648 in decimal.-1 for ""does C care"" question, for not commenting on how C handles the transition.  Despite the value overflowing the most positive integer, turning it into the most negative, C does not report an error, instead just outputting an answer.Part 4:-3 for incorrect hex representation of largest unsigned integer.  The hex representation should be 0xFFFFFFFF, which is equivalent to all 32 bits of the integer being set to 1. Part 5:-1 for mistake in masking program.  Second mask should be used with OR, not AND. (So instead of a & mask it should have been a | mask)","93.5","-1: Program 1, memory location of add instruction is 2 with the encoding being 7105.  -1: Program 2, A, A[0], and *A equal 0xa0, 7, and 7 respectively. -1: Program 3, missing store instruction for the last part.-0.5: Program 5, and r1, r0, r0 copies r0 to r1.-3: Program 6, attempt on last part not complete, partial credit given. ","100","Your work is correct, but in the future, you should use the provided input/output names. ","89","netid: slee54
Score: 89.0

Comments: 
    Problem 5: -6.0; Incorrect binary, hex, and overflow in Part D (-3); Incorrect hex, binary, and no overflow given for Part E (-3)
    Problem 6: -2.0; Part B does not overflow (-1); Part C overflows (-1)
    Problem 8: -3.0; -3 Multiplicands not listed in dec","100","","99.5","-0.5 for Karnaugh Maps problem 2, do not need b'c. ","100","Great work!","82","netid: slee54
Score: 82.0

Comments: 
    Problem 1: -1.0; Skipped over the identity property. A small jump in logic
    Problem 2: -8.0; Was on the correct path, but you just stopped before solving
    Problem 4: -1.0; Should not have simplified beyond (a'+c)(a'+b'+d)(a'+c'+d')
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 7: -3.0; (c) F and G are inverted -1.5 (d) F and G are inverted -1.5
    Problem 8: -3.0; Instruction by finish label should be jr r15 (-1). Mult instruction is at 0x000a (-2).","99","Part 3 (-1): Should display the first 20 values in the waveform.","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"63",,"5",,"3",,"40",,"6",,"4",
"aleone2","Leone, Abigail","98",,,,"100",,"100","Good job!","96.5","-2: Program 1, changing not r10, r0 to not r10, r1 and not r11, r1 to not r11, r0 should make this code work as expected. Must have been mistyped into document since correct answer is given but code is slightly off. -1.5: Program 4, incorrect first part, see solutions. ","98","Your tabulator Boolean equation is incorrect - it should be out1 = in0' in1 in2 + in0 in1' in2 + in0 in1 in2' + in0 in1 in2In the future, please use the provided input/output names in your code. ","99","netid: aleone2
Score: 99.0

Comments: 
    Problem 5: -1.0; Part E overflows (-1)","99","-1 Nonspecific observations for error 3","98","-0.5 for page 4 waveform should use unsigned radix for n.-1.5 for Karnaugh Maps problem 1,2 and 4","99","In ALU_tb, opcode 5 should have the same test inputs as opcode 6 (5 and 1), so your waveform is incorrect for that test (-1)
 ","97","netid: aleone2
Score: 97.0

Comments: 
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 8: -2.0; Load instruction is not needed int r7=A; A refers to the address of A, so you should have loaded that into r7, not A[0] (-1). The instructions that follow shuld be in reference to the address in r7, but you made it work, so no further deduction. The instruction by the finish label should be jr r15 (-1).","100","","100",,,,"79",,"5",,"4",,"76",,"68",,"52",,"1",,"66",,"5",,"3",,"39",,"6",,"4",
"sllort","Llort, Salvador","99",,,,"100",,"96","Part 2:-2 for incorrect hex in the third set of boxes.  The hex here should be 61.  You instead provided the original ASCII value a.Part 6:-2 for incorrect decimal for second left shift.  The decimal after the second left shift should be 40, while you provided 32.  It is likely you forgot to include the second 1 when converting from binary.","100","Note: Last part of program 3 looks weird but also looks like it works. Compare to the solutions if you're interested enough. Good work!","100","","90","netid: sllort
Score: 90.0

Comments: 
    Problem 2: -2.0; Check your conversion in part B. They are the same as part A for a different decimal number. 00010001 = 2^0 + 2^4 = 17 != 153.
    Problem 5: -2.0; Part C overflows (-1); Part D does not overflow (-1)
    Problem 8: -6.0; -6 Multiplicands and answers not listed in hex","100","","98.5","-1 for the overflow module and the RTL netlist, the logic is incorrect.-0.5 for the Karnaugh Maps problem 2, do not need b'c.","100","Great work!","94","netid: sllort
Score: 94.0

Comments: 
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 7: -1.0; Forgot to include DeMorgan's Law (-1)
    Problem 8: -3.0; In the r7=A instructions, your or statement uses the incorrect registers as parameters (-1). r0 = r0 + r1 should use the add instruction (-1). A[] is at 0x0017, not 0x0023 (23 is the decimal version of 0x17) (-1).","100","","100",,,,"79",,"5",,"4",,"76",,"67",,"56",,"1",,"69",,"5",,"3",,"39",,"6",,,
"nlocasci","Locascio, Nicholas","97",,,,"100",,"100","Good job!","92","-0.5: Program 1, the return code is the value stored in r0.-4: Program 2, it looks like your code ends up doing a NAND between r0 and r1 rather than an XOR.-3: Program 3, you didn't use the right value to load from memory. See solutions for the correct answer.-0.5: Program 6, the value of r15 when the first instruction of fun2 is executed is 3. ","99","Question 2 is incorrect - a module is allowed to have multiple output ports. ","100","netid: nlocasci
Score: 100.0","100","","98","-0.5 for page 8 waveform should use decimal radix for input a and b.-0.5 for page 15 waveform should use decimal radix for input a and b.-1 for Karnaugh Maps problem 2 and 4","98","Did not include the text_and_data_de2 module in your report, but the module in QAR file looks correct so only a small deduction (-2). 
Great work!","91","netid: nlocasci
Score: 91.0

Comments: 
    Problem 3: -2.0; You messed up the outputs for 001 and 010
    Problem 4: -1.0; The second term should not have d complemented.  The answer should read (a'+c)(a'+b'+d)(a'+c'+d') (-1)
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 7: -1.0; Forgot to include DeMorgan's Law (-1)
    Problem 8: -4.0; For r7=A, you should have used low(A) and high(A) with a left shift, as in the previous studio, not ldi (-2). The mult function is at 0x0006 in your case (-2).","99","Part 3 (-1): Testbench clarity. Use ""#200;"" instead of 20 ""#10;""","81",,,,"79",,"5",,"4",,"76",,"0",,"57",,"1",,"66",,"5",,"3",,"39",,"6",,,
"glortkip","Lortkipanidze, Guram","70.5",,,,"74",,"90","Part 3:-2 for most significant bit question.  This likely results from confusion between a bit and a hex digit.  A bit can only be 0 or 1.  A hex digit is composed from 4 bits, and can have values ranging 0 to 15 in decimal, or 0 to F in hexadecimal.  Thus the most significant bit can never be greater than 1, since it is impossible for a bit to take any value that is not 0 or 1.  The most significant bit indicates the sign of the integer.  If the most significant bit is 1, the integer is negative.  If it is 0, then the integer is positive.-3 for adding 1 to most positive integer and does C care question.  I was not able to reproduce your overflow error.  That code should run fine and produce the value 0x80000000, indicating that C does not care.  At worst, there would have been a warning, but C should have produced the value.Part 5:-2 for incorrect masks.  You had both masks, but flipped their usage.  Your first mask would have been correct to set all but the last 4 bits to 1, and your second mask would have been correct to set all but the last 4 bits to 0.Part 6:-3 for not providing a binary value for 10.","0","No submission","99","Your answer to the fourth question is incorrect - the correct answer is the second chouice.In the future, please submit your .qar (quartus archive file) and not your .qpf (quartus project file). Submitting your .qar file lets us view your code. In your decoder Boolean equations, your in1 and in0 are swapped. ","39","netid: glortkip
Score: 39.0

Comments: 
    Problem 1: -2.0; Part C, correct conversions of 4bit numbers to hex, but the hex numbers are in the wrong order. 7B => B7. Part C, correct terms to add for decimal, but double check the addition.
    Problem 3: -1.0; Hex doesn't have a significant bit that denotes negatives
    Problem 4: -6.0; A and B are out of range and therefore impossible. The 2's complement for C is simply the binary for 67 as it isn't negative. And the hex for D you must base it off of the binary for the actual value you are solving for, and again it doesn't make sense for hex to have a negative value, the correct answer for the hex on D is BD.
    Problem 5: -15.0; No answer given (-15)
    Problem 6: -7.0; No binary or hex sums provided (-5); No Part E (-2)
    Problem 7: -10.0; Answer missing
    Problem 8: -20.0; Answer missing","95","WARNING: 10 point deduction on all future studios if you do not submit the QAR file. Instructions are on Piazza.-3 RTL view not exploded to see internal components-2 Error 3 observations incorrect","95.5","-0.5 for page 4 waveform should use unsigned radix for n.-0.5 for page 13 waveform should use decimal radix for input a and b.-0.5 for page 17 waveform should use decimal radix for input a and b.-1 for Page 6 the overflow module and its RTL netlist, the logic is incorrect.-1 for the missing photos of the board.-1 for Karnaugh Maps, please give the minimized equations, not just circles","94","In text_and_data_de2, one of the outputs of the text_and_data module is spelled wrong so there is no connection between it and the LCD_Controller as there should be (you can see this in the RTL) (-2). Given this missing connection (which is also present in the QAR file), the photo of the board you submitted would have been impossible (-4).","51","netid: glortkip
Score: 51.0

Comments: 
    Problem 2: -8.0; It seems like you didnt read the problem. The problem states that you are proving the distributive or using other boolean algebra expressions.
    Problem 4: -3.0; Final answer should read (a'+c)(a'+b'+d)(a'+c'+d').  You applied DeMorgan's law incorrectly (-3)
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 6: -3.0; Minterms should have all variables represented. Final answer should read a'bc+a'bc'+a'b'c+a'b'c'+abc'.  Also you should not include minterms = 0 in the truth table (-3)
    Problem 7: -14.0; (a) F, pF, nF, and G are wrong -4 (b) F and G incorrect -2 (c) missing -5 (d) no explanation, incorrect result -3
    Problem 8: -20.0; The ldi instructions are correct, but otherwise question 8 is largely incomplete/incorrect (-20)","0","","36",,,,"75",,"5",,"4",,"72",,"59",,"52",,"1",,"62",,"5",,"2",,"39",,"6",,,
"klumanta","Lumantas, Kenan Reu","87",,,,"100",,"99.5","Incorrect hex value for the decimal 97 in part 2 (you entered the ASCII not hex). In part 5 you explain the answer to ""~a"" as counting down from -1 instead of up from 0. This is a valid and cool way to look at it. It's just important to understand that it's also the not operation can is switching all 0's to 1's and 1's to 0's.All in all, good work, try to make code a bit more clear to read in for future.","97","In Program 3, Question 3, you forgot to enter the resulting value of A[2]. Additionally, you load the value high(A) twice - with the way you wrote it, loading high(A) into r10 is unnecessary. ","100","Warning: No QAR. Failure to attached QAR file will receive 10 point deduction in future studios.","87","netid: klumanta
Score: 87.0

Comments: 
    Problem 3: -7.0; You needed to take the hex of the original binary string as that is the value you are working with. You only flip bits and add one when working to determine the compliment of a value, thus it is unnecessary when the value is already positive.
    Problem 5: -2.0; Part C overflows (-1); Part D does not overflow (-1)
    Problem 6: -1.0; Part E does not overflow (-1)
    Problem 8: -3.0; -3 Operands not displayed in hex","97","ModelSim Waveforms, please only show that signal part and waveform part instead of the whole window, otherwise we can not grade.-1 for Error 2 ModelSim transcript errors/warnings: none-1 for Error 2 ModelSim waveform problems: ""out"" is red with a mix of 0s and Xs. It's because the COUNT is 1 bit wide and it connects the tabulator and decoder.-1 for Error 3 ModelSim transcript errors/warnings: none","89","Incorrect overflow detector module -- it should not be the same as your carry out (-2)
In the ripple carry adder, the third input to the module should be s[2], not o[1] (-.5)
Incorrect adder table entries (-3) -- in the future, look at your testbench results and see if they match your expected values, then check which one needs to be fixed. Testbench waveforms for adder should  be in signed decimal radix (-.5)Your overflow waveform is incorrect, but matches your equation so no deduction.
In subtractor, overflow detector input is incorrect (-.5)
In subtractor table, your entries for the last 3 signed decimal outputs and overflows are incorrect (-3).
In subtractor waveforms, output should be signed decimal radix (-.5)
Subtractor board photo: 101 - 010 should not give you 4 - 4 = 0 (-.5)
2nd K-map is incorrect -- you have an unneeded 3rd loop (-.5)","99","Part 2 testbench and simulation (-1): Missing testbench case for op=0.","97","netid: klumanta
Score: 97.0

Comments: 
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 6: -2.0; Missing a'b'c minterm, and included incorrect ab'c minterm.  Also should not include minterms = 0 in truth table","100","","100",,,,"79",,"5",,"4",,"76",,"0",,"54",,"1",,"64",,"5",,"3",,"34",,"6",,,
"kmacdon7","MacDonell, Keegan","99",,,,"100",,"99","-1: Part 6, right shifting always halves the value being shifted. Your example of -10 to -5 shows that it halves. ""C does not care. It is cold, unfeeling, and offers no error message"", C just got a little bit warmer from this burn. Good work, thanks for easy to grade homework. Program was also clear to read. ","100","Don't forget to include your name.  ","100","Screenshots are more convenient than phone pictures. An easy way to take a screenshot is Shift + Window + S, which will automatically save the image to your clipboard. No points deducted.","97","netid: kmacdon7
Score: 97.0

Comments: 
    Problem 1: -1.0; Part B, converting to decimal is close, but wrong. You don't have any work, so I would encourage you to double check your own calculations. Hex is correct.
    Problem 3: -1.0; Slight mess up, its 2E not 2D. Always double check your work!!
    Problem 5: -1.0; Incorrect hex in Part D (-1)","98","WARNING: 10 point deduction on all future studios if you do not submit the QAR file. Instructions are on Piazza.-1 for Error 1, ModelSim transcript errors/warnings: warning that port size doesn't match for port 'out'.
-1 for Error 3 ModelSim transcript errors/warnings: none","87","Missing QAR file: -10
In seven segment simulation, input waveform should be in unsigned radix (-.5)
In subtractor table, 4 of your hex values are incorrect (-2)
In the second K-map, you have an unnecessary 3rd circle (-.5)","100","","94","netid: kmacdon7
Score: 94.0

Comments: 
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 7: -1.0; (d) Forgot to noe DeMorgan's Law -1
    Problem 8: -3.0; Missing r7=A instructions (-2). r0 = r0 + r1 should have used an add, not an or (-1).","98","-1 output value not set to a default -1 waveform errors due to flaw in dff","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"65",,"5",,"3",,"39",,"6",,,
"mmagette","Magette, Megan","91.5",,,,"99",,"95.5","-1: Part 2, you flipped the decimal value and hex value in the 3rd question (61 and 97).-1: Part 3, last question missing answer to whether or not C ""cares"". -0.5: Part 4, question 2 you copied your program's result for largest unsigned value wrong. It's 429467295 not 429467296. -2: Part 6, you're missing the answer to what happens when 10 is shifted left 2 bits (10 << 2 equals 40). Try to format your code in a bit more of a readable way, it's hard to find the programs for each part when they are separated by whitespace and comments with more detail.","91","Keep in mind that the memory location of the add instruction is at memory location 2, not register 2 - these are different from each other. Don't forget to include the resulting value when the question asks you to include both code and value. When loading, you can store 8 bits at a time. Therefore, it's more efficient to load 8 bits and shift left by 8 bits once instead of shifting by 4 twice to load a 16 bit value. In Program 3, we use high(A) and low(A) because we don't necessarily know the address of A. As such, we use shifting to put high(A) and low(A) together to retrieve the address of A no matter where it is. For the last problem, you should create a register copy of r15, since jr should always use r15 for its return call. ","99","-1 ""Which of the following will fail to compile in Quartus"" correct answer is #2","91","netid: mmagette
Score: 91.0

Comments: 
    Problem 5: -4.0; Incorrect hex and binary in Part B (-2); Incorrect hex and binary in Part C (-2)
    Problem 7: -5.0; -5 Code has significant errors and fails all tess","97","Please only show the warnings and error, you can filter the log information by click the corresponding icons in quartus.-1 for Error 1, ModelSim transcript errors/warnings: warning that port size doesn't match for port 'out'.-1 for Error 2 ModelSim transcript errors/warnings: none-1 for Error 3 ModelSim transcript errors/warnings: none","86","Incorrect equations for g6 and g0 in table (-1)
In seven segment simulation, input radix should be unsigned decimal (-.5)
In the RTL view, it shows that fa2 has a carry in of 1, which should be c[1] (-.5)
Adder table entries largely incorrect (-3) -- in the future, use your simulation results to verify whether you've achieved your expected output or not.
In adder waveforms, radix should be signed decimal. Also, you must show the names of the signals in your screenshot (-.5)
First and fourth results for the sum waveform are incorrect (-1)
Incorrect test cases for system_tb -- should have used the same ones as in adder tb (-1)
Even using your test cases, the g[6] bit is incorrect for some of your simulation results -- see the first value in the a_hex and b_hex waveforms and the second value in the a_hex waveveform (-1.5)
In the subtractor, cin should be 1 for fa0 (-.5)
Subtractor table entries largely incorrect (-3)
Incorrect test cases used in subtractor tb (-1)
Radix for subtractor waveforms should be signed decimal (-.5)
First & last K-maps could have been simplified further by circling 2 pairs of 2 elements -- no deduction since you fixed it in the equations.
 ","99","Part 1 text_and_data and picture of board (-1): Missing colon between 'f' and value of 'f'.
Part 3 system_de2 (-0): Use useful wire names. Not ""thing"". Points will be deducted in the future.","88","netid: mmagette
Score: 88.0

Comments: 
    Problem 1: -2.0; Missing the written out distributive and identity expressions
    Problem 3: -1.0; Your second step doesn't follow logistically, you should've pulled c' out and b' out instead of writting them as c' + c' and b' + b'.
    Problem 4: -1.0; Should not have simplified beyond (a'+c)(a'+b'+d)(a'+c'+d')
    Problem 6: -2.0; Write in minterm values instead of referring to them by number.  Also do not include minterms = 0.
    Problem 7: -4.0; (b) Incorrect -4 
    Problem 8: -2.0; mult is at 0x000a","100","","91",,,,"78",,"5",,"4",,"75",,"0",,"56",,"1",,"63",,"5",,"3",,"33",,"6",,,
"bmanfred","Manfred, Brendan","86.5",,,,"95",,"97","-1: First ACSII/hex in wrong order (J and 4a).-1: Incorrect mask, your second mask should be 0xfffffff0.Note: It is correct that shifting left increases the number. More precisely it doubles the number, however.-1: For ""Does C care?"" it seems that you either did not answer this or are saying C does care. C does not care that you added one and changed signs in the way you did.","85","Hex encoding of instructions means a hex value for every step. For example, ldi r1, 5 is 7105 in hex. In Program 2, Problem 5, the value of A is 0xa0, while A[0] and *A is 7. Make sure you answer all questions - in Program 3, it looks like you did know how to answer the second question based on your response in the third, but didn't answer it. Make sure that you read the questions correctly (Program 4, Problem 1).For the last problem, you should instead copy the value held in r15 in fun1 and change r15 back using the copy after fun2 runs, since jr should always use r15. Additionally, functions should not have a quit statement inside, as it's a function and not the complete program. ","98","-1 ""Which of the following will fail to compile in Quartus"" answer #3 incorrect.-1 Incorrect tabulator boolean equation for out0Warning: No QAR file attached. Failure to attach QAR file will result in -10 deduction in future studios. ","87","netid: bmanfred
Score: 87.0

Comments: 
    Problem 2: -4.0; Missing conversion to hex.
    Problem 3: -1.0; Small mistake with going from binary to decimal, it is 73 not 76
    Problem 8: -8.0; -8 Code has significant errors and fails 2/3 of tests","98","-1 for Error 2 ModelSim transcript errors/warnings: none-1 for Error 3 ModelSim transcript errors/warnings: none","89","Overflow detector equation incorrect -- second term should be ~a & ~b & s (-.5)
Missing ripple carry adder Verilog code -- you submitted the testbench twice -- but I'll only take off half since it synthesizes correctly (-2)
In your system module, you only made your sum wire 2 bits wide instead of 3 bits, and then when you used it you wrote w[0], so only 1 bit actually gets used (-1).
Missing sum wire from adder waveforms (-1)
Subtractor table is largely incorrect (-3) -- in the future, use your simulation results to check your expected output and determine which is correct.
Subtractor test cases are incorrect (you entered some of the b values incorrectly) (-1)
Used incorrect test case in photo (-.5)
In the first K-map, you could have further simplified the equation by circling 2 pairs of 2 elements (-.5)
In the second K-map, you have an unnecessary 3rd loop (-.5)
Fourth K-map is plotted incorrectly (you missed a ' in the given equation), so the resulting equation is incorrect (-1)","100","","86","netid: bmanfred
Score: 86.0

Comments: 
    Problem 7: -9.0; (b) G is incorrect, missing ABC -1 (c) Did not use inspection -4 (d) Incorrect process -4
    Problem 8: -5.0; goto loop instruction is incorrect, should be -7 (though I would suggest using labels to make it more readable) (-1). The mult function is at 0x000a and A[] is at 0x0017 (-4)","99.5","-0.5 wrong ~(q3^q0) for clock cycle 4","100",,,,"79",,"5",,"4",,"76",,"67",,"0",,"1",,"68",,"5",,"2",,"38",,"6",,,
"jmantic2","Mantica, Juan","98",,,,"71",,"100","Note: Part 3, the left most F tells us that we have a negative number but this is because in binary F equals 1111. The leftmost 1 in binary tells us we have a negative number.","100","Don't forget to include your name. I'm guessing that this was just a copy-paste error, but you shouldn't put multiple instructions on one line.","100","","100","netid: jmantic2
Score: 100.0","97","-1 for Error 2 ModelSim transcript errors/warnings: none-1 for Error 3 ModelSim transcript errors/warnings: none-1 for Error 2 ModelSim waveform problems: ""out"" is red with a mix of 0s and Xs. It's because only 1 bit wide wire connects the tabulator and decoder.","96.5","In seven segment testbench, input radix should be unsigned decimal (-.5)
In adder tb, radix for waveforms should be signed decimal (-.5)
In system tb, radix for all waveforms except hex outputs should be signed decimal (-.5)
Missing sum wire in system tb waveform (-1)
In subtractor tb, radix for waveforms should be signed decimal (-.5)
Also, please do not expand out your waveforms in the screenshots (it makes it much more difficult to read than just the numbers by themselves)
In the second K-map, you have an unnecessary third loop (-.5)
Great work!
 ","98","Part 2 waveforms (-2): Missing waves for op=5 and op=6","95","netid: jmantic2
Score: 95.0

Comments: 
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 8: -3.0; In the r7=A instructions, your or statement uses the incorrect registers as parameters (-1). r0 = r0 + r1 should use the add instruction (-1). A[] is at 0x0017, not 0x0023 (23 is the decimal version of 0x17) (-1).","100","","100",,,,"0",,"5",,,,"72",,"60",,"52",,,,"70",,"5",,"3",,"37",,"6",,,
"pmarti22","Martinez-AbregoGonzalez, Pablo","98.5",,,,"80",,"99","-1: The most positive number is 2147483647.Your ""a"" value choice makes it hard to see the use of a mask. ","100","ldi can only store up to 8 bits at a time - the first 4 are the opcode, but the next 4 are for the register to store to.You shouldn't put more that one instruction per line. ","100","","97","netid: pmarti22
Score: 97.0

Comments: 
    Problem 8: -3.0; -3 Operands not displayed in hex","98","-1 for Error 2 ModelSim transcript errors/warnings: none
-1 for Error 3 ModelSim transcript errors/warnings: none","99.5","Your second K-map has an unnecessary 3rd loop (-.5)Great work!","100","","95","netid: pmarti22
Score: 95.0

Comments: 
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 8: -3.0; In the r7=A instructions, your or statement uses the incorrect registers as parameters (-1). r0 = r0 + r1 should use the add instruction (-1). A[] is at 0x0017, not 0x0023 (23 is the decimal version of 0x17) (-1).","98.5","-1.5 first chart incomplete, multiple errors in CCs 3 and 4","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"70",,"5",,"3",,"35",,"6",,,
"lmarusha","Marushack, Luke","98.5",,,,"100",,"99","-1: Part 3, you forget to address whether or not C ""cares"" about adding 1 to the largest positive number (it doesn't).","94","Your code to load 0xabcd into r5 could be significantly simplified. ldi can load 8 bits at a time, so you could load ab, then shift by 8 bits, load cd into another reg, and then use or to put them together. Your shift statements shifted by too many bits.  ","100","","94","netid: lmarusha
Score: 94.0

Comments: 
    Problem 8: -6.0; -6 Operands not displayed in hex nor dec","97","-1 for Error 1, ModelSim waveform problems: missing the 'count' is blue.-1 for Error 2 ModelSim transcript errors/warnings: none-1 for Error 3 ModelSim transcript errors/warnings: none","100","Great work!","100","","97","netid: lmarusha
Score: 97.0

Comments: 
    Problem 7: -1.0; (a) pA is incorrect -1
    Problem 8: -2.0; You have many unnecessary instructions in the r7=A section; the values of A get stored in memory when they are declared in the .data section, so you didn't need to store them yourself (-1). The instruction by the finish label should be jr r15 (-1).","99","-1 waveform does not display hexadecimal values","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"67",,"5",,"3",,"39",,"6",,,
"emathy","Mathy, Elizabeth","99",,,,"100",,"97","-1: The largest negative number is -2147483648.-2: Part 5, the 2 masks should be as follows, 0xfffffff0 and 0x0000000f (recall that 1 hex value represents 4 bits).Note: Part 6, shifting left always doubles the value of the number being shifted (assuming no overflow). ","96","In Program 2, Problem 1, bits 7:4 contain 0xb, the register number for r11Make sure you answer with the actual value, not just what it's called (i.e. say the content of Ais 7, not just the contents of A). For the last program, you should instead copy the value of r15 in fun1 before calling fun2, since jr should always use r15","100","Warning: No QAR file submitted. Future failure to attach QAR file file result in -10 deduction.","100","netid: emathy
Score: 100.0","97","-1 for Error 1, ModelSim transcript errors/warnings: warning that port size doesn't match for port 'out'.-1 for Error 2, Quartus RTL netlist problems: none.-1 for Error 3 ModelSim transcript errors/warnings: none","96","Missing subtractor testbench code (-4)Great work!","100","","93","netid: emathy
Score: 93.0

Comments: 
    Problem 4: -1.0; Should not have simplified beyond (a'+c)(a'+b'+d)(a'+c'+d')
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 8: -5.0; You have many unnecessary instructions in the r7=A section; the goal was to load the address of A into r7 and your instructions do not do this (-2). The next two sections are also incorrect; you needed to use load instructions (-2). r7[2] = r0 should have used a store instruction (-1).","100","Important note: testbench should not manually change the value of ""clk"" from 0 to 1. It should have an ""always"" statement that sets clk => ~clk every 5 nanoseconds or so. Still valid answer so no points deducted","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"69",,"5",,"3",,"39",,"6",,,
"mmccann6","McCann, Mary","94.5",,,,"100",,"99","-1: Part 3, the pattern for ""-1, -2, -3"" is that you start at 0xffffffff and ""count down"" by 1 for each value. ","96","In Program 3, high(A) and low(A) hold 0 and 3 respectively, since it's the address of A, not the value held in A. Make sure that you enter final values when the question asks for it. In Program 4, the displacement for the bz instruction is 2. ","100","","74","netid: mmccann6
Score: 74.0

Comments: 
    Problem 2: -2.0; Part B, since we are converting to UNsigned 8-bit, our maximum value we can represent increases to 2^8-1 = 255.
    Problem 3: -4.0; Hex doesn't have a signed bit so read it as a normal bit. And it seems as you don't understand the process of how to turn 2's complement numbers from positive to negative and negative to positive. Review this!!
    Problem 4: -3.0; Messed up going from binary to hex, make sure you understand that hex is 4 bits and how to translate to it. Also realize that hex is never negative so the (-) does not make sense. Make sure you understand how to take the complement of a positive value, as you slipped up while going from 67 to -67. (it is not simply changing the significant bit!!)
    Problem 5: -11.0; No overflow comments provided (-5); Hex and binary for parts C, D, and E are incorrect (-6)
    Problem 8: -6.0; -6 Operands not displayed in hex nor dec","100","","98","In adder table, there should be no overflow in the third row (-.5)
In de2, you could have just done 'assign LEDR = SW' rather than splitting them up.
Incorrect test case used in board photo (-.5)
In subtractor table, there should be overflow in the second row (-.5)
First K-map: second term should be ac' (-.5)
Great work!","99.5","Part 2 testbench (-0.5): Missing test for op=7. You have two instances of op=6.","90","netid: mmccann6
Score: 90.0

Comments: 
    Problem 1: -1.0; Skipped over the identity property. A small jump in logic
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 7: -1.0; (c) F is incorrect -1
    Problem 8: -7.0; r2=r7[1] instruction uses the wrong registers as parameters (-1). Missing part c output, so part d also cannot be validated (-6).","100","","100",,,,"79",,"5",,"4",,"76",,"64",,"57",,"1",,"69",,"3",,"2",,"40",,,,"4",
"dmccart9","McCarthy, Daniel","96",,,,"100",,"98","-1: Part 3, you forget to answer ""Does C care?"" (it doesn't).-1: Incorrect mask (""72568fffffff0""), should be fffffff0. ","98","In program 3, the value of &A is the address of A, or 0xa0.Make sure you enter final values when the question asks for it. ","98","-1 ""Which of the following will fail to compile in Quartus"" answer should be #2-1 Tabulator verilog code--used '+' in place of '|,' you're just lucky your code still somehow works ","97","netid: dmccart9
Score: 97.0

Comments: 
    Problem 5: -3.0; Hex and binary incorrect in Part D (-2); No hex provided for Part E (-1)","96","-1 for Error 1, Quartus transcript errors/warnings: :  Warning (10236): Verilog HDL Implicit Net warning at tabulator_system.v(10): created implicit net for ""COUNT"".-1 for Error 1, ModelSim transcript errors/warnings: warning that port size doesn't match for port 'out'. ModelSim waveform problems: 'count' is blue, 'out' is red.-1 for Error 2, Quartus transcript errors/warnings: :  Warning (10236): Verilog HDL Implicit Net warning at tabulator_system.v(10): created implicit net for ""COUNT"".-1 for Error 3, Output pins are stuck at VCC or GND","91.5","Incorrect g4 equation in table and in decoder module (-1)
Adder tb waveforms should use signed decimal radix (-.5)
System tb waveforms should use signed decimal radix (-.5)
Missing sum wire in system tb waveforms (-1)
Subtractor tb waveforms should use signed decimal radix (-.5)
Missing simplified equations for K-maps (-4); first and last could be simplified further by doing 2 loops of 2 elements each (-1)","99","Part 1 & 3 (-1): When using the LCD Display, make sure your output is legible. There should be spaces between values. Try to use both lines for clarity.","89.5","netid: dmccart9
Score: 89.5

Comments: 
    Problem 2: -2.0; Never showed final step or answer
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 8: -6.5; For r7=A, you should have used low(A) and high(A) with a left shift to load in the address of A, as in the previous studio (-2). You should have had a jal mult instruction (-1). The store instruction parameters are out of order for r7[2]=r0 (-.5) The finish label should have a jr r15 instruction (-1). Incorrect address for A[] (-2).","100","","100",,,,"79",,"5",,"4",,"34",,"68",,"53",,"1",,"57",,"5",,"3",,"38",,"6",,,
"dmcfarl2","McFarlane, Daniel","84.5",,,,"55",,"100","Note: Part 6, formatting makes it look like you were saying bit shifting left doubled the decimal and made it negative.  ","99.5","The hex encoding of ldi r1, 5 is not just the register - it includes the opcode, register, and value. Therefore, it's 7105. ","98","-1 Decoder code: ~(in0&in1) is incorrect, should be (~in0)&(~in1)-1 You state there were no logic problems on board after compilation, but there should have been because of above decoder error.","90","netid: dmcfarl2
Score: 90.0

Comments: 
    Problem 3: -1.0; Made a mistake when calculating the hex of -73
    Problem 8: -9.0; -6 Operands not listed in hex nor dec, -3 Answers not listed in hex","97","-1 for Error 1, ModelSim transcript errors/warnings: warning that port size doesn't match for port 'out'.-1 for Error 2 ModelSim transcript errors/warnings: none-1 for Error 3 ModelSim transcript errors/warnings: none","92.5","Incorrect logic for overflow module (-1)
In adder table, 3rd overflow should be 0 and 4th overflow should be 1 (-1)
Subtractor table is largely incorrect (-3)
Subtractor tb test cases are incorrect; should have used the same ones as before (-1)
Your waveforms are incorrect but match your test cases so no deduction
The first K-map could be simplified further by doing 2 loops of 2 elements (-.5)
The second K-map has an unnecessary 3rd loop (-.5)
The second term in the 4th K-map equation should be a'cd' (-.5)","100","","87","netid: dmcfarl2
Score: 87.0

Comments: 
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 7: -4.0; (c) Did not use inspection -4
    Problem 8: -8.0; Missing instructions r7=A (-2). Missing part c output, so part d also cannot be validated (-6).","98.5","-0.5 table says ""6"" where it should say ""4""-1 second waveform does not display hexadecimal values","86",,,,"79",,"5",,"4",,"14",,"28",,"57",,"1",,"62",,"5",,"3",,"39",,"6",,"3",
"pmcgrat3","McGrath, Patrick","78.5",,,,"100",,"96","-1: Part 3, the pattern of ""-1, -2, -3"" is that their hex value is decreasing by 1 each. -1: Part 3, the values of the most positive and most negative in decimal form are 2147483647 and -2147483648. -1: Part 3, C does not ""care"" because no error is thrown and you are allowed to do what you've done. -1: Part 6, no right shift of a negative number in your program code. ","96.5","What is 0xfffe in decimal? The question asks for both decimal and hex. In Program 2, Problem 1, the value of bits 7:4 is 0xb. In Program 5, why does it not exit fun 1 correctly? ","100","","94","netid: pmcgrat3
Score: 94.0

Comments: 
    Problem 5: -6.0; Parts C and E overflow (-2);  Incorrect binary and overflow, and no hex provided for Part B (-3); Incorrect hex for Part D (-1)","99","-1 for Error 1, ModelSim transcript errors/warnings: warning that port size doesn't match for port 'out'.","92.5","Seven segment display waveforms are not fully expanded and so cannot be verified (-2)
Incorrect hex for s in 3rd and 4th row of adder table (-1)
It's not incorrect, but don't put a delay at the beginning of your testbench as you just end up with a period of red lines on all your waveforms.
In system tb, hex outputs should be in binary radix (decimal doesn't make sense here) (-.5)
In system tb, the sum wire should be in decimal radix (-.5)
In the subtractor module, every input/ouptut of the full adders should not be negated, only the b inputs (-3)
In subtractor tb, all waveforms should be in decimal radix (besides ovf) (-.5)","100","","95","netid: pmcgrat3
Score: 95.0

Comments: 
    Problem 4: -1.0; Should not have simplified beyond (a'+c)(a'+b'+d)(a'+c'+d')
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 8: -3.0; In r7=A instructions, should hav shifted by 8 bits, not 1 (-1). Address of mult function is 0x000a, not d000a (-2).","100","","100",,,,"79",,"5",,"4",,"76",,"68",,"51",,"1",,"66",,"5",,"3",,"38",,"6",,"4",
"rmcilvai","McIlvaine, Ross","98",,,,"100",,"100","Note: Part 3, C does not ""care"" because there is no error.  ","100","","100","","98","netid: rmcilvai
Score: 98.0

Comments: 
    Problem 6: -2.0; Missing hex values for A and B. Program doesn't print overflow comment if there is no overflow.","99","-1 for Error 1, ModelSim transcript errors/warnings: warning that port size doesn't match for port 'out'. ","88.5","Incorrect logic for overflow module (-2)
In adder table, overflow is incorrect for 2nd and 3rd rows (-1)
Overflow waveform incorrect, but makes sense given incorrect equations so no deduction
In de2, you could have simply done 'assign LEDR = SW' rather than splitting up the assignments.
Subtractor table results for s columns are largely incorrect (-3)
Subtractor tb should use decimal radix for waveforms (-.5)
Your subtractor tb instantiates an adder module instead of a subtractor module, so your simulation results are incorrect (-2)
Missing circles for K-maps (-2)
1st and 4th K-map equations could have been simplified further (-1)","100","","95","netid: rmcilvai
Score: 95.0

Comments: 
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 7: -1.0; (d) Did not mark DeMorgan's Law
    Problem 8: -2.0; r7=A: Don't need to add r11 to r10. Skip the next ldi r8, 0, and just or r10 and r11.","100","","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"66",,"5",,"3",,"39",,"6",,,
"nmcshea","McShea, Nolan","97",,,,"100",,"97.5","-2: Part 4, the largest unsigned number in hex is 0xFFFFFFFF. This is 4294967295 in decimal. For unsigned numbers there are no negative numbers, you would continue to count up as you'd expect, until you reach 32 1's.-0.5: Part 4 program, used %d instead of %u.","100","","99","-1 ""Which of the following will fail to compile in Quartus"" answer should be #2, not #1 ","99","netid: nmcshea
Score: 99.0

Comments: 
    Problem 6: -1.0; Missing hex values of A and B.","98","-1 for Error 2 ModelSim transcript errors/warnings: none.-1 for Error 3 ModelSim transcript errors/warnings: none","97","Adder tb waveforms should use decimal radix (-.5)
Please don't expand your waveforms all the way going forward; we only really need to see the number that summarizes the multibit signals, not the individual waveforms (since the numbers are more readable).
Subtractor table has 4 incorrect entries (-2)
Subtractor tb waveforms should use decimal radix (-.5)","95","Part 2 ALU (-5): Wrong module code. Only half points are taken off due to the RTL netlist looking correct.","98","netid: nmcshea
Score: 98.0

Comments: 
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.","100","","100",,,,"0",,"5",,"4",,"76",,"68",,"57",,"1",,"70",,"5",,"3",,"39",,"6",,,
"rmendiza","Mendizabal, Rafael","96",,,,"87",,"85","-1: In part 5 you get that fffffffc instead from (~0x3) because all the 1s flip and become 0s and all the 0s become 1s.-2: In part 6 incorrect/no decimal values given for (10 << 1) and (10 << 2). -12: In part 6 the code submitted doesn't have any shifting in it to answer the questions. ","97","In the future, please use a pdf format. In Program 2, please write the actual values of the address, memory, etc.In Program 4, you have the order of the bn branch execution inverted. It would not run the first time, then run the second time. ","99","-1 ""Which of the following will fail to compile in Quartus"" #1 will compile","71","netid: rmendiza
Score: 71.0

Comments: 
    Problem 2: -1.0; Part C, Not possible to convert to 8-bit unsigned binary. The ""overflow"" changes the number
    Problem 5: -2.0; Incorrect overflow comment for C and D.
    Problem 6: -6.0; Partly incorrect test results. Missing decimal and hex values for A and B. Incomplete aproach for finding overflow. Review solutions.
    Problem 8: -20.0; no answer","99","-1 for Error 2 ModelSim transcript errors/warnings: none","87.5","Seven segment tb should use unsigned decimal radix for the input (-.5)
Adder table is largely incorrect (-3)
Missing system module code and RTL (-8)
1st K-map equation could be simplified further to b'c + ac' (-.5)
2nd K-map equation has an unnecessary 3rd loop but you didn't put it in the equation so I won't deduct.
4th K-map equation could be simplified further to a'b'd' + a'cd' (-.5)
 ","97","Part 1 picture of board (-3): Wrong values for 'a', 'op', and 'f'.","89","netid: rmendiza
Score: 89.0

Comments: 
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 6: -1.0; Should write out minterm values in truth table, instead of using symbols
    Problem 7: -8.0; (c) Did not use inspection -4 (d) Incorrect process -4
    Problem 8: -1.0; r7[2]=r0: mixed up the order of arguments: should be st r0, r7, 2","98","-1 mistakes in chart for XNOR of clock cycles 2 and 4-1 waveform does not show hexadecimal values","79",,,,"79",,"5",,"4",,"76",,"67",,"57",,"1",,"69",,"5",,"3",,"36",,"6",,,
"emercuri","Mercurio, Evan","88.5",,,,"100",,"100","Keep in mind that whenever the question asks for the hex representation, include 0x. 
Make sure that you include all of the specified outputs in your program(I didn't take points off, since the other formatted answers were clearly correct).
Also make sure to include a comment or something to indicate when a new part begins in your code.","94","-1 pg 5 0x0 represents displacement for load instruction-1 pg 7 Result not stored in A[2]-1 pg 7 Resulting value of A[2] not written in box-3 pg 7 Incorrect hex digit meanings","97.5","-2.5 missing the system_de2 RTL in Page 7.","97","netid: emercuri
Score: 97.0

Comments: 
    Problem 6: -3.0; Used ""!"" instead of ""~"". Missing some hex and decimal values for A and B.","92","Missing count wire waveform from simulation screenshots (-2)
Incorrect ModelSim warning for Error 1, and waveform for count should be a blue line (-3)
For error 2, count should be a blue line (-1)
For error 3, should have observed that count was only one bit now (-2) ","87","Part 1 testbench (-0.5): make sure your input is displayed in unsigned radix.Part 2 overflow (-1): Overflow equation is incorrect. Overflow occurs when either a and b are true, and s is false, or vice versa, since we are dealing with signed numbers.Part 2 table (-3): These numbers are signed, so rows 3 and 4 should have negative a and b values in decimal, and overflow should occur on rows 2 and 4.Part 2 waveform (-0.5): Outputs should use the signed decimal radix.Part 3 system (-1): system asks to wire together the adder from part 2 to 3 instances of the seven-segment display decoder. Your system has each component from part 2 in system, which also clutters your RTL netlist.Part 3 waveform (-1): a and b should use the decimal radix.Part 4 de2 (-0.5): LEDRs should be an output, and can be directly assigned to the values of the switches.Part 5 table (-3): These numbers are signed, so any input with a leading '1' should be interpreted as negative.Part 5 (-1.5): This problem is asking to testbench the subtractor, which should have outputs of s and ovf, not going through display decoders.Part 6, Q2 (-1): You can group the true's into two bubbles 1 row tall and 2 columns wide, resulting in a'b'+ac. ","99","-1 ALU testbench does not switch value of b for the shift ops","89","netid: emercuri
Score: 89.0

Comments: 
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 6: -2.0; Truth table incorrect, should include minterms for all cases where f =1
    Problem 8: -8.0; First albaCore instruction: A should delcare the whole array: ""A: 3, 5, 0"". main: No need to initialize with 0s. r7 = A needs to construct the address from high(A) and low(A) by shifting the high to left left, and 'or'ing with the low bits. Try to keep branches as labels, not the specific distance--that's the point of the label. loop: still needs the loop tag in front of it, and the goto label: ""loop: bz r3, finish"". The starting address of the mult function happens when you jal to the function at 0x0014.","100","Great work!!","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"62",,"5",,"3",,"37",,"6",,"4",
"jmille83","Miller, Jade","77",,,,"100",,"97","Make you answer the questions as they describe (i.e. part 6, answer in decimal, not binary).
Keep in mind that shifting to the right essentially divides the value by 2.
In part 3, you gave the correct results for -1, -2, and -3, but these values aren't represented in the program's output. It looks like you used the wrong variables (x,y,z instead of w,p,k).
Good job formatting your output otherwise.","91","-1 pg 3 Hex encoding of ldi r1 5 should be 7105-1 pg 5 11 refers to register #, not mem location-1 pg 5 0 is displacement of load instruction-2 pg 5 Program twice refers to r16, which doesn't exist in AlbaCore-1 pg 6 Incorrect 16-bit address-1 Program does not update A[2]-1 pg 9 Program syntax error--can't use register to store displacement-1 pg9 Program loops forever as currently written","100","","86","netid: jmille83
Score: 86.0

Comments: 
    Problem 4: -1.0; Made a slight error reading 0100 as 8 instead of 4
    Problem 5: -3.0; No overflow for D. No overflow comment on A-B.
    Problem 6: -10.0; No answer.","91","Missing count wire waveform from simulation screenshots (-2)
Incorrect ModelSim warning for Error 1 (the line you copied just says that the simulation stopped, not what the error was); didn't mention that waveform for count is blue (-3)
For error 2, didn't describe errors in waveforms; count should be a blue line (-2)
For error 3, should have observed that count was only one bit now (-2)","89.5","Part 1 K map equations (-0.5): Equation for g4 does not align with your truth table.Part 1 testbench (-0.5): make sure your input is displayed in unsigned radix.Part 2 table (-3): These numbers are signed, so rows 3 and 4 should have negative a and b values in decimal, and overflow should occur on rows 2 and 4.Part 2 waveform (-0.5): Incorrect radix (should be signed).Part 3 waveform (-1): a and b should use the decimal radix.Part 5 table (-3): These numbers are signed, so any input with a leading '1' should be interpreted as negative.Part 5 waveform (-1): Inputs should use the decimal radix.Part 6, Q1 (-0.5): abc' is too restrictive, you can generalize it to ac'.Part 6, Q2 (-0.5): b'c is a duplicate term. Already included in the other bubbles.","100","","93","netid: jmille83
Score: 93.0

Comments: 
    Problem 4: -2.0; Wrote inverses of terms instead of actual terms.  Final answer should be (a'+c)(a'+b'+d)(a'+c'+d')
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 7: -4.0; (c) Did not use inspection -4","99","(-1) - you are testing two inputs in the second test bench, when the module only takes in one ","100",,,,"79",,"5",,"4",,"76",,"66",,"57",,"1",,"62",,"5",,"3",,"40",,"6",,,
"bmoran4","Moran, Brynne","89.5",,,,"59",,"100","","89","-1 pg 3 Hex encoding of ldi should be 7105-1 pg 5 4 bits represent displacement-1 pg 3 program references ""r111""-4 pg 7 r1 not loaded properly-1 pg 7 Value of A[2] not entered into box-1 pg 7 A not changed to array-1 pg 7 Statement not evaluated in program-1 pg 7 A[2] not modified","99","-1 in Page 4, you should use & instead of &&.","96","netid: bmoran4
Score: 96.0

Comments: 
    Problem 5: -1.0; Overflow for E.
    Problem 6: -3.0; Gives ""overflow"" when adding a negative and positive. Testing results are wrong for the last one. Note that you don't need to mask and shift right 31, either works.","94","Missing signal names in ModelSim screenshots; missing count wire waveform (-2)
Should have mentioned that count waveform was a blue line in Error 1 (-1)
For error 2, count should be a blue line (-1)
For error 3, should have observed that count was only one bit now (-2)","89","Part 1 K maps (-4): missing equationsPart 1 verilog (-1.5): equations for g4, g5, and g6 are incorrect.Part 3 waveform (-0.5): missing wave for connecting wire.Part 4 RTL netlist (-1): showing netlist for system, not de2. Should show SW, LEDR, HEX0, etc., with only one module (system).Part 4 and 5 (-4): missing photos of board.","100","","98","netid: bmoran4
Score: 98.0

Comments: 
    Problem 4: -1.0; Should not have simplified beyond (a'+c)(a'+b'+d)(a'+c'+d')
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)","100","Great work!","100",,,,"73",,"5",,"4",,"76",,"68",,"54",,"1",,"70",,"5",,"3",,"39",,"6",,"4",
"dmoses2","Moses, David","77",,,,"81",,"99","Make sure you indicate how the most significant bit indicates sign, not just that it does indicate sign. 
Also make sure that you answer questions fully.
Try to organize your output a little more, as it can be a little hard to follow how it's currently organized (i.e. add lines saying which part the output is at).","98","-1 pg 10 Approach not described-1 pg 8 r1 initialized as 6 instead of 8","93","-2 for Page 1 and 2 the selecting box, question 3 and 4 are incorrect.-5 for Page 5 in the system_de2 box, you are just showing the system code again. However, you should call you system module in system_de2 and connect the input and output to actual hardware ports on the board.Also, please submit the .QAR file, we will deduct pts in the following studios if you don't.","93","netid: dmoses2
Score: 93.0

Comments: 
    Problem 5: -4.0; Incorrect or no overflow comment for A-D.
    Problem 6: -3.0; Incorrect mask. Incorrect test results. No hex or decimal values of A and B.","89","In the tabulator, your equations for out[0] and out[1] are flipped, which makes your final output reversed (-1).
Incorrect ModelSim warning for error 1 (-2)
No explanation for ModelSim waveform errors in error 1 (-2) 
No explanation for ModelSim waveform errors in error 2 (-2)
For error 3, incorrect Quartus warnings (-2); no explanation for ModelSim waveforms (e.g. should have noted that count was now only one bit) (-2).","94","Part 1 waveforms (-0.5): no need to expand the multibit waves. Use the specified radix (unsigned).Part 2 table (-3): These numbers are signed, so rows 3 and 4 should have negative a and b values in decimal, and overflow should occur on rows 2 and 4.Part 3 waveform (-0.5): missing wave for connecting wire.Part 5 table (-1): Recheck your sum value in decimal. 101 should be -3, and 011 should be 3.Part 6, Q2 (-0.5): b'c is a duplicate term. Already included in the other bubbles.Part 6, Q4 (-0.5): a'b'c'd' is too restrictive, you can generalize it to a'b'd'.","99","-1 last test case missing in ALU testbench","96","netid: dmoses2
Score: 96.0

Comments: 
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 8: -3.0; int A[]: defined as ""A: 3, 5, 0"". r7 = A needs to construct the address from high(A) and low(A) by shifting the high to left left, and 'or'ing with the low bits.","100","Good work!","100",,,,"0",,"5",,"4",,"72",,"0",,"0",,"1",,"62",,"5",,"3",,"40",,"6",,,
"jmozdzen","Mozdzen, Jacob","93",,,,"100",,"100","","97","-1 pg6 Address of A is 0x0003-1 Pg10 Copies value of r0 into r1-1 A[1] loaded with wrong value","99","-1 for the 4th selection question.","99","netid: jmozdzen
Score: 99.0

Comments: 
    Problem 6: -1.0; Missing hex values for A and B.","99","Q2: Should have mentioned that red lines mean unknown values, which typically come from disconnected inputs (-1)","99","Part 1 waveforms (-0): no need to expand the multibit waves.Part 3 waveform (-0.5): missing wave for connecting wire.Part 6, Q2 (-0.5): b'c is a duplicate term. Already included in the other bubbles.","100","","98","netid: jmozdzen
Score: 98.0

Comments: 
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 8: -1.0; r0 = 0: should be ""ldi r0, 0"".","100","Good work!","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"70",,"5",,"3",,"35",,"6",,"4",
"cmurph29","Murphy, Conor","91",,,,"80",,"95","Make sure your answers are clear and complete (i.e. indicate which sign means positive/negative, not just that it does determine the sign). 
-2, from Part 3, questions 3 and 6.
-3, from Part 5. Make sure that you answer completely - include all 32 bits. Only 0x0f or 0xf0 would not give the correct answer.","82","-1 pg 3 Return code is value of r0-2 pg 3 Loaded R11, not R5 as instructed-2 pg 4 Q unanswered-3 pg 6 Only last digit of A loaded onto r1-5 pg 6 A[2] = A[1] + A[0] does not function as instructed-5 pg 8 Program runs forever","99","-1 for the 4th selection question.","57","netid: cmurph29
Score: 57.0

Comments: 
    Problem 2: -1.0; Part A, Binary is correct, but the conversion to hex is off. 0001 0001 => 0x11
    Problem 4: -2.0; Since we are in 2's complement, 153 in impossible
    Problem 5: -2.0; Last row is incorrect.
    Problem 6: -8.0; Missing most of the code.
    Problem 7: -10.0; no answer
    Problem 8: -20.0; no answer","91.5","Slightly incorrect equation for out[1] in tabulator (-.5)
In the future, make sure your testbench counts up from 000 to 111 in the in[2:0] order, not the [0:2] order, since that's the way you defined your ports (That way they'll appear in order on the waveform)
Missing count wire waveform on the ModelSim screenshot (-2), output incorrect for input of 110 but makes sense given out[1] equation.
For error 1, waveform for count should be a blue line (-1)
For error 2, count should be a blue line (-1)
For error 3, incorect Quartus warnings (-2); in ModelSim waveforms, should have observed that count was only one bit now (-2)","73.5","MISSING QAR -10Part 1 K maps (-4): missing equationsPart 1 verilog (-1.5): Equations for g0, g5, and g6 do not align with your truth tables.Part 2 table (-3): These numbers are signed, so rows 3 and 4 should have negative a and b values in decimal, and overflow should occur on rows 2 and 4.Part 2 waveform (-0.5): Outputs should use the signed decimal radix.Part 3 waveform (-0.5): missing wave for connecting wire.Part 5 table (-3): These numbers are signed, so any input with a leading '1' should be interpreted as negative.Part 5 waveform (-1.5): Output should use the (signed) decimal radix.Part 5 (-2): missing photo of board.Part 6, Q2 (-0.5): b'c is a duplicate term. Already included in the other bubbles.","100","","82","netid: cmurph29
Score: 82.0

Comments: 
    Problem 5: -2.0; Part A: Incomplete simplification. Should be a+bd (-1).  Part B: Incomplete simplification.  Should be a'b'd. (-1) 
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 7: -3.0; (d) -3 Did not show work for F
    Problem 8: -12.0; int A[]: defined as ""A: 3, 5, 0"". r7 = A needs to construct the address from high(A) and low(A) by shifting the high to left left, and 'or'ing with the low bits. Missing C: -5. Part D depends on part C: -4.","89","(-1) - there is no 10 in hex, the value is AQAR file not submitted on time: -10 ","99",,,,"79",,"5",,"4",,"76",,"66",,"57",,"1",,"69",,"5",,"3",,"39",,"6",,,
"anguye22","Nguyen, Alisa","93.5",,,,"100",,"100","Good job formatting/commenting your code and output.","90.5","-1.5 pg 5 Values not given for A, A[0], or *A-2 pg 6 Incorrect high(A), low(A)-1 pg 8 rb is condition register-5 pg 6 Program loads r1 with incorrect value; doesn't use any loading from memory","98","-2 for the second and  third selection question.","97","netid: anguye22
Score: 97.0

Comments: 
    Problem 5: -2.0; Incorrect or no overflow comment for C and D.
    Problem 6: -1.0; Missing hex and decimal values for A and B.","90.5","Slightly incorrect equation for out[0] in tabulator (-.5)
In testbench, should have tested all the inputs 000-111 (-1)
Missing count wire waveform from Modelsim screenshot (-2)
In error 1, should have received a warning from Modelsim, and waveform for count should be a blue line (-3)
For error 2, count should be a blue line (-1)
For error 3, should have observed that count was only one bit now (-2)
 ","96","Part 1 waveforms (-0.5): Put all the desired radix on one wave. There is no need to have your input in binary, or the output signed in this case.Part 2 table (-3): These numbers are signed, so rows 3 and 4 should have negative a and b values in decimal, and overflow should occur on rows 2 and 4.Part 6, Q2 (-0.5): b'c is a duplicate term. Already included in the other bubbles.","100","","91","netid: anguye22
Score: 91.0

Comments: 
    Problem 4: -4.0; Did not apply DeMorgan's Law correctly.  Final answer should be (a'+c)(a'+b'+d)(a'+c'+d')
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 7: -4.0; (c) Did not use inspection -4","100","Great work!!","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"66",,"5",,"3",,"36",,"6",,"4",
"lnordman","Nordman, Luke","100",,,,"100",,"100","Don't forget to include your name.
Also don't forget to write 0x when the question asks for a hex value (but not as output, which should be straight from the terminal).","99","-1 pg 3 Return code is based on the final value of r0","98","-2 for the second and third selection questions.","100","netid: lnordman
Score: 100

Comments: 
    Problem 6: -2.0; You are not supposed to use boolean. You are supposed to use the numbers and the bit-wise operations only.","99","Please try to stick to the [3:0] convention when making ports rather than switching the order within and between modules; you'll save yourself a lot of headache in the long run.
Error 3: should have noted that the count wire was only 1 bit wide (-1)","99.5","Part 6, Q2 (-0.5): b'c is a duplicate term. Already included in the other bubbles.","100","","100","netid: lnordman
Score: 100.0","100","Good work!","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"69",,"5",,"3",,"40",,"6",,,
"poliver","Oliver, Peter","90",,,,"99",,"97","Your answer for Part 3, Question 3 is partially correct. When the most significant bit is 1, then it is negative. Your answer, F, is included with hex values from 8-F for negative ints.","90","-0.5 pg 3 Incorrect ADD memory location-0.5 pg 3 return code is value of r0-1 pg 5 incorrect value of bits 7:4-0.5 pg 5 value of A not given-1 pg 5 *A = 7-1 pg 7 Value of A[2] not in box-0.5 pg 8 No meaning given-0.5 pg 9 Displacement is -4-2 pg 10 Incorrect memory addresses (fun1 fun2)-0.5 pg 10 Incorrect memory address (jal fun1)-0.5 pg 10 Wrong purpose of ""and"" instruction-1 pg 7 Invalid syntax ""exit"" in program","99.5","-0.5 for the 4th selection question.A warning: please submit the .QAR file.","90","netid: poliver
Score: 90.0

Comments: 
    Problem 6: -3.0; Missing hex and decimal from A and B. Used ""=="" and ""!="" for overflow testing.
    Problem 8: -7.0; second and third answer is incorrect","91","In decoder, your outputs out[2] and out[1] are switched (based on the way you wrote your equations (-1).
In the waveforms, your outputs should progress 0001, 0010, 0100, 1000 (-1).
Missing waveform for count wire (-1).
Error 1: should have had an error in ModelSim, should have mentioned that count waveform is blue (-3).
Error 2: should have mentioned that count is blue (-1)
Error 3: should have mentioned that count waveform is now only one bit (-2)","86","-MISSING QAR -10-No need to expand the multibit waves.Part 1 K map equations (-0.5): Equation for g0 does not align with your truth table.Part 3 waveform (-1.5): missing wave for connecting wire. Hex outputs should be in binary, not decimal radix.Part 5 waveform (-0.5): Output should use the (signed) decimal radix.Part 6, Q1 (-0.5): abc' is too restrictive, you can generalize it to ac'.Part 6, Q2 (-1): b'c is a duplicate term. Already included in the other bubbles. Also, no need to keep the b in abc, or the c' in a'b'c'.","100","","77","netid: poliver
Score: 77.0

Comments: 
    Problem 2: -8.0; It seems like you didnt read the problem. The problem states that you are proving the distributive or using other boolean algebra expressions. You used the distributive or to prove itself.
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 6: -1.0; Should write minterms when minterm = 1, instead of simply writing 1
    Problem 7: -8.0; (c) Didn't use inspection -4 (d) Wrong equations -4
    Problem 8: -5.0; Wrong return code: should be 15. Starting address of the funtion is 0x000a (-1 pt). Starting address of A[] is 0x1700.","100","Good work!","100",,,,"79",,"5",,"4",,"76",,"68",,"53",,"1",,"57",,"5",,"3",,"32",,"6",,,
"aorr4","Orr, Adam","95",,,,"100",,"100","Shifting to the right divides the value by two. What you wrote isn't entirely wrong, however, but it doesn't apply to unsigned values.","88","-1 pg 9 bz displacement determined by L2-3 pg 3 XOR does not work as instructed-3 pg 7 Program loads address of A, not value of A-5 pg 9 Loop program does not operate as instructed","99","-1 for the 4th selection question.","92","netid: aorr4
Score: 92.0

Comments: 
    Problem 3: -2.0; Hex values don't have signed bits, they just represent whatever 4-bits they are given
    Problem 4: -1.0; Same issue are question3.
    Problem 5: -4.0; Incorrect or no overflow comment for A, B, D, and E.
    Problem 6: -1.0; Incorrect testing results.","97","In errors 1-3, should have shown the Quartus warnings (-3). In error 3, the modules should still be connected in the netlist, just with one input grounded.","98","Part 5 table (-1): Recheck your 's' decimal representations. 101 should be -3, and 011 should be 3.Part 5 waveform (-0.5): Output should use the (signed) decimal radix.Part 6, Q2 (-0.5): b'c is a duplicate term. Already included in the other bubbles.","100","","95","netid: aorr4
Score: 95.0

Comments: 
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 8: -3.0; Unnessary code in mult: . When you branch, use the labels, not the numbers. The first address of the mult function is at 0x000e, the instruction following jal.","100","Good work!","95",,,,"73",,"5",,"4",,"71",,"65",,"51",,"0",,"62",,"4",,"2",,"36",,"6",,,
"rpairitz","Pairitz, Ryan","81",,,,"100",,"97","Don't forget to include your name.
Negative values are not represented as the inverse - look up two's complement. The most significant bit can only be a 1 or 0, therefore, F isn't a possible value. More importantly, the most significant bit indicates if the int is positive (0) or negative (1).","68","-0.5 pg 3 r2 not the same thing as 2-1 pg 9 Dispalcement determined by location of L2-1.5 pg 9 ncorrect displacement and explanation-4 pg 10 fun1 and fun2 memory addresses blank-0.5 pg10 Incorrect mem address for jal fun1-1 pg 10 No purpose given-0.5 Incorrect memory addr for jal fun 2-1 pg 10 Program does not terminate, it loops forever-5 pg 11 No answer-1 pg 5 Unnecesarilyy loads r12 with A[0]-10 pg 7 No program given-6 pg 9 No program given","98","-2 for the 3rd and 4th selection question.in Page 4, you'd better use or ('I') insteading of '+'.","94","netid: rpairitz
Score: 94.0

Comments: 
    Problem 5: -5.0; Incorrect or no overflow comment for A-E.
    Problem 6: -1.0; Missing hex values for A and B.","82","Incorrect equations in tabulator -- using ""+"" instead of ""|"" for OR means that Quartus will attempt to add the terms together (-2)
Missing signal names from simulation waveforms (-1). Due to the missing names, there is no way to verify your answers, but it appears that only the input waveform is correct (-3).
Error 1: should have received a ModelSim warning, but the waveforms would have still shown (with some incorrect output) (-4)
Errors 2 and 3: should not have had any ModelSim errors and so should have been able to observe the discrepancies in the waveforms (-4 x 2)
The ""VSIM(paused)"" line is not an error; it's just informing you of the state of the simulation.","89.5","Part 1 K map (-0.5): Incorrect truth table for g2.Part 1 waveforms (-1.5): no need to expand the multibit waves. Additionally, make sure we can see all the values in the waveform. Also, the inputs should be unsigned radix.Part 3 waveform (-0.5): missing wave for connecting wire.Part 6 (-8): missing","98","-2 bad output to board demonstrates error in system_de2 RTL: bit width for LCD_DATA output is too small","99","netid: rpairitz
Score: 99
Question 6: Shouldn't include abc, ab'c, or ab'c' in truth table.","100","Good work!","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"69",,"5",,"3",,"38",,"6",,,
"rpantin","Pantin, Ricardo","96",,,,"100",,"99","Shifting bits to the right divides the value by 2, not multiplying them by 2.In the future, you don't need to include both a screenshot and text copy for the code/output. Just one will suffice.","96.5","-0.5 Value of *(&A) not given-1 Values not given for A[0] and *A-1 pg 7 A[2] not updated by program-1 pg 7 A[2] not stated in box","99.5","-0.5 for the 4th selection question.","98","netid: rpantin
Score: 98.0

Comments: 
    Problem 6: -2.0; Missing hex values for A and B. Program doesn't print overflow comment if there is no overflow.","86","Please try to stick to the [3:0] convention when making ports rather than switching the order within and between modules; you'll save yourself a lot of headache in the long run. As a result of this, your simulated inputs are not in the correct binary order (-1). 
Missing count wire in the simulation results (-1).
Error 1: should have received Quartus and ModelSim warnings (-4). Should have noted that count waveform is blue (-2)
Error 2: should have received Quartus warnings (-2). Should have noted that count waveform is blue (-2)
Error 2: should have received Quartus warnings (-2). Should have noted that count waveform is only 1 bit wide (-2) ","99.5","No need to expand the multibit waves.Part 3 waveform (-0.5): missing wave for connecting wire.","99","-1 ALU testbench does not change value of b for shift ops","97.5","netid: rpantin
Score: 97.5

Comments: 
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 7: -0.5; (a) Last row for pF, nF, G is wrong -0.5
    Problem 8: -1.0; at r0=0, you don't need the ""mult:"" label. It's already in the previous box.","100","Good work!","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"64",,"5",,"3",,"39",,"6",,,
"cparraca","ParraCastro, Cesar","88.5",,,,"100",,"98","Make sure you answer in the format specified (i.e. answer in hex, not binary if the question asks for hex).
Also make sure you answer questions completely (part 6, question 1).","89.5","-2 pg 5 Incorrect values for A[0] and *A-2.5 high(A) and low(A) not stated, addr is incorrect-1  pg 9""Bytes"" not ""bits""; insufficient explanation given-1.5 pg 9 Displacement = -4, displacement determined by location of L1-0.5 pg 9 Displacement detrmined by location of L2-1.5 pg 10 At addr 6 and 8, not -12282 and -12280-0.5 pg 10 Incorrect memory addr jal fun1-0.5 pg 10 Incorrect mem addr jal fun2-0.5 pg 5 ""ld 13"" Improper syntax","94","-1 for the 4th selection question.-5 for system_de2 in Page 5, you are copying the code in the system file, which is incorrect. You should call the your system module in system_de2 and connect the ports to the real hardware pins on the FPGA board.A warning, please submit the .QAR file.","95","netid: cparraca
Score: 95.0

Comments: 
    Problem 5: -4.0; Incorrect or no overflow comment for A-D.
    Problem 6: -1.0; Missing hex values for A and B.","89","In your simulation results, the count wire does not match the input (1 and 2 are switched). This is likely due to your tabulator outputs and decoder inputs both having flipped bits, since your final output is correct (-1).
Error 1: should have received ModelSim warnings (-2); should have been able to view the waveform and observe results (-2).
Error 2: Should have been able to view the waveform and observe results (-2)
Error 3: should have received Quartus warnings (-2); should have been able to view the waveform and observe results (-2)","94.5","No need to expand the multibit waves.Part 1 waveforms (-0.5): Use the specified radix (unsigned).Part 2 table (-3): These numbers are signed, so rows 3 and 4 should have negative a and b values in decimal, and overflow should occur on rows 2 and 4.Part 3 waveform (-0.5): missing wave for connecting wire.Part 5 table (-1.5): Recheck your 's' decimal representation. 101 should be -3, and 011 should be 3.","100","","100","netid: cparraca
Score: 100.0","100","Great work","100",,,,"79",,"5",,"4",,"72",,"68",,"57",,"1",,"62",,"5",,"3",,"40",,"6",,,
"mpeine","Peine, Matthew","96.5",,,,"95",,"99","Don't forget to include your name.
The most significant bit indicates whether it's positive (0) or negative (1). Your answer is partially correct, but that's because F isn't 1) a binary value and 2) isn't the only answer, since E and A are also negative.
 ","94.5","***In the future, please copy and paste code rather than screenshot. -1 pg 9 Determined by location of L2-1.5 pg 9 bn not taken because r5 = 0-1 bn taken because r5 is negative-2 pg 10 All mem addrs wrong ","100","","93","netid: mpeine
Score: 93.0

Comments: 
    Problem 3: -1.0; You had a small mistake reading 5 instead of E.
    Problem 5: -5.0; Incorrect binary and hex for A and B. Incorrect overflow comment on B and E. 
    Problem 6: -1.0; Testing is wrong for the 4th case (looks like incorrect values of a and b were used).","87","Blue line is high impedance, but more specifically, it likely corresponds to a wire being disconnected somewhere in the system (-1)
Red line is no data, but more specifically, it likely means that an input to the system is disconnected or never assigned a value (-1)
Your tabulator equations are switched, so in the simulation the results for inputs of 1 and 2 are backwards (-1)
Missing count wire in simulation screenshots (-2)
Errors 1 and 2: should have received a Quartus warning about an implicit netlist being created for COUNT (-1)
Error 1: should have received ModelSim warnings and should have mentioned that count waveform is blue (-3)
Error 2: should have mentioned that count waveform is blue (-1)
Error 3: should have received a Quartus warning about output pins being stuck at GND, should have mentioned that count waveform is now only 1 bit wide (-3)","97","Part 3 waveform (-1.5): missing wave for connecting wire. a and b should use the decimal radix.Part 5 table (-1): Recheck your 's' decimal representation. 101 should be -3, and 011 should be 3.Part 6, Q2 (-0.5): b'c is a duplicate term. Already included in the other bubbles.","100","","96","netid: mpeine
Score: 96.0

Comments: 
    Problem 4: -1.0; Should not have simplified beyond (a'+c)(a'+b'+d)(a'+c'+d')
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 8: -2.0; You can use ""add"" for last instruction of r7 = A, but you should use 'or'. Part D: addresses are usually represented in hex. Starting address of A[] is at 0x0017.","99","(-1) - waited for 10 clock cycles instead of the desired 20","99",,,,"79",,"4",,"4",,"75",,"68",,"56",,"1",,"65",,"5",,"3",,"40",,"6",,,
"lpieroni","Pieroni, Leonard","82.5",,,,"80",,"100","","96","-0.5 pg 3 Stored at 2, not r2-2.5 pg 10 Code not copied into box-1 pg 6 Program does not load value at A, only addr of A","99","-1 for the 4th selection question.","99","netid: lpieroni
Score: 99.0

Comments: 
    Problem 6: -1.0; Used ""&&"" instead of ""&"" in overflow","100","Great work!","45.75","Part 1 K map equations (-0.5): Equation for g6 does not align with your truth table.Part 1 verilog (-1.5): g0, g1, and g6 do not match with your equations from part 1.Part 1 waveforms (-0): no need to expand the multibit waves.Part 2 overflow (-1): Overflow equation is incorrect. Overflow occurs when either a and b are true, and s is false, or vice versa, since we are dealing with signed numbers.Part 2 table (-3): These numbers are signed, so rows 3 and 4 should have negative a and b values in decimal, and overflow should occur on rows 2 and 4.Part 2 waveform (-0.5): Outputs should use the signed decimal radix.Part 3 waveform (-1): a and b should use the decimal radix.Part 6, Q2 (-0.5): wrong givenPart 6, Q4 (-0.5): a'b'c'd' is too restrictive, you can generalize it to a'b'd'.Raw Score: 91.5Late Submission: -50%Final Score: 45.75","50","Late submission: -50%","94","netid: lpieroni
Score: 94.0

Comments: 
    Problem 4: -1.0; Should not have simplified beyond (a'+c)(a'+b'+d)(a'+c'+d')
    Problem 8: -5.0; You can use ""add"" for last instruction of r7 = A, but you should use 'or'. Unnessary code in r0 = mult(r1,r2): No additional code other than the label is required. Why do you have two sets of output code? Array A starting address is incorrect.","100","Good work!","100",,,,"79",,"5",,"4",,"76",,"21",,"0",,"1",,"69",,"4",,"2",,"38",,,,,
"mpitz","Pitz, Michael","94",,,,"100",,"96","-4 Correctly stated 10 (dec) = 1010 (bin) but did not demonstrate left shift operation results in 20 and 40.Good job! Make a habit of always prefixing hex numbers with ""0x"" and in the future try to divide your code into a cleanly commented block for each part (see answer key).","99","-1 for page 5, A is the the start address of the array, which is 0xa0.","100","Great work!","100","netid: mpitz
Score: 100.0","96","Error 2 (-2): There should be no ModelSim transcript errors/warnings. And the bits were blue and red, not 'void', as this is not a programming language.Error 3 (-2): There should be no ModelSim transcript errors/warnings. And the bits were blue and red, not 'void', as this is not a programming language.","100","","99","(-1) - Did not pad the f value for the lcd displayNote - if you do not set a value, it will continue to be set to the last set value, so you don’t need to continually set your variables in your test bench.  ","98","netid: mpitz
Score: 98.0

Comments: 
    Problem 1: -1.0; Skipped over the identity property. A small jump in logic
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)","99","Did not initialize q to zero in dff. (-1)","100",,,,"78",,"5",,"4",,"76",,"68",,"57",,"1",,"65",,"5",,"3",,"37",,"6",,,
"yqi2","Qi, Yize","97",,,,"100",,"95","-1 ""Not a"" hex should be 0xC, not 0x12-2 Did not write 10 value in binary-1 #5 of program, did not display 'a' as decimal-1 #14 of program, does not demonstrate right shift on negative integersNote: Be sure to answer the questions in the question boxes and put program code in the program box. Some questions ask things as well as tell you to write code, and for most of them putting the code on its own doesn't directly answered the question.","97","-1 for page 4, in the first box, your final value in r5 is not 0xabcd, but 0xcd.-1 for page 6, in the second box, missing or r10, r10, r11.-1 for page 6, in the last box, ldi r2, A cannot give you the starting address of A, use high(A) and low(A)","86","Question 2 incorrect (-2); Question 3 not answered (-3)
When making a truth table, you should put the inputs in binary order (i.e. 000, 001, 010...) to make your results more readable. Please make sure to do that on future assignments.
Incorrect equations for tabulator outputs; your equations seem to have every single in term negated (e.g. where you have in2'in1'in0 it should read in2in1in0')(-4)
Incorrect equations for decoder outputs; your equations are backwards from the correct answer (-4)
Your Verilog modules have incorrect logic but they match the equations you derived above, except for the out1 equation in tabulator (-1)","93","netid: yqi2
Score: 93.0

Comments: 
    Problem 6: -7.0; Missing hex and decimal values for A and B. You needed to write code that could take two inputs and see whether or not these would cause overflow if added. Your overflow comments are hardcoded.","97","Error 2 (-2): There should be no ModelSim transcript errors/warnings. There should not be a visible problem with the RTL Netlist.Error 3 (-1): There should be no ModelSim transcript errors/warnings.","98.5","-0.5 unnecessary vertical circle in K-map 2-1 K-map 4 difficult to read, appears cut off","100","Put spaces in between your values to help with readability","96","netid: yqi2
Score: 96.0

Comments: 
    Problem 4: -1.0; Should not have simplified beyond (a'+c)(a'+b'+d)(a'+c'+d')
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 6: -1.0; Missing minterm a'bc'.  
    Problem 8: -1.0; int A[]: defined as ""A: 3, 5, 0"" without {}. When you branch, use the labels, not the numbers.","100","","95",,,,"79",,"5",,"4",,"72",,"68",,"52",,"1",,"62",,"5",,"3",,"37",,"6",,,
"jramos3","Ramos, Juliana","87.5",,,,"100",,"93","-1 Part 3: Does not state relationship between leftmost bit and number's sign-3 Part 6: When stored in 32-bit format, as C does, 10 << 1 = 20, 10 << 2 = 40. Shifting to left doubles value.-1 Part 6: Shifting to right divides value of a number by 2-2 #13 and #14 of program: Does not properly shift.","98","-1 for Page 3 last box, you should first do not operation and then do and operation.-0.5 for Page 5 the third box, the address is 0xa0-0.5 for Page 10 the 4th box, the value of r15 should be 5.","99","NOTE: You must submit a QAR file for all future Quartus assignments.Your tabulator module has the out1 and out0 equations switched, so your results will be backwards (-1)
Otherwise, great work!","92","netid: jramos3
Score: 92.0

Comments: 
    Problem 3: -6.0; If a number is positive the binary represent that number, by taking the complement you are finding the bit representation for the negative of that number. Since the beginnnig binary is the number, the hex of the number would be taken from that binary string, not the compliments.
    Problem 5: -1.0; Incorrect overflow comment for C.
    Problem 6: -1.0; Missing hex and decimal values for A and B.","96.5","WARNING: 10 point deduction on all future studios if you do not submit the QAR file. Instructions are on Piazza.ModelSim waveforms (-1.5): Missing connecting tabulator-to-decoder wire. Make sure we can see the names of the waves, otherwise we can't grade.Error 2 (-1): There should be no ModelSim transcript errors/warnings.Error 3 (-1): There should be no ModelSim transcript errors/warnings.","96","-0.5 issues with logic for g0-0.5 some logic issues seen in netlist-0.5 logic issues in overflow detector-0.5 Part 3 waveform not presented in radix where requested-0.5 overflow in table for Part 5 misidentified-0.5 K-map 1 wrong-0.5 K-map 2 wrong-0.5 K-map 4 wrong","99","(-1) - Incorrect offset for fNote - work on indentation, your code is difficult to read ","87","netid: jramos3
Score: 87.0

Comments: 
    Problem 4: -1.0; Should not have simplified beyond (a'+c)(a'+b'+d)(a'+c'+d')
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 7: -10.0; (c) No answer -5 (d) No answer -5","100","","100",,,,"79",,"5",,"4",,"76",,"67",,"57",,"1",,"62",,"5",,"3",,,,"6",,,
"creynder","Reynders, Christopher","99.5",,,,"100",,"99","-1 Part 3: Does not state that if left bit = 1 then int is negative, or equivalent statementGreat job!","99.5","-0.5 for Page 10 the 5th box, the memory address for the jal fun2 instruction is 4.","98","Question 3 incorrect (-2)
When making a truth table, you should put the inputs in binary order (i.e. 000, 001, 010...) to make your results more readable. Please make sure to do that on future assignments.
Otherwise, great work!","100","netid: creynder
Score: 100.0","96.5","ModelSim waveforms (-1.5): Missing connecting tabulator-to-decoder wire. Additionally, your output port should have a binary radix.Error 2 (-1): There should be no ModelSim transcript errors/warnings.Error 3 (-1): There should be no ModelSim transcript errors/warnings.","99.5","-0.5 unnecessary vertical circle in K-map 2","100","Work on indentation ","99","netid: creynder
Score: 99.0

Comments: 
    Problem 4: -1.0; Should not have simplified beyond (a'+c)(a'+b'+d)(a'+c'+d')","100","","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"70",,"5",,"3",,"39",,"6",,"4",
"erobert5","RobertsonTorres, Eric","97",,,,"11",,"99","-1 Part 3: Does not state that if left bit = 1 then int is negative, or equivalentGreat work! Very clear output made it easy to grade.","99","-1 for Page 8 the last box, the value is c025, c is the op code of bn, 02  is the branch displacement and 5 us register r5.","100","Assigning the SW values to the LEDR outputs is not necessary for this problem.
Great work!","99","netid: erobert5
Score: 99.0

Comments: 
    Problem 6: -1.0; Missing hex values for A and B.","98","WARNING: 10 point deduction on all future studios if you do not submit the QAR file. Instructions are on Piazza.Error 2 (-1): There should be no ModelSim transcript errors/warnings.Error 3 (-1): There should be no ModelSim transcript errors/warnings.","97.5","-1 overflow detector logic wrong-0.5 overflow column for adder table wrong-0.5 internal wire for last Part 3 testbench not shown-0.5 unnecessary vertical circle for K-map 2 ","100","Great work","92.5","netid: erobert5
Score: 92.5

Comments: 
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 7: -0.5; (a) Last row for pF, nF, G is incorrect -0.5
    Problem 8: -5.0; int A[]: defined as ""A: 3, 5, 0"". r7 = A needs to construct the address from high(A) and low(A) by shifting the high to left left, and 'or'ing with the low bits. Missing 'shift' label. Starting address of A[] is decimal 23, not 0x0023.","100","","95",,,,"0",,"5",,"4",,"0",,"0",,"0",,"1",,,,"5",,"3",,,,,,,
"srodrig9","Rodriguez, Simon","96.5",,,,"79",,"98","-1 Part 3: MSB = 0 if number is pos, MSB = 1 if number of neg-1 Part 5: Incorrect ""set to 1"" mask, error carries forward into program","99.5","-0.5 for page 3 the 4th box, the question is ask for which register, which is r0. ","100","NOTE: You must submit a QAR file for all future Quartus assignments.
Assigning the SW values to the LEDR outputs is not necessary for this problem.
Otherwise, great work!","96","netid: srodrig9
Score: 96.0

Comments: 
    Problem 5: -2.0; Incorrect overflow comments for C and D.
    Problem 6: -1.0; Missing hex values for A and B.
    Problem 7: -1.0; you didn't provide the result of the provided test case.","96","ModelSim waveforms (-2): Missing connecting tabulator-to-decoder wire. Additionally, only add relevant information in your waveform. Also, there is no need to expand multibit waves.Error 2 (-1): There should be no ModelSim transcript errors/warnings.Error 3 (-1): There should be no ModelSim transcript errors/warnings.","98","-1 improper testbench inputs for Part 2-1 again, improper testbench in Part 3 ","98.5","(-.5) - Incorrect pad for op(-1) - good work with simplifying test bench, but you forgot to change the value of b ","99","netid: srodrig9
Score: 99.0

Comments: 
    Problem 5: -1.0; Part B: Incomplete simplification. Should be a'b'd (-1)","100","","100",,,,"73",,"5",,"4",,"0",,"67",,"53",,"1",,"60",,"5",,"3",,"35",,"6",,,
"eromero4","Romero, Estefania","100",,,,"80",,"100","Perfect :)","100","","100","When making a truth table, you should put the inputs in binary order (i.e. 000, 001, 010...) to make your results more readable. Please make sure to do that on future assignments.
Assigning the SW values to the LEDR outputs is not necessary for this problem.
Otherwise, great work!
 ","99","netid: eromero4
Score: 99.0

Comments: 
    Problem 6: -1.0; Missing hex values for A and B.","97","ModelSim waveforms (-1): Missing connecting tabulator-to-decoder wire. Try to keep your waves in one waveform.Error 2 (-1): There should be no ModelSim transcript errors/warnings.Error 3 (-1): There should be no ModelSim transcript errors/warnings.","99.5","-0.5 unnecessary vertical circle for K-map 2 ","98","(-.5) - incorrect padding for op(-1.5) - skipped over both shifts in you test benchwork on indentation","95","netid: eromero4
Score: 95.0

Comments: 
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 8: -3.0; int A[]: defined as ""A: 3, 5, 0"". Missing 'shift' label. When you branch, use the labels, not the numbers. Starting address of A[] is decimal 23, not 0x0023.","100","","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"69",,"5",,"3",,"36",,"5",,,
"krozansk","Rozanski, Konrad","92",,,,"100",,"99","-1 Part 3: Does not state relatinoship between MSB and sign--i.e. MSB is 1 if number is negativeGreat job!","91.5","-1 for Page 3 the last box, for ^ operation, you should first do 'not' then do 'and'.-2 for Page 5 the first box, 7:4 bit should be b, which represents r11.-2 for Page 5 the second box, should be 0, which is the displacement for the load instruction.-0.5 for Page 5 the 6th box, ldi r11, r11, 9 is not correct.-2 for Page 10 the first box, the address for fun1 and fun2 are 6 and 8.-0.5 for Page 10 the second box, should be 2.-0.5 for Page 10 the 5th box, should be 4.  ","98","NOTE: You must submit a QAR file for all future Quartus assignments (not a zip file).
Question 3 incorrect (-2)
Assigning the SW values to the LEDR outputs is not necessary for this problem.
Otherwise, great work!","91","netid: krozansk
Score: 91.0

Comments: 
    Problem 5: -7.0; Missing or incorrect hex for B and D. Missing or incorrect overflow comment for A-E.
    Problem 6: -2.0; Test results are (partly) wrong.","99","Error 3 (-1): Quartus warnings/errors should include a message that ""Output pins are stuck at VCC or GND"".","99.5","-0.5 unnecessary vertical circle in K-map 2","100","Great work","97","netid: krozansk
Score: 97.0

Comments: 
    Problem 4: -1.0; Should not have simplified beyond (a'+c)(a'+b'+d)(a'+c'+d')
    Problem 5: -2.0; Part A: Incomplete simplification. Should be a+bd (-1) Part B: Incomplete simplification. Should be a'b'd (-1)","100","","100",,,,"79",,"5",,"4",,"74",,"0",,"57",,"1",,"68",,"5",,"3",,"40",,"6",,"4",
"cruff","Ruff, Connor","99",,,,"100",,"98","-2 Part 6: Does not shift 20 to left as instructedGood job!","100","","98","Decoder truth table is backwards (your inputs go 00 to 11 and your outputs go 3 to 0) (-2).","96","netid: cruff
Score: 96.0

Comments: 
    Problem 6: -4.0; Missing hex of A and B. Used ""&&"" instead of ""&"". Not perfect test cases.","96","WARNING: 10 point deduction on all future studios if you do not submit the QAR file. Instructions are on Piazza.system_tb (-1): setting ""in"" to new 3-bit values should be done by declaring a three bit number such as 3'b101, not 2'bXXX.ModelSim waveforms (-2): Missing connecting tabulator-to-decoder wire. Additionally, only add relevant information in your waveform. Also, there is no need to expand multibit waves.Error 1 (-1): ModelSim errors/warnings should include that the port size doesn't match for port 'out'.","99","-0.5 hex/decimal for a=101 incorrect in pt 2-0.5 unnecessary vertical circle in K-map 2 ","100","Great work!","98","netid: cruff
Score: 98.0

Comments: 
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.","100","For future reference, you can simply say #200 in your testbench and it will do the same thing as saying #10 20 times. The # symbol just specifies a number of nanoseconds to wait before continuing.","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"70",,"5",,"3",,"39",,"6",,,
"lrymsza","Rymsza, Lauren","89",,,,"100",,"96","-2 Part 4: Gave decimal rather than hex representation-2 Part 6: Does not shift 20 to the right to get 40I was impressed by your short answer responses and how nicely-formatted your program output was","99.5","-0.5 for Page 3 the second box, the hex encoding should be 7105. ","99","One of your decoder inputs is an inout instead of an input -- you can see on the RTL view that this input compiles differently (the triangle shape) (-1).
Otherwise, great work!","77","netid: lrymsza
Score: 77.0

Comments: 
    Problem 1: -1.0; Part A, Check you math for decimal. Hex is correct. 0x49 => 0100 1001 => 2^0 + 2^3 + 2^6 => 1 + 8 + 64 => 73
    Problem 2: -2.0; Part C, You have 9 bit outputs, which are not possible given the problem specifications of 8-bit.
    Problem 5: -8.0; Missing binary value for A-E. Incorrect overflow comment for B and E. Incorrect hex for D. 
    Problem 6: -5.0; Missing decimal and hex values for A and B. Flawed overflow check. Testing is a bit off too.
    Problem 8: -7.0; second and third answer is incorrect","92","tabulator/tabulator RTL Netlist (-1): 'or's are represented by a '|', not a '+', which is reserved for adding.ModelSim waveforms (-2): make sure we can see the names of the waves, otherwise we can't grade. Also, you don't need to expand multibit wires. Additionally, you are missing the tabulator-to-decoder wire.Error 1 (-1): ModelSim errors/warnings should include that the port size doesn't match for port 'out'.Error 2 (-1): There should be no ModelSim transcript errors/warnings.Error 3 (-1): There should be no ModelSim transcript errors/warnings.Error Questions (-2): Missing explanations for RTL netlist problems and waveform problems. You have to interpret the screenshots.","98.5","-0.5 error in first waveform-0.5 missing circle in K-map 1 to connect 100 and 111-0.5 unnecessary vertical circle in K-map 2 ","100","Great work","90","netid: lrymsza
Score: 90.0

Comments: 
    Problem 4: -4.0; Did not apply DeMorgan's Law correctly.  Final answer should be (a'+c)(a'+b'+d)(a'+c'+d') (-4)
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 8: -5.0; shift' label in the wrong line. Part c is asking for the program output.","100","","90",,,,"79",,"5",,"4",,"76",,"68",,"54",,"1",,"70",,"4",,"2",,"39",,"6",,,
"csaca","Saca, Chase","96",,,,"100",,"98.5","-0.5 Part 2: 97 dec = 61 hex-1 #14 of program: Did not demonstrate right shift on negative integer","96","-1 for Page 7 the second box, the question is ask you to load the data to r1, you use r10.-1 for Page 7 the third box, instead of hard code data 0xf00d, you should read it from the memory using ld.-1 for Page 11 the third box. You are thinking it the wrong way, jal fun2 is above jr 15 in fun1, it should be able to execute.-1 for Page 11 the last box, please check the solution.","100","NOTE: You must submit a QAR file for all future Quartus assignments.
When making a truth table, you should put the inputs in binary order (i.e. 000, 001, 010...) to make your results more readable. Please make sure to do that on future assignments.
Otherwise, great work!","91","netid: csaca
Score: 91.0

Comments: 
    Problem 3: -6.0; If the value is already positive the binary is that value, you don't want to flip the bits. The original bnary string is what you should preform the hex conversion on.
    Problem 5: -3.0; Missing overflow comments for A, B, and D.","99","WARNING: 10 point deduction on all future studios if you do not submit the QAR file. Instructions are on Piazza.ModelSim Waveforms (-0): No need to expand the multibit waves.Error 1 (-1): ModelSim errors/warnings should include that the port size doesn't match for port 'out'. ","100","","100","Work on indentation","99","netid: csaca
Score: 99.0

Comments: 
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)","100","","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"69",,"5",,"3",,"38",,"6",,,
"nsanche3","Sanchez, Nathan","79",,,,"99",,"97","-1 Part 3: Incorrect pattern and explanation for negative numbers in C-1 #8 of program: Incorrect hex result-1 #14 of program: Does not shift right for negative integer ","97","Next time please keep the Page Number in your solution.-1 for Page 5 the second box, at memory location 2, the value of 7:4 bits is 0xb, which is the register number for r11.-0.5 for Page 6 the third box, ldi r11, r11, 9 is incorrect.-1 for Page 11 the first box, the hex digits is c025, you should explain the meaning of each digits.-0.5 for Page 13 the second box, the memory address is the jal fun1 is 2.","0","No submission","82","netid: nsanche3
Score: 82.0

Comments: 
    Problem 1: -4.0; Missing Hex conversions
    Problem 4: -4.0; No answers for C and D
    Problem 5: -6.0; Missing or incorrect overflow comment for A, B, D, and E. Incorrect binary and hex for D and E.
    Problem 6: -4.0; Missing test case for when you get overflow with two negative numbers. Test cases are off, please review solutions for a better idea how to solve this.","96","ModelSim waveforms (-2): Missing connecting tabulator-to-decoder wire. Additionally, your output port should have a binary radix. Make sure we can see the names of the waves, otherwise we can't grade.Error 1 (-1): ModelSim errors/warnings should include that the port size doesn't match for port 'out'.Error questions (-1): Each question asked for the quartus errors/warnings, not the entire log. You can filter to just the warnings and errors by clicking the red or yellow icons above the console.","88.5","-0.5 bad logic in decoder for Part 1-1 error in part 1 waveform evidence of faulty logic-0.5 waveform in Part 3 wrong-4 no testbench in part 5-3 no waveform in part 5-2 no picture of board in part 5-0.5 unnecessary vertical circle in Part 6","100","","72","netid: nsanche3
Score: 72.0

Comments: 
    Problem 2: -8.0; It seems like you didnt read the problem. The problem states that you are proving the distributive or using other boolean algebra expressions. You used the distributive or to prove itself.
    Problem 3: -6.0; Didn't incorporate all minterms and doesn't reach the desired output
    Problem 4: -1.0; Don't need to invert whole final equation, as what's inside the outer complement is the value of F inverted (-1)
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 8: -11.0; r7 = A needs to construct the address from high(A) and low(A) by shifting the high to left left, and 'or'ing with the low bits. When you branch, use the labels, not the numbers. Part c is asking for the program output.","100","","100",,,,"0",,,,,,"66",,"0",,"0",,,,"54",,,,,,"38",,,,,
"mschoess","Schoessling, Matthew","93.5",,,,"100",,"96.5","-1 Part 3: Incorrect part of answer (""but in 8 bits"")-2.5 Part 4: Incorrect largest unsigned integer","90","Part 1: Hex encoding of ldi r1,5 should be 7105 (-.5) You were only allowed to use ldi, shl, and or to load 0xabcd (-1).
Part 2: Bits 7:4 at memory address would be 0xb, since r11 is argument ra in this case (-1). The final instruction in the last program (ld) is not needed to store 0xef into memory location 0xabcd (-.5)
Part 3: Q2: Should have used high(A) and low(A) to get the address of A, rather than hard coding the address 0xcafe (-2). Q3: Should have used the address of A with ld instructions to get the values of A[0] and A[1] rather than hard coding the values (-4)
Part 6: Incorrect explanation for what goes wrong when you attempt to call fun2 inside fun1 (-1) -- the issue here has to do with overwriting the return address register. Your solution technically works but typically we would want to be able to return to the main program, rather than just quitting from fun1.","94","NOTE: You must submit a QAR file for all future Quartus assignments.
Question 1 incorrect (-2) Question 3 incorrect (-2)
When making a truth table, you should put the inputs in binary order (i.e. 000, 001, 010...) to make your results more readable. Please make sure to do that on future assignments.
The last term of your out1 equation is technically redundant, but it's not incorrect.
Your decoder truth table is backwards (your inputs go 00 to 11 and your outputs go 3 to 0), so your LED outputs will be reversed (-2).
Otherwise, great work!","90","netid: mschoess
Score: 90.0

Comments: 
    Problem 1: -4.0; Part B, Check your addition--you have the right terms. Part C, same thing, right terms, wrong addition
    Problem 3: -4.0; Some misconceptions causing wrong values. I am a little confused because you messed up in some places and then get it correct in others. So just make sure to check your work!
    Problem 5: -1.0; Incorrect hex sum for D. (Thank you for highlighting answers, very clear)
    Problem 6: -1.0; Looks like you forgot to copy and paste the overflow comment from your testing on the last problem.","96","tabulator (-0): no need to include the in[1]&in[0]&in[2]; term, because it is already covered in all three other conditions. Ex. in[1]&in[0] contains in[1]&in[0]&in[2].ModelSim waveforms (-2): Missing connecting tabulator-to-decoder wire. Additionally, your output port should have a binary radix.Error 2 (-1): There should be no ModelSim transcript errors/warnings.Error 3 (-1): There should be no ModelSim transcript errors/warnings.","98","-1 bad logic on overflow detector-0.5 testbench with overflow detector wrong-0.5 overflow in table for part 5 wrong","97","(-3) - calling parts on an array that don’t exist, a is only [3:0] there is no [7:4] ","93","netid: mschoess
Score: 93.0

Comments: 
    Problem 8: -7.0;  Missing 'shift' label. When you branch, use the labels, not the numbers. Part c is asking for the program output. A address is not verifiable without part c.","100","","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"68",,"5",,"3",,"39",,"6",,,
"psoga","Soga, Patrick","92.5",,,,"100",,"98","-1 Part 3: Incorrect part of answer: ""the first bit is always f""-1 No negative right shift","100","","94","Question 2 incorrect (-2)
out2 equation is incorrect (you should translate each minterm into AND'ed inputs and then the entire equation as OR'd minterms, not the reverse). Your equation would be 0 always (-4)","97","netid: psoga
Score: 97.0

Comments: 
    Problem 5: -2.0; Incorrect overflow comment on C (the first bit tells you the sign) and missing the hex value of the sum for E.
    Problem 6: -1.0; Missing hex values of A and B. Just to note, your mask can be more easily written as 0x80000000.","98","ModelSim waveforms (-0): You don't need to expand multibit wires. Additionally, in the future, put all your waves into a single waveform.Error 2 (-1): There should be no ModelSim transcript errors/warnings.Error 3 (-1): There should be no ModelSim transcript errors/warnings.","99","-0.5 missing a circle horizontally on K-map 1-0.5 unnecessary vertical circle on K-map 2","100","Good work!","99","netid: psoga
Score: 99.0

Comments: 
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.","100","","100",,,,"79",,"5",,"4",,"76",,"0",,"57",,"1",,"66",,"5",,"3",,"40",,"6",,,
"estifter","Stifter, Edward","97",,,,"100",,"99","-1 Incorrect ""zero out"" mask, error carries forward","99.5","-0.5 for Page 5 the 4th box, A[0] is the value of first element, which is 7.","96","Question 4 incorrect (-2)
Your decoder truth table is backwards (your inputs go 00 to 11 and your outputs go 3 to 0), so your LED outputs will be reversed (-2).
Assigning the SW values to the LEDR outputs is not necessary for this problem.
Otherwise, great work!","92","netid: estifter
Score: 92.0

Comments: 
    Problem 5: -4.0; Missing overflow comment for A, B, D, and E.
    Problem 6: -4.0; Missing the check for two positive numbers causing overflow and never prints ""no overflow"" when this is the case.","92","Q1&2 (-2): right ideas, but the blue line is specifically a disconnected wire, and a red line is an unknown value.system_tb (-1): when testing different values, the values are three bits, so they should be described as 3'bXXX, not 1'bXXX.ModelSim waveforms (-1): make sure we can see the names of the waves, otherwise we can't grade. Also, you don't need to expand multibit wires. Additionally, your wire on the bottom of the waveform should be unsigned.Error 1 (-2): Quartus errors/warnings should include ""created implicit net for ""COUNT"" "". ModelSim errors/warnings should include that the port size doesn't match for port 'out'.Error 2 (-1): Quartus errors/warnings should include ""created implicit net for ""COUNT"" "".Error 3 (-1): Quartus errors/warnings should include warning that ""output pins are stuck at VCC or GND"".","99","-0.5 K-map for g1 incorrect-0.5 Unnecessary vertical circle in K-map 2, part 6 ","100","Good work!","99","netid: estifter
Score: 99.0

Comments: 
    Problem 8: -1.0; int A[]: defined as ""A: 3, 5, 0"".","100","","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"68",,"5",,"3",,"37",,"6",,,
"jsweilem","Sweilem, Joseph","92.5",,,,"100",,"98","-2 Program does not shift right or shift left (values hardcoded in)","95","-0.5 for Page 3 the second box, the hex encoding of ldi r1, 5 is 7105.-0.5 for Page 5 the 5th box, *A is the first element of A, which is 7.-1 for Page 5 the 6th box, missing code ldi r11, 9 and also store it the memory is st, not ld.-2 for Page 9 the first box, the address for fun1 and fun2 is 6 and 8. Did you use the code provided in the question?-1 for Page 9 the second box and Page 10 the first box.","98","NOTE: You must submit a QAR file for all future Quartus assignments. 
Question 4 incorrect (-2)
When making a truth table, you should put the inputs in binary order (i.e. 000, 001, 010...) to make your results more readable. Please make sure to do that on future assignments.
Assigning the SW values to the LEDR outputs is not necessary for this problem.
Otherwise, great work!","98","netid: jsweilem
Score: 98.0

Comments: 
    Problem 6: -2.0; Incorrect mask and missing hex values for A and B.","94","WARNING: 10 point deduction on all future studios if you do not submit the QAR file. Instructions are on Piazza.Q2 (-1): right idea, but the red line is an unknown value. It could be wired together but still be red.ModelSim waveforms (-3): Missing waveform labels. We can't grade if we don't know what each line is. Additionally, you are missing the wire connecting the tabulator to the decoder.Error 2 (-1): There should be no ModelSim transcript errors/warnings.Error 3 (-1): There should be no ModelSim transcript errors/warnings.","98","-0.5 decimal values in pt 2 table should be signed-0.5 overflow wrong in pt 2 table-0.5 output of subtractor appears wrong-0.5 unnecessary vertical circle in K-map 2","100","Good work","99","netid: jsweilem
Score: 99.0

Comments: 
    Problem 8: -1.0; int A[]: defined as ""A: 3, 5, 0"".","100","","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"65",,"5",,"3",,"39",,"6",,"4",
"zsy","Sy, Zachary","99.5",,,,"99",,"99","(-1) - You didn't enter the hex values in the correct place, but then had them right below so I'm only taking off one point. ","100","Great work!","99","Q4 (-1): The only option that fails to compile is using one wire to connect multiple output ports to one input port.","96","netid: zsy
Score: 96.0

Comments: 
    Problem 5: -4.0; No overflow comment on A-D.","99","-0.5 internal wire not shown for first waveform-0.5 internal wire not shown for last waveform","99","(-1) - Part 3 values are in signed binary, we were looking for unsigned binary as they are easier to track for the output. Great work!","100","","99","netid: zsy
Score: 99.0

Comments: 
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.","100","Good work","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"66",,"4",,"3",,"39",,"6",,,
"jtabar","Tabar, Joshua","93.5",,,,"100",,"96","(-4) - the most positive value we wanted was 0x7fffffff, the most negative value we wanted was 0x80000000.You mixed up the last two digits of the most positive integer. Won't take off any points, but make sure to double-check your work!!","98","Part 2: (Last question) -- You can't load a 16 bit value into a register using the ldi instruction; you need to use the shift operator and load it in in two parts (-2).Great work!","99","Q4 (-1): The only option that fails to compile is using one wire to connect multiple output ports to one input port.","99","netid: jtabar
Score: 99.0

Comments: 
    Problem 6: -1.0; Missing hex values of A and B.","99.5","-0.5 first error RTL netlist should show disconnection ","98","No points off, but zoom in on your waveforms, there is no need for anything on the screen other than the variable names and the waves.(-1) - Used signed instead of unsigned for the outputs in Part 3. And binary instead of unsigned for Part 5 (-1) - switched the inputs of a and b on the board ","100","","99","netid: jtabar
Score: 99.0

Comments: 
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.","100","Good work","76",,,,"0",,"5",,"4",,"76",,"0",,"0",,"1",,"66",,"5",,"3",,"35",,"6",,,
"ntalbot2","Talbot, Norris","89",,,,"100",,"98","(-2) - We wanted you to use 8 bits instead of the 4, so that you could see 10 moving to 20 and then 40.","97.5","Part 1: Incorrect hex encoding; should be 0x7105 (-.5). Incorrect return code register; should be r0 (-.5) In the last question, you are not allowed to use add (or would have worked here). Also the last or instruction is unnecessary (-1).Part 6: You have an extra jr 15 instruction after your jr 14 instruction that will never get executed (-.5)Great work!  ","100","","95","netid: ntalbot2
Score: 95.0

Comments: 
    Problem 5: -4.0; No overflow comment of A-D.
    Problem 6: -1.0; Missing decimal and hex values of A and B. Other than that very clean and easy to read code.","99","-0.5 no internal wire in first waveform-0.5 no internal wire in last waveform","90.5","(-1.5) - The first instance of waveform. Make sure all of the output is showing so that the photo shows all output for a given set of inputs.(-6) - Made cout an output instead of ovf, which is undefined. Sending cout to testbench and waveform which is not the desired output. Wanted ovf as an output from the overflow. The output of cout from the third adder should be empty ().(-2) - Incorrect logic causing wrong printouts in waveform Part 3.","100","","100","netid: ntalbot2
Score: 100.0","100","Good work","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"63",,"5",,"3",,"37",,"6",,,
"ytischen","Tischenko, Yadviga","94",,,,"100",,"99","(-1) - you were close with the most positive number, however, 0x7fffffff is larger than 0x0fffffff. Otherwise great work!!","99.5","Part 6: Your approach works, but the r15 instruction is unnecessary and will never be executed (-.5)Great work!","98","Tabulator (-2): 'or' operations are represented by '|', not '+'.","98","netid: ytischen
Score: 98.0

Comments: 
    Problem 5: -2.0; Incorrect binary and hex values for E.","98","-2 improper bits wired to various AND gates, no OR gates, extraneous adder all in tabulatornot deducted again in subsequent problems","98.5","(-.5) - Wanted unsigned values for outputs on Part 3 for waveforms(-1) - Make the placement of outputs make sense. i.e. put the sum of the two values on the far right or far left. Having it in the middle is confusing. ","100","","98","netid: ytischen
Score: 98.0

Comments: 
    Problem 4: -1.0; Incorrect first term.  Should be (a'+c)(a'+b'+d)(a'+c'+d') (-1)
    Problem 5: -1.0; Part A: Incomplete simplification. Should be a+bd (-1)","100","Good work","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"69",,"5",,"3",,"39",,"6",,"4",
"ktomsha2","Tomshack, Kaitlyn","87",,,,"100",,"100","","89","Part 1: Incorrect add instruction location; this is the instruction incoding (-.5). Incorrect hex encoding (-.5). Needed to mention that the return code comes from r0 (-.5). When storing 0xabcd, you were only allowed to use ""or"" and not ""add"" (-1).Part 2: Bits 7:4 will be 0xb, the hex representation of r11 (-2). When setting A[] = {7,8,9}, you include instructions that load values into r12, which you were not allowed to do (and isn't actually needed to accomplish the task) (-1).Part 3: You must shift left the value of high(A) before adding it to low(A) (-1). Loading A[2] into r3 is not needed (-.5). You did not store the sum into A[2] (-1).Part 4: The instruction encoding is 0xc025, not 0x7500 (-1). Incorrect displacement values for the branch instructions (-2). Part 6: Your solution works, but typically we would want to return to the main function and not just quit the program inside the function.","95","System/tabulator/decoder (-5): One instance of your tabulator does all the logic to determine outa and outb. By giving it all four inputs, you only need to use the two outputs from the module for any combination of inputs, meaning you only need one tabulator module. Same goes for the decoder. You only need one decoder, as the two outputs from the tabulator are the two inputs for the single decoder.","85","netid: ktomsha2
Score: 85.0

Comments: 
    Problem 3: -2.0; If the value is positive, you do not flip the bits and add 1 to find the value.
    Problem 4: -4.0; Same misconception as question 3.
    Problem 5: -2.0; Incorrect overflow comment on D and E.
    Problem 6: -7.0; Incorrect mask value. Missing decimal and hex values of A and B. Function almost always prints ""overflow"" and never prints ""no overflow"". Try to review the solutions for a clearer picture of how to solve.","98","-0.5 internal wire not displayed in first waveform-1 internal blue wire not noted in 2nd error, no waveform posted-0.5 internal wire not displayed in last waveform","83","To simplify your testbenches, you can set in = 3'd0; instead of setting each bit at once(-0.5) - By going bit by bit you accidentally messed up and switched 0 and 2 therefore not counting up in order and making your testbench not the most helpful. It definitely still works though!(-1.5) - Overall make sure to follow the types of the outputs we ask for!(-6) - The overflow module is logically wrong. This leads to further errors within the homework(-4) - Logic is incorrect leading to the wrong number on board. 6 + 5 should be 3 with overflow. The photo also doesn't show the LEDG so it is impossible to see if the overflow turned on or not. Part 4(-4) - Incorrect logic Part 5.(-1) - #2 You added an extra minim that is not needed. ","100","","93","netid: ktomsha2
Score: 93.0

Comments: 
    Problem 4: -1.0; Don't need to invert whole final equation, as what's inside the outer complement is the value of F inverted (-1)
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 8: -5.0; r7 = A needs to construct the address from high(A) and low(A) by shifting the high to left left, and 'or'ing with the low bits. Don't need to jal loop for r10 = 1. When you branch, use the labels, not the numbers. A starting address is incorrect.","100","Good work","100",,,,"79",,"5",,"4",,"76",,"65",,"54",,"1",,"62",,"5",,"3",,"37",,"6",,,
"guhran","Uhran, Gavin","96.5",,,,"100",,"92","(-4) - the most positive integer is 0x7fffffff and the most negative integer is 0x80000000.(-4) - You had the right idea, but you have a misconception of hex values. hex values are 4 bits. So the answers are 0x0000000F and 0xFFFFFFF0.","89.5","Part 1: Your logic for the XOR operation is incorrect and so the instructions do not execute it correctly (even though your result is correct for 0 and 1) (-3). For loading 0xabcd, you could have done this simpler by loading in 2 8--bit values.Part 2: A is the address, 0xa0; *A is the value at A[0], 7 (-1). You are not allowed to load a 16 bit value, 0xabcd, using ldi -- you should have used the shifting left process instead (-3).Part 3: You should have loaded from the memory address at r12, not r11 (-1). Didn't give the final value of A[2] (-1).Part 4: The displacement is not technically L1, it is -4, since that is the distance to L1; L1 just labels the code so the assembler knows where to look (-.5)Part 6: The jal fun1 instruction is at address 0x0002 (-.5); jal fun2 is at address 0x0004 (-.5). Your solution technically works, but typically we would want to be able to return to the main function rather than just quitting altogether.","100","","95","netid: guhran
Score: 95.0

Comments: 
    Problem 1: -1.0; Part B, check your conversion to hex (no work shown). Decimal looks good.
    Problem 5: -4.0; Last 2 rows are incorrect. You make sure that you are adding the 2's complement of the 2nd number to the first number.","95.5","-0.5 no internal wire shown-2 multiple errors in Quartus and Modelsim not noted for first error-1 Quartus errors not noted for second error-1 Quartus errors not noted for third error","93","(-6) - Incorrect overflow which leads to multiple errors in the following code(-1) - #1 on the K-map, you could reach around to simplify","100","","83","netid: guhran
Score: 83.0

Comments: 
    Problem 2: -8.0; It seems like you didnt read the problem. The problem states that you are proving the distributive or using other boolean algebra expressions. You used the distributive or to prove itself.
    Problem 4: -1.0; Forgot parentheses around first term. First term should be (a'+c)
    Problem 5: -1.0; Part B: Incomplete simplification. Should be a'b'd (-1)
    Problem 6: -1.0; Forgot minterm a'bc'.
    Problem 8: -6.0; Missing part C code output. Also means part D can not be validated. -50% for part D.","97","-1: Should have initial q = 0; in my_dff-1: LFSR testbench should run for 20 clock cycles instead of 10 (#200 instead of #100)-1: q should be in hex radix in the LFSR waveform","100",,,,"79",,"5",,"4",,"76",,"0",,"57",,"1",,"64",,"5",,"3",,"40",,"6",,,
"jvenditt","Venditto, James","92.5",,,,"100",,"100","Great work!","99.5","Part 1: The instruction encoding for add is stored at address 0x0002 (-.5)Great work!","100","","98","netid: jvenditt
Score: 98.0

Comments: 
    Problem 6: -2.0; Missing decimal and hex values of A and B.","100","","97","(-1) - Part 3, wanted decimal not signed decimal. (-1) - K-map #1 missed a wrap-around(-1) - K-map #2 added an extra term, if both boxes are already used in another simplification then adding a circle around them with solely add unnecessary logic.","100","","99","netid: jvenditt
Score: 99.0

Comments: 
    Problem 5: -1.0; Part B: Incorrect simplification.  Should be a'b'd (-1)","99","-1: Incorrect assignment operator in initial block  Should just be a regular =, not <= ","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"68",,"5",,"3",,"34",,"6",,"4",
"mwade","Wade, Michael","95",,,,"83",,"95","Part 3: Didn't address whether C  cares about the overflow (-2).Part 4: Missing 0xC hex representation for first line of table (-1). Masks are incorrect -- keep in mind that each hex digit represents 4 binary bits so you only need to have one f in the first to affect the last 4 bits (-2)Otherwise, great work!","98.5","Part 1: Incorrect, the add instruction encoding is stored at memory address 0x0002 (-.5). You are not allowed to use the add operation for storing 0xabcd in this problem; use or instead (-1).Great work!","100","","96","netid: mwade
Score: 96.0

Comments: 
    Problem 2: -2.0; Part C, You have 9 bit outputs, which are not possible given the problem specifications of 8-bit.
    Problem 3: -2.0; You made a small mistake reading 2^1 as 1 instead of 2.","97.5","-1 decoder logic for out[0] incorrect-0.5 Netlist has an incorrectly constructed decoder-1 missing Quartus warnings on error 1","100","Great work!!","100","","99","netid: mwade
Score: 99.0

Comments: 
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.","100","Good work","100",,,,"0",,"5",,"4",,"72",,"0",,"0",,"1",,"64",,"5",,,,"31",,"6",,,
"jwalsh23","Walsh, Jack","92",,,,"100",,"97","Part 6: You have left and right shifting backwards; shifting left (<<) will generally multiply a number by 2 and shifting right (>>) will generally divide a number by 2. All your program operations for this section are therefore backwards, but I won't take off extra (-3)","98","Part 1: r2 is a register, not a memory location, so the add instruction is not stored there (-.5). Didn't mention that the return code comes from register r0 (-.5)Part 3: Didn't include load instruction for loading value of A into r1 (-1)Great work!","99","Q4 (-1): The only option that fails to compile is using one wire to connect multiple output ports to one input port.","88","netid: jwalsh23
Score: 88.0

Comments: 
    Problem 4: -2.0; -130 is impossible
    Problem 5: -10.0; No binary sum or overflow comment on A, B, D. No binary or hex value on C and E.","97.5","-0.5 mistake in tabulator logic with one of the OR gates-0.5 Netlist shows error in tabulator logic-0.5 no statement on internal wire in error 1-0.5 no statement on internal wire in error 2-0.5 no statement on internal wire in error 3","96.5","Ensure the full value can be read in the waveform. i.e. press f when clicked on the waveform(-1.5) - Make sure to follow the instructions as to what value type is desired in the waveform(-2) - K-maps missed the wrap-around on #1 and #4","100","","96","netid: jwalsh23
Score: 96.0

Comments: 
    Problem 4: -1.0; Should not have simplified beyond (a'+c)(a'+b'+d)(a'+c'+d')
    Problem 5: -2.0; Part A: Incorrect simplification. Should be a+bd (-1)
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.","99","-1: In my_dff, the initial q = 0; should have a regular assignment operator (=), not <=","100",,,,"79",,"2",,"4",,"72",,"59",,"52",,"1",,"61",,"5",,"3",,"24",,"6",,"4",
"swells3","Wells, Spencer","89",,,,"80",,"96","Part 6: Incorrect decimal value of left shifts (should be 20 and 40) (-2). In your program, your left shifts seem to be done correctly, but the output you submitted shows it outputting 22 and 44, which does not make sense (-2).","96","Part 1: Didn't mention that the return code comes from register r1 (-.5). Missing loading in a shift value and shifting the value for 0xabcd (-2)Part 2: Bits 7:4 of the st instruction are 0xb, since the input register is r11 (-1). *A is just the value at A[0], so 7 (-.5).Part 4: The imm8 value doesn't technically have an ""upper byte"" and ""lower byte"" since it is only 8 bits total, but otherwise your explanation of the encoding is good.Great work!","99","Q4 (-1): You are correct that using one wire to connect multiple output ports to one input port would fail to compile, however you can still connect a port of one module to another if both ports have the same name. Syntax would be: module module1 (.inExample (inExample)); ","88","netid: swells3
Score: 88.0

Comments: 
    Problem 2: -2.0; Part B, your 2^x terms look correct, but they do correspond to your binary number. Ex. 2^7 should make the most significant bit 1, not the second most significant bit. Part C, for the same reason as the binary conversion, you can not covert decimal 267 to 8-bit hex. 0xFB = 11111010 != 267
    Problem 3: -2.0; Hex values can't be negative, they are just read as the 4 bits
    Problem 4: -4.0; The hex values are incorrect for C and D
    Problem 5: -2.0; Incorrect binary and hex for A
    Problem 6: -2.0; Used ""!"" instead of ""~""","0","No submission","98.5","(-.5) - Ensure to follow the told value types for the waveforms(-1) - K-map #2 you added an extra minterm b'c is not needed","97","Op was padded with one instead of zero in text and data. (-3)","99","netid: swells3
Score: 99.0

Comments: 
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.","100","Good work","100",,,,"79",,"5",,"4",,"75",,"67",,"57",,"1",,"68",,"5",,"3",,"40",,"6",,,
"jwelter2","Welter, Justin","93.5",,,,"100",,"96","Part 3: C does not care; the number overflows and C does not detect an error (-1).Part 6: You have left shift (<<) and right shift (>>) backwards; shifting left moves the bits to the left and thus doubles the value, whereas shifting right moves the bits to the right and thus halves the value (-3). Your program shift operations are all backwards as a result, but I won't take off extra.","98","Part 1: The return value comes from r0, not the program counter (-.5). When loading in 0xabcd, you could have done 8 bits at a time (ab and then cd).Part 2: The value is 0xB because you are loading into r11, not r10. This is the 12th register technically but it is still referred to in the encoding as 0xb (11). (-.5).Part 6: jal fun2 is at 0x0004 (-.5). The and instruction does not perform addition as in C; it effectively just copies the value of r0 into r1 in this case (-.5).Great work!","98","Please submit the .qar file with your future studios.Tabulator (-2): 'or' operations are represented by '|', not '+'.","90","netid: jwelter2
Score: 90.0

Comments: 
    Problem 1: -4.0; Missing decimal conversion
    Problem 6: -6.0; Used ""=="" and ""!="" to test for overflow rather than ""&"", ""|"", or ""~"".","87.5","-2 tabulator logic incorrect as reflected in netlist: no OR gates, adder present-0.5 internal wire in waveform not shown-10 no QAR file submitted","98","(-.5) - Ensure to follow the told value type for the waveform(-1) - The photo doesn't contain the LEDG so I can't tell if it is on or not(-0.5) - I can't immediately see why, but your overflow on Part 5 is wrong. Idk why this is because it is correct above and in your logic.","100","","97","netid: jwelter2
Score: 97.0

Comments: 
    Problem 4: -3.0; Did not apply DeMorgan's Law correctly.  Your first step was incorrect. Final answer should be (a'+c)(a'+b'+d)(a'+c'+d') (-3)","100","Good work","100",,,,"79",,"2",,"2",,"76",,"68",,"57",,"1",,"69",,"4",,"1",,"38",,"4",,,
"kwong6","Wong, Kekoa","99",,,,"100",,"95","Part 6: Did not demonstrate shifting right with a negative number (-5)","97.5","Part 1: Hex encoding is 0x7105 (-.5) For the XOR, you should have OR'd r11 and r13 (-1).Part 2: Didn't provide the values of &A and *(&A) (-1). Great work!","100","Please submit the .qar file with your future studios.Well done.","99","netid: kwong6
Score: 99.0

Comments: 
    Problem 3: -1.0; Small mistake with reading D instead of E from 1110","99","-0.5 internal wire not shown in waveform-0.5 Quartus warnings for error 3 not acknowledged","99.5","To simplify your testbenches, you can set a multi-bit variable as a = 3'd0; instead of a[0] = 0; a[1] = 0; a[2] = 0;(-.5) - Ensure you match the variable types we specify for the waveforms ","100","","39.5","netid: kwong6
Score: 79.0
-50% for late submission
Comments: 
    Problem 5: -1.0; Part A: Incorrect simplification. Should be a+bd (-1)
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.
    Problem 7: -19.0; (a) Incomplete, -4 (b) No answer -5 (c) No answer -5 (d) No answer -5","99","-1: Did not initialize output register q in my_dff ","100",,,,"79",,"5",,"4",,"76",,"68",,"57",,"1",,"66",,"5",,"3",,"39",,"6",,,
"kwyatt","Wyatt, Katelyn","100",,,,"100",,"98","Part 5: Incorrect hex value for the first line of the table; since the number is only 4 bits, it should just be 0xC (-1).Part 6: You are correct in saying that a right shift would decrease the magnitude of the number, but more precisely, it generally halves the value of the number (-1).Great work!","95.5","Part 1: Hex encoding should be 0x7105 (-.5)
Part 2: Bits 7:4 at memory address 2 are 0xb, the ra argument (-1). Bits 7:4 at memory address 3 are 0x0, the displacement for the load instruction (-1). The value of A is the memory address of the array, 0xa0
Part 6: fun1 is at address 0006 and fun2 is at address 0008 (-1). jal fun1 is at memory address 2 (-.5). jal fun2 is at memory address 0008 (-.5).
Great work!","99","Q4 (-1): You are correct that using one wire to connect multiple output ports to one input port would fail to compile, however, neglecting to connect a port of an instantiated module will still compile. If you were to testbench a module without an input port connected, you would not see a green line, but it would compile.","88","netid: kwyatt
Score: 88.0

Comments: 
    Problem 4: -2.0; 153 is impossible
    Problem 5: -4.0; Incorrect binary and hex for D and E
    Problem 6: -6.0; Missing values in decimal and hex. Used ""=="" to test for overflow rather than ""&"", ""|"", or ""~"".","100","","97","(-.5) - For your waveforms, only the waveforms and variable names matter, so make sure to focus the screenshot only on them and to be zoomed in enough to have the values be displayed.(-.5) - Make sure to follow the specified value types for the waveforms(-1) - Mixed up a and b in the subtractor(-1) - Missed the wrap around on #1 for K-map","100","","99","netid: kwyatt
Score: 99.0

Comments: 
    Problem 5: -1.0; Part A: Incorrect simplification. Should be a+bd (-1)","98","-1: Did not run LFSR testbench for 20 clock cycles-1: Did not set radix for q to hex in waveform ","76",,,,"78",,"5",,"4",,"76",,"68",,"57",,"1",,"69",,"5",,"3",,"40",,"6",,,
"ayin","Yin, Andrew","77",,,,"100",,"92","When translating from hex to int, keep in mind that you're not simply changing the hex values and placing them next to each other. For example, 0xFF is 255, and not 1515. In Part 1, 0100 1010 translates to 4A in hex (which you got), but in decimal, is 74 and not 410. In Part 2, keep in mind that hex values aren't single bits. They're representations for 4 bits, so the most significant bit cannot be a hex value.  The most significant bit represents whether it's negative or not, by being 1 or 0. Additionally, you did get the most positive value correct. However, remember that negative signs don't exist in binary, so your answer of -0x7FFFFFFF doesn't exist. The correct answer is 0x8000 0000In Part 5, remember that the question is asking for a 32-bit value to mask with. Your answer is only 4 bits. Additionally, your masking is incorrect. Shifting to the left doubles the value, shifting to the right divides the value by 2. ","93.5","Part 1: Hex encoding should be 0x7105 (-.5). Didn't write 0xabcd to r5 (-1).
Part 3: When accessing the elements of A, you should have used the entire address (using the shift method from the previous problem). Only using the lower half of the address gets you the correct result here but would run you into trouble if the array was stored in a higher address (-1). Also, you never stored the sum back into A[2] (-1).
Part 6: The problem with calling fun2 inside of fun1 is that the PC value in r15 will get overwritten and so when fun1 attempts to use the instruction, it will jump back to where fun2 jumped back to. Your solution doesn't work because fun2 will never actually get called (jr r15 will make fun1 return to main right after the add instruction) (-3).
Great work!
 ","99","Q4 (-1): Neglecting to connect a port of an instantiated module will still compile. If you were to testbench a module without an input port connected, you would not see a green line, but it would compile. On the other hand, if you connect multiple output ports together into one input port, it would fail to compile, because you can not drive logic from two different sources.","96","netid: ayin
Score: 96.0

Comments: 
    Problem 4: -4.0; 153 and -130 are outside of the possible range","98.5","-0.5 no comment made on internal wire in error 1-0.5 no comment made on internal wire in error 2-0.5 no comment made on internal wire in error 3","95","(-4) - Incorrect waveforms caused by logic errors Part 3(-.5) - Ensure you hae the correct variable types for waveforms. i.e. the ones stated in the problem above(-.5) - Have the output on one of the sides, having it in the middle is confusing and makes it harder to read","94","Text and data contains incorrect syntax, the instructions state to format each input as ""a: value"". For example, if a = 2, then ""a: 2"". Also, the opcode should be padded with zeros, not ones. (-6)","96","netid: ayin
Score: 96.0

Comments: 
    Problem 4: -1.0; Should not have simplified beyond (a'+c)(a'+b'+d)(a'+c'+d')
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 8: -2.0; r7 = A needs to construct the address from high(A) and low(A) by shifting the high to left left, and 'or'ing with the low bits.","99","-1: Did not invert the key in LFSR_de2 ","100",,,,"0",,"5",,"4",,"74",,"6",,"53",,"1",,"61",,"5",,"3",,,,"2",,,
"syun2","Yun, Seo Jin","73",,,,"47",,"93","Don't forget to include your name in the future. The most significant bit cannot have a value greater than the rest of the bits added (unless it's only 1 bit?). This bit tells you whether the integer is negative (1) or positive (0). Search up 2's complement for a more in-depth explanation. As such, the most negative value is 8000 0000. In Part 5, the question asks for a 32 bit value, but you only gave 8-bit values as your response. In Part 5, Problem 2, the answer should have been 0x0000000F.Make sure that you answer the questions completely.","93","Part 1: Did not write 0xabcd to register r5 (-1).
Part 3: When accessing the elements of A, you should have used the entire address (using the shift method from the previous problem). Only using the lower half of the address gets you the correct result here but would run you into trouble if the array was stored in a higher address (-1). Also, you never stored the sum back into A[2] (-1).
Part 6: Did not include coded solution for the final part (-4).","100","","86","netid: syun2
Score: 86.0

Comments: 
    Problem 1: -1.0; Part B, 0xE = decimal 14, not 15, which makes your addition for decimal one off.
    Problem 2: -4.0; Missing hex conversions
    Problem 5: -2.0; Incorrect binary sum for C. No hex for E. In the future please write no overflow cases too.
    Problem 8: -7.0; your answers are incorrect for the three test cases. The problem comes with the shift operation, you should do multiplicand =  multiplicand << 1; otherwise your answer is multiplicand * 8. same with multiplier.","98","-0.5 internal wire not shown in waveform-0.5 no comment on internal wire in error 1-0.5 no comment on internal wire in error 2-0.5 no comment on internal wire in error 3","97","(-.5) - your overflow prediction in the table are not correct if you add two negatives and the leading bit is a 1 that is not overflowing.(-.5) - Ensure you used the variable types for the waveforms that are declared.(-1) - Used 6 instead of the told 2 for the subtractor for b(-1) - K-map #2 added an unnecessary term ","100","","92","netid: syun2
Score: 92.0

Comments: 
    Problem 3: -2.0; Incorrect truth table mapping
    Problem 5: -1.0; Part A: Incorrect simplification. Should be a+bd (-1)
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.  
    Problem 8: -4.0; Starting address of 'mult' is at 0x000b, as that is where your jal jumps to. Starting address of A is at 0x0018, as seen in instruction 0x0001.","99","-1: Did not invert the key in system_de2","98",,,,"79",,"5",,"4",,"72",,"68",,"57",,"1",,"65",,"5",,"2",,"39",,"6",,,
"hzhu7","Zhu, Hanjing","99",,,,"100",,"97","It looks like you understand negative ints, but just to be clear - it's the left-most bit that indicates whether it's negative or not, not necessarily ""negative ints will start with 1"". Keep in mind that 0xF is a hex value, which translates to 1111. Therefore, 0xF isn't a single bit, since it represents 4 bits. Only the left most bit matters. I didn't take off points because of your previous answer, but make sure that you answer the questions correctly and in the format requested. ","98","Part 3: In the final part, you should have used the shift method from the previous problem to get the address of A into a register. Simply writng ldi r10, A will not work for a 16-bit address (-1).
Part 5: Incorrect explanation for why calling fun2 inside of fun1 doesn't work; the problem is that the return address in r15 gets overwritten when the second function is called (-1). Your solution to the next part technically works for this example, but typically we would want to be able to return to the main function rather than just quitting the program entirely.","99","Q4 (-1): You are correct that using one wire to connect multiple output ports to one input port would fail to compile. If you do not connect a port on an instantiated module, it will still compile, but if you testbench it, an unconnected input could lead to some unexpected behavior.","99","netid: hzhu7
Score: 99.0

Comments: 
    Problem 6: -1.0; bitwise or should be ""|"" not ""||""","98.5","-0.5 no comment made on internal connecting wire in error 1-0.5 no comment made on internal connecting wire in error 2-0.5 no comment made on internal connecting wire in error 3","98.5","(-.5) - Ensure you used the variable types declared in the problem(-1) - K-map #4 missed a wrap-around","100","","98","netid: hzhu7
Score: 98.0

Comments: 
    Problem 5: -1.0; Part A: Incorrect simplification. Should be a+bd (-1)
    Problem 6: -1.0; Shouldn't include abc, ab'c, or ab'c' in truth table.","98","-1: In my_dff, should use a regular assignment operator (=) instead of <= to initialize q-1: in the LFSR module file, omitted outer parentheses in ~(q[3]^q[0]), which changes the way the expression is interpreted and compiled  ","100",,,,"79",,"5",,"4",,"76",,"67",,"57",,"1",,"68",,"5",,"3",,"39",,"6",,,
